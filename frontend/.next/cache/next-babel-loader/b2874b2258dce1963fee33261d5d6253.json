{"ast":null,"code":"/**\n|--------------------------------------------------\n| Badge API \n|--------------------------------------------------\n*/\nexport const badgePropsData = [{\n  property: 'icon',\n  description: 'set the icon of badge, see: Icon component of baseweb Or react-icons',\n  type: 'React.ReactNode',\n  default: '-',\n  version: '1.0'\n}, {\n  property: 'count',\n  description: 'set the count number of badge',\n  type: 'Number',\n  default: '-',\n  version: ''\n}, {\n  property: 'color',\n  description: 'set the text color of count number',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'bgColor',\n  description: 'set the background-color of count number',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'path',\n  description: 'if you want add link to badge',\n  type: 'String',\n  default: '',\n  version: ''\n}, {\n  property: 'onClick',\n  description: 'set the handler to handle click event',\n  type: '(event) => void',\n  default: '-',\n  version: ''\n}, {\n  property: 'style',\n  description: 'add your custom style',\n  type: 'React.CSSProperties',\n  default: '-',\n  version: ''\n}];\n/**\n|--------------------------------------------------\n| Carousel API \n|--------------------------------------------------\n*/\n\nexport const carouselPropsData = [{\n  property: 'className',\n  description: 'set the className of carousel',\n  type: 'String',\n  default: '-',\n  version: '1.0'\n}, {\n  property: 'children',\n  description: 'add Slide component or any other React component',\n  type: 'React.ReactNode',\n  default: '-',\n  version: ''\n}, {\n  property: 'carouselSelector',\n  description: 'add a unique string for carousel id',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'options',\n  description: 'we use glide carousel. Here is the <a href=\"https://glidejs.com/docs/options/\">carousel options</a>.',\n  type: 'Object',\n  default: '-',\n  version: ''\n}, {\n  property: 'controls',\n  description: 'if you want to show and hide previous and next button',\n  type: 'Boolean',\n  default: '',\n  version: ''\n}, {\n  property: 'bullets',\n  description: \"if you want to show and hide carousel bullet. It's requried numberOfBullets prop\",\n  type: 'Boolean',\n  default: '-',\n  version: ''\n}, {\n  property: 'numberOfBullets',\n  description: 'it should be a number which is equal to your Slide items',\n  type: 'Number',\n  default: '-',\n  version: ''\n}, {\n  property: 'thumbs',\n  description: 'it should be an array that contain Slide images',\n  type: 'Array',\n  default: '-',\n  version: ''\n}, {\n  property: 'prevButton',\n  description: 'add previous icon or button',\n  type: 'React.ReactNode',\n  default: '-',\n  version: ''\n}, {\n  property: 'nextButton',\n  description: 'add next icon or button',\n  type: 'React.ReactNode',\n  default: '-',\n  version: ''\n}];\n/**\n|--------------------------------------------------\n| CartProduct API \n|--------------------------------------------------\n*/\n\nexport const cartProductPropsData = [{\n  property: 'thumbUrl',\n  description: 'set the image of CartProduct, see: <a target=\"_blank\" href=\"https://github.com/twopluszero/next-images#readme\">next-images</a> package for use',\n  type: 'String',\n  default: '-',\n  version: '1.0'\n}, {\n  property: 'title',\n  description: 'set the title of product',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'quantity',\n  description: 'set the quantity of product',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'price',\n  description: 'set the price of product',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'color',\n  description: 'set the color of product',\n  type: 'String',\n  default: '',\n  version: ''\n}, {\n  property: 'hideBorderBottom',\n  description: 'show/hide border bottom of the CartProduct',\n  type: 'Boolean',\n  default: '',\n  version: ''\n}, {\n  property: 'removable',\n  description: 'show/hide the remove button',\n  type: 'Boolean',\n  default: '',\n  version: ''\n}, {\n  property: 'onClick',\n  description: 'first you need to set removable pron then set the handler to handle click event for remove',\n  type: '(event) => void',\n  default: '-',\n  version: ''\n}, {\n  property: 'style',\n  description: 'add your custom style',\n  type: 'React.CSSProperties',\n  default: '-',\n  version: ''\n}];\n/**\n|--------------------------------------------------\n| InstagramCard API \n|--------------------------------------------------\n*/\n\nexport const instagramCardPropsData = [{\n  property: 'type',\n  description: 'set the card type, it should be default | gallery | video',\n  type: 'String',\n  default: '-',\n  version: '1.0'\n}, {\n  property: 'image',\n  description: 'set the card image, see: <a target=\"_blank\" href=\"https://github.com/twopluszero/next-images#readme\">next-images</a> package for use',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'numberOfView',\n  description: 'it will show if type is video',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'numberOflike',\n  description: 'it will only show for gallery and post type',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'numberOfcomment',\n  description: 'show number of comments on the post',\n  type: 'String',\n  default: '',\n  version: ''\n}, {\n  property: 'onClick',\n  description: 'if you want to handle any event',\n  type: '(event) => void',\n  default: '-',\n  version: ''\n}, {\n  property: 'style',\n  description: 'add your custom style',\n  type: 'React.CSSProperties',\n  default: '-',\n  version: ''\n}];\n/**\n|--------------------------------------------------\n| ProductCard API \n|--------------------------------------------------\n*/\n\nexport const productCardPropsData = [{\n  property: 'href',\n  description: 'set the link to navigate single product page.',\n  type: 'any',\n  default: '-',\n  version: '1.0'\n}, {\n  property: 'as',\n  description: 'if you are use dynamic route then use this prop, for more details check <a target=\"_blank\" href=\"https://nextjs.org/docs#with-link\">this</a> doc',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'alignItem',\n  description: \"it's control text-align\",\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'thumb',\n  description: 'set product image',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'title',\n  description: 'set the product title',\n  type: 'String',\n  default: '',\n  version: ''\n}, {\n  property: 'price',\n  description: 'set price',\n  type: 'String | Number',\n  default: '-',\n  version: ''\n}];\n/**\n|--------------------------------------------------\n| PricingCard API \n|--------------------------------------------------\n*/\n\nexport const pricingCardPropsData = [{\n  property: 'type',\n  description: 'set the pricing plan type, it should be Free | Primary | Advance',\n  type: 'String',\n  default: '-',\n  version: '1.0'\n}, {\n  property: 'title',\n  description: 'set the PricingCard title',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'items',\n  description: 'set your features / services',\n  type: 'ArrayOfObject',\n  default: '-',\n  version: ''\n}, {\n  property: 'price',\n  description: 'set price',\n  type: 'String | Number',\n  default: '-',\n  version: ''\n}, {\n  property: 'btn',\n  description: 'set pricing card button text',\n  type: 'String',\n  default: '',\n  version: ''\n}, {\n  property: 'onClick',\n  description: 'if you want to handle any event',\n  type: '(event) => void',\n  default: '-',\n  version: ''\n}, {\n  property: 'isLoading',\n  description: 'configure loading stage for button',\n  type: 'Boolean',\n  default: '-',\n  version: ''\n}];\n/**\n|--------------------------------------------------\n| ListGridCard API \n|--------------------------------------------------\n*/\n\nexport const listGridCardPropsData = [{\n  property: 'variant',\n  description: 'set variant to get list | grid view card',\n  type: 'String',\n  default: '-',\n  version: '1.0'\n}, {\n  property: 'thumb',\n  description: 'set the thumbnail image for card',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'thumbWidth',\n  description: 'customize thumbnail image width using this prop',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'thumbHeight',\n  description: 'customize thumbnail image height using this prop',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'title',\n  description: 'set the card title',\n  type: 'String',\n  default: '',\n  version: ''\n}, {\n  property: 'description',\n  description: 'set the card description',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'author',\n  description: 'set the author name',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'authorUrl',\n  description: 'set the author profile link',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'btn',\n  description: 'set your card button',\n  type: 'React.ReactNode',\n  default: '-',\n  version: ''\n}, {\n  property: 'style',\n  description: 'set custom style',\n  type: 'React.CSSProperties',\n  default: '-',\n  version: ''\n}];\n/**\n|--------------------------------------------------\n| PageTitle API \n|--------------------------------------------------\n*/\n\nexport const pageTitlePropsData = [{\n  property: 'title',\n  description: 'set the title',\n  type: 'String',\n  default: '-',\n  version: '1.0'\n}, {\n  property: 'subtitle',\n  description: 'set the subtitle',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'bgColor',\n  description: 'set the background-color',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'backdrop',\n  description: 'show/hide backdrop',\n  type: 'Boolean',\n  default: '-',\n  version: ''\n}];\n/**\n|--------------------------------------------------\n| WidgetCard API \n|--------------------------------------------------\n*/\n\nexport const widgetCardPropsData = [{\n  property: 'icon',\n  description: 'set the card icon',\n  type: 'React.ReactNode',\n  default: '-',\n  version: '1.0'\n}, {\n  property: 'title',\n  description: 'add your widget title',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'description',\n  description: 'set the description of your widget card',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'btntext',\n  description: 'add button text, for example View report',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'label',\n  description: 'add card label, for example Total orders',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'color',\n  description: 'set icon bg and button text color',\n  type: 'String',\n  default: '-',\n  version: ''\n}, {\n  property: 'style',\n  description: 'set custom style',\n  type: 'React.CSSProperties',\n  default: '-',\n  version: ''\n}, {\n  property: 'onClick',\n  description: 'if you want to handle any event',\n  type: '(event) => void',\n  default: '-',\n  version: ''\n}];","map":{"version":3,"sources":["/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/data/uiElementsApiData.js"],"names":["badgePropsData","property","description","type","default","version","carouselPropsData","cartProductPropsData","instagramCardPropsData","productCardPropsData","pricingCardPropsData","listGridCardPropsData","pageTitlePropsData","widgetCardPropsData"],"mappings":"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","sourcesContent":["/**\n|--------------------------------------------------\n| Badge API \n|--------------------------------------------------\n*/\nexport const badgePropsData = [\n  {\n    property: 'icon',\n    description:\n      'set the icon of badge, see: Icon component of baseweb Or react-icons',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'count',\n    description: 'set the count number of badge',\n    type: 'Number',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'color',\n    description: 'set the text color of count number',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'bgColor',\n    description: 'set the background-color of count number',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'path',\n    description: 'if you want add link to badge',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'set the handler to handle click event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'add your custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },\n];\n\n/**\n|--------------------------------------------------\n| Carousel API \n|--------------------------------------------------\n*/\nexport const carouselPropsData = [\n  {\n    property: 'className',\n    description: 'set the className of carousel',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'children',\n    description: 'add Slide component or any other React component',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'carouselSelector',\n    description: 'add a unique string for carousel id',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'options',\n    description:\n      'we use glide carousel. Here is the <a href=\"https://glidejs.com/docs/options/\">carousel options</a>.',\n    type: 'Object',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'controls',\n    description: 'if you want to show and hide previous and next button',\n    type: 'Boolean',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'bullets',\n    description:\n      \"if you want to show and hide carousel bullet. It's requried numberOfBullets prop\",\n    type: 'Boolean',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOfBullets',\n    description: 'it should be a number which is equal to your Slide items',\n    type: 'Number',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumbs',\n    description: 'it should be an array that contain Slide images',\n    type: 'Array',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'prevButton',\n    description: 'add previous icon or button',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'nextButton',\n    description: 'add next icon or button',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n];\n\n/**\n|--------------------------------------------------\n| CartProduct API \n|--------------------------------------------------\n*/\nexport const cartProductPropsData = [\n  {\n    property: 'thumbUrl',\n    description:\n      'set the image of CartProduct, see: <a target=\"_blank\" href=\"https://github.com/twopluszero/next-images#readme\">next-images</a> package for use',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'title',\n    description: 'set the title of product',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'quantity',\n    description: 'set the quantity of product',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'price',\n    description: 'set the price of product',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'color',\n    description: 'set the color of product',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'hideBorderBottom',\n    description: 'show/hide border bottom of the CartProduct',\n    type: 'Boolean',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'removable',\n    description: 'show/hide the remove button',\n    type: 'Boolean',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description:\n      'first you need to set removable pron then set the handler to handle click event for remove',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'add your custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },\n];\n\n/**\n|--------------------------------------------------\n| InstagramCard API \n|--------------------------------------------------\n*/\nexport const instagramCardPropsData = [\n  {\n    property: 'type',\n    description: 'set the card type, it should be default | gallery | video',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'image',\n    description:\n      'set the card image, see: <a target=\"_blank\" href=\"https://github.com/twopluszero/next-images#readme\">next-images</a> package for use',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOfView',\n    description: 'it will show if type is video',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOflike',\n    description: 'it will only show for gallery and post type',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'numberOfcomment',\n    description: 'show number of comments on the post',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'if you want to handle any event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'add your custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },\n];\n\n/**\n|--------------------------------------------------\n| ProductCard API \n|--------------------------------------------------\n*/\nexport const productCardPropsData = [\n  {\n    property: 'href',\n    description: 'set the link to navigate single product page.',\n    type: 'any',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'as',\n    description:\n      'if you are use dynamic route then use this prop, for more details check <a target=\"_blank\" href=\"https://nextjs.org/docs#with-link\">this</a> doc',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'alignItem',\n    description: \"it's control text-align\",\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumb',\n    description: 'set product image',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'title',\n    description: 'set the product title',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'price',\n    description: 'set price',\n    type: 'String | Number',\n    default: '-',\n    version: '',\n  },\n];\n\n/**\n|--------------------------------------------------\n| PricingCard API \n|--------------------------------------------------\n*/\nexport const pricingCardPropsData = [\n  {\n    property: 'type',\n    description:\n      'set the pricing plan type, it should be Free | Primary | Advance',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'title',\n    description: 'set the PricingCard title',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'items',\n    description: 'set your features / services',\n    type: 'ArrayOfObject',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'price',\n    description: 'set price',\n    type: 'String | Number',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'btn',\n    description: 'set pricing card button text',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'if you want to handle any event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'isLoading',\n    description: 'configure loading stage for button',\n    type: 'Boolean',\n    default: '-',\n    version: '',\n  },\n];\n\n/**\n|--------------------------------------------------\n| ListGridCard API \n|--------------------------------------------------\n*/\nexport const listGridCardPropsData = [\n  {\n    property: 'variant',\n    description: 'set variant to get list | grid view card',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'thumb',\n    description: 'set the thumbnail image for card',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumbWidth',\n    description: 'customize thumbnail image width using this prop',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'thumbHeight',\n    description: 'customize thumbnail image height using this prop',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'title',\n    description: 'set the card title',\n    type: 'String',\n    default: '',\n    version: '',\n  },\n  {\n    property: 'description',\n    description: 'set the card description',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'author',\n    description: 'set the author name',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'authorUrl',\n    description: 'set the author profile link',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'btn',\n    description: 'set your card button',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'set custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },\n];\n\n/**\n|--------------------------------------------------\n| PageTitle API \n|--------------------------------------------------\n*/\nexport const pageTitlePropsData = [\n  {\n    property: 'title',\n    description: 'set the title',\n    type: 'String',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'subtitle',\n    description: 'set the subtitle',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'bgColor',\n    description: 'set the background-color',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'backdrop',\n    description: 'show/hide backdrop',\n    type: 'Boolean',\n    default: '-',\n    version: '',\n  },\n];\n\n/**\n|--------------------------------------------------\n| WidgetCard API \n|--------------------------------------------------\n*/\nexport const widgetCardPropsData = [\n  {\n    property: 'icon',\n    description: 'set the card icon',\n    type: 'React.ReactNode',\n    default: '-',\n    version: '1.0',\n  },\n  {\n    property: 'title',\n    description: 'add your widget title',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'description',\n    description: 'set the description of your widget card',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'btntext',\n    description: 'add button text, for example View report',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'label',\n    description: 'add card label, for example Total orders',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'color',\n    description: 'set icon bg and button text color',\n    type: 'String',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'style',\n    description: 'set custom style',\n    type: 'React.CSSProperties',\n    default: '-',\n    version: '',\n  },\n  {\n    property: 'onClick',\n    description: 'if you want to handle any event',\n    type: '(event) => void',\n    default: '-',\n    version: '',\n  },\n];\n"]},"metadata":{},"sourceType":"module"}