{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/pages/apps/github.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SearchRepositories($queryString: String!) {\\n    search(query: $queryString, type: REPOSITORY, first: 10) {\\n      repositoryCount\\n      edges {\\n        node {\\n          ... on Repository {\\n            id\\n            name\\n            nameWithOwner\\n            description\\n            repositoryTopics(first: 5) {\\n              nodes {\\n                id\\n                topic {\\n                  id\\n                  name\\n                }\\n              }\\n            }\\n            stargazers {\\n              totalCount\\n            }\\n            forks {\\n              totalCount\\n            }\\n            updatedAt\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport { GoStar } from 'react-icons/go';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport { Search } from 'baseui/icon';\nimport { Input } from 'baseui/input';\nimport { Tag } from 'baseui/tag';\nimport Container from '../../components/UiElements/Container/Container';\nimport ListGridCard from '../../components/UiElements/ListGridCard/ListGridCard';\nimport AppsMenu from '../../components/SideMenu/AppsMenu';\nimport { withApollo } from '../../apollo/github.client';\nimport { useQuery } from '@apollo/react-hooks';\nvar GetRepositoriesBySearch = gql(_templateObject());\nvar TITLE = 'Github Search';\nvar INITIAL_SEARCH_TEXT = 'react';\n\nvar Github = function Github() {\n  var _React$useState = React.useState(INITIAL_SEARCH_TEXT),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchText = _React$useState2[0],\n      setSearchText = _React$useState2[1];\n\n  var _useQuery = useQuery(GetRepositoriesBySearch, {\n    variables: {\n      queryString: INITIAL_SEARCH_TEXT\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch;\n\n  if (loading) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Error! $\", error.message);\n  console.log(data, loading, error, 'error git');\n\n  function onSearch(e) {\n    console.log(e);\n    e.preventDefault();\n    refetch({\n      queryString: searchText\n    });\n  }\n\n  function After() {\n    return __jsx(Block, {\n      overrides: {\n        Block: {\n          style: function style(_ref) {\n            var $theme = _ref.$theme;\n            return {\n              display: 'flex',\n              alignItems: 'center',\n              paddingLeft: $theme.sizing.scale500,\n              paddingRight: $theme.sizing.scale500\n            };\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(Search, {\n      size: \"24px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n  var _ref2 = data && data.search,\n      repositoryCount = _ref2.repositoryCount,\n      edges = _ref2.edges;\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, TITLE, \" | INST.\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst Github app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['15px', '20px', '30px', '40px'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Col, {\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(AppsMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), __jsx(Col, {\n    lg: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['10px', '10px', 0],\n    paddingBottom: \"25px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Block, {\n    as: \"h3\",\n    overrides: {\n      Block: {\n        style: function style(_ref3) {\n          var $theme = _ref3.$theme;\n          return _objectSpread({}, $theme.typography.font450, {\n            color: $theme.colors.primary,\n            marginBottom: '10px'\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, TITLE), __jsx(Block, {\n    as: \"p\",\n    overrides: {\n      Block: {\n        style: function style(_ref4) {\n          var $theme = _ref4.$theme;\n          return _objectSpread({}, $theme.typography.font200, {\n            color: $theme.colors.primary600\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(Block, {\n    as: \"span\",\n    overrides: {\n      Block: {\n        style: function style(_ref5) {\n          var $theme = _ref5.$theme;\n          return {\n            color: $theme.colors.primary,\n            marginRight: '5px'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, repositoryCount))), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: function style(_ref6) {\n          var $theme = _ref6.$theme;\n          return {\n            paddingBottom: '40px',\n            borderBottom: \"1px solid \".concat($theme.colors.primary100),\n            '@media only screen and (max-width: 991px)': {\n              paddingBottom: '30px'\n            }\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: onSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(Input, {\n    overrides: {\n      After: After\n    },\n    placeholder: \"Search\",\n    value: searchText,\n    onChange: function onChange(e) {\n      return setSearchText(e.target.value);\n    } // onKeyPress={onSearch}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }))), edges.map(function (_ref7) {\n    var node = _ref7.node;\n    return __jsx(Block, {\n      key: \"github-repo--key\".concat(node.id),\n      overrides: {\n        Block: {\n          style: function style(_ref8) {\n            var $theme = _ref8.$theme;\n            return {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              paddingTop: '23px',\n              paddingBottom: '20px',\n              borderBottom: \"1px solid \".concat($theme.colors.primary100)\n            };\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, __jsx(ListGridCard, {\n      title: node.nameWithOwner,\n      description: node.description,\n      btn: node.repositoryTopics.nodes.map(function (item) {\n        return __jsx(Tag, {\n          key: item.id,\n          overrides: {\n            Root: {\n              style: {\n                marginTop: '15px'\n              }\n            }\n          },\n          closeable: false,\n          variant: \"solid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, item.topic.name);\n      }),\n      style: {\n        alignItems: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), __jsx(Button, {\n      kind: \"secondary\",\n      overrides: {\n        BaseButton: {\n          style: function style(_ref9) {\n            var $theme = _ref9.$theme;\n            return _objectSpread({\n              minWidth: '80px',\n              justifyContent: 'space-around',\n              flexShrink: 0\n            }, $theme.typography.font250);\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, __jsx(GoStar, {\n      style: {\n        flexShrink: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), __jsx(Block, {\n      paddingLeft: \"5px\",\n      paddingRight: \"5px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, node.stargazers.totalCount)));\n  }))))));\n};\n\nexport default withApollo(Github);","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/pages/apps/github.tsx"],"names":["React","gql","Head","GoStar","Row","Col","Block","Button","Search","Input","Tag","Container","ListGridCard","AppsMenu","withApollo","useQuery","GetRepositoriesBySearch","TITLE","INITIAL_SEARCH_TEXT","Github","useState","searchText","setSearchText","variables","queryString","data","loading","error","refetch","message","console","log","onSearch","e","preventDefault","After","style","$theme","display","alignItems","paddingLeft","sizing","scale500","paddingRight","search","repositoryCount","edges","typography","font450","color","colors","primary","marginBottom","font200","primary600","marginRight","paddingBottom","borderBottom","primary100","target","value","map","node","id","justifyContent","paddingTop","nameWithOwner","description","repositoryTopics","nodes","item","Root","marginTop","topic","name","BaseButton","minWidth","flexShrink","font250","stargazers","totalCount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport gql from 'graphql-tag';\n\nimport Head from 'next/head';\nimport { GoStar } from 'react-icons/go';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport { Search } from 'baseui/icon';\nimport { Input } from 'baseui/input';\nimport { Tag } from 'baseui/tag';\nimport Container from '../../components/UiElements/Container/Container';\nimport ListGridCard from '../../components/UiElements/ListGridCard/ListGridCard';\nimport AppsMenu from '../../components/SideMenu/AppsMenu';\nimport { withApollo } from '../../apollo/github.client';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GetRepositoriesBySearch = gql`\n  query SearchRepositories($queryString: String!) {\n    search(query: $queryString, type: REPOSITORY, first: 10) {\n      repositoryCount\n      edges {\n        node {\n          ... on Repository {\n            id\n            name\n            nameWithOwner\n            description\n            repositoryTopics(first: 5) {\n              nodes {\n                id\n                topic {\n                  id\n                  name\n                }\n              }\n            }\n            stargazers {\n              totalCount\n            }\n            forks {\n              totalCount\n            }\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n`;\nconst TITLE = 'Github Search';\nconst INITIAL_SEARCH_TEXT = 'react';\nconst Github: NextPage<{}> = () => {\n  const [searchText, setSearchText] = React.useState(INITIAL_SEARCH_TEXT);\n  const { data, loading, error, refetch } = useQuery(GetRepositoriesBySearch, {\n    variables: {\n      queryString: INITIAL_SEARCH_TEXT,\n    },\n  });\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error! ${error.message}</div>;\n  console.log(data, loading, error, 'error git');\n  function onSearch(e: any) {\n    console.log(e);\n    e.preventDefault();\n    refetch({ queryString: searchText });\n  }\n  function After() {\n    return (\n      <Block\n        overrides={{\n          Block: {\n            style: ({ $theme }) => {\n              return {\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: $theme.sizing.scale500,\n                paddingRight: $theme.sizing.scale500,\n              };\n            },\n          },\n        }}\n      >\n        <Search size=\"24px\" />\n      </Block>\n    );\n  }\n  const { repositoryCount, edges } = data && data.search;\n  return (\n    <>\n      <Head>\n        <title>{TITLE} | INST.</title>\n        <meta name=\"Description\" content=\"Inst Github app\" />\n      </Head>\n\n      <Container>\n        <Block paddingTop={['15px', '20px', '30px', '40px']}>\n          <Row>\n            <Col lg={3}>\n              <AppsMenu />\n            </Col>\n            <Col lg={9}>\n              <Block paddingTop={['10px', '10px', 0]} paddingBottom=\"25px\">\n                <Block\n                  as=\"h3\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font450,\n                          color: $theme.colors.primary,\n                          marginBottom: '10px',\n                        };\n                      },\n                    },\n                  }}\n                >\n                  {TITLE}\n                </Block>\n                <Block\n                  as=\"p\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font200,\n                          color: $theme.colors.primary600,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  <Block\n                    as=\"span\"\n                    overrides={{\n                      Block: {\n                        style: ({ $theme }) => {\n                          return {\n                            color: $theme.colors.primary,\n                            marginRight: '5px',\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    {repositoryCount}\n                  </Block>\n                </Block>\n              </Block>\n\n              <Block\n                overrides={{\n                  Block: {\n                    style: ({ $theme }) => {\n                      return {\n                        paddingBottom: '40px',\n                        borderBottom: `1px solid ${$theme.colors.primary100}`,\n                        '@media only screen and (max-width: 991px)': {\n                          paddingBottom: '30px',\n                        },\n                      };\n                    },\n                  },\n                }}\n              >\n                <form onSubmit={onSearch}>\n                  <Input\n                    overrides={{ After }}\n                    placeholder=\"Search\"\n                    value={searchText}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      setSearchText(e.target.value)\n                    }\n                    // onKeyPress={onSearch}\n                  />\n                </form>\n              </Block>\n\n              {edges.map(({ node }: any) => (\n                <Block\n                  key={`github-repo--key${node.id}`}\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'space-between',\n                          paddingTop: '23px',\n                          paddingBottom: '20px',\n                          borderBottom: `1px solid ${$theme.colors.primary100}`,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  <ListGridCard\n                    title={node.nameWithOwner}\n                    description={node.description}\n                    btn={node.repositoryTopics.nodes.map((item: any) => (\n                      <Tag\n                        key={item.id}\n                        overrides={{\n                          Root: {\n                            style: {\n                              marginTop: '15px',\n                            },\n                          },\n                        }}\n                        closeable={false}\n                        variant=\"solid\"\n                      >\n                        {item.topic.name}\n                      </Tag>\n                    ))}\n                    style={{\n                      alignItems: 'flex-start',\n                    }}\n                  />\n                  <Button\n                    kind=\"secondary\"\n                    overrides={{\n                      BaseButton: {\n                        style: ({ $theme }) => {\n                          return {\n                            minWidth: '80px',\n                            justifyContent: 'space-around',\n                            flexShrink: 0,\n                            ...$theme.typography.font250,\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    <GoStar style={{ flexShrink: 0 }} />\n                    <Block paddingLeft=\"5px\" paddingRight=\"5px\">\n                      {node.stargazers.totalCount}\n                    </Block>\n                  </Button>\n                </Block>\n              ))}\n            </Col>\n          </Row>\n        </Block>\n      </Container>\n    </>\n  );\n};\n\nexport default withApollo(Github);\n"]},"metadata":{},"sourceType":"module"}