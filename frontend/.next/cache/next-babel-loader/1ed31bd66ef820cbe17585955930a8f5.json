{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/pages/apps/invoice/[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetInvoice($id: ID!) {\\n    invoice(id: $id) {\\n      id\\n      name\\n      customer {\\n        id\\n        name\\n        address\\n      }\\n      vendor {\\n        id\\n        name\\n        address\\n      }\\n      items {\\n        id\\n        name\\n        unitPrice\\n      }\\n      total\\n      status\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport { withApollo } from '../../../apollo/client';\nvar GET_INVOICE = gql(_templateObject());\nexport default withApollo(function InvoiceDetail() {\n  var _useRouter = useRouter(),\n      id = _useRouter.query.id;\n\n  console.log(id, 'id');\n\n  var _useQuery = useQuery(GET_INVOICE, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Loading ...\");\n  console.log(data, 'data');\n  return __jsx(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, _JSON$stringify(data, null, 2));\n});","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/pages/apps/invoice/[id].tsx"],"names":["React","useQuery","useRouter","gql","withApollo","GET_INVOICE","InvoiceDetail","id","query","console","log","variables","data","loading","error"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,IAAMC,WAAW,GAAGF,GAAH,mBAAjB;AA0BA,eAAeC,UAAU,CAAC,SAASE,aAAT,GAAyB;AAAA,mBAG7CJ,SAAS,EAHoC;AAAA,MAEtCK,EAFsC,cAE/CC,KAF+C,CAEtCD,EAFsC;;AAIjDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgB,IAAhB;;AAJiD,kBAMhBN,QAAQ,CAACI,WAAD,EAAc;AAAEM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAFA;AAAF;AAAb,GAAd,CANQ;AAAA,MAMzCK,IANyC,aAMzCA,IANyC;AAAA,MAMnCC,OANmC,aAMnCA,OANmC;AAAA,MAM1BC,KAN0B,aAM1BA,KAN0B;;AAOjD,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACbJ,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EAAkB,MAAlB;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,gBAAeA,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CAAP;AACD,CAXwB,CAAzB","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport { withApollo } from '../../../apollo/client';\n\nconst GET_INVOICE = gql`\n  query GetInvoice($id: ID!) {\n    invoice(id: $id) {\n      id\n      name\n      customer {\n        id\n        name\n        address\n      }\n      vendor {\n        id\n        name\n        address\n      }\n      items {\n        id\n        name\n        unitPrice\n      }\n      total\n      status\n      createdAt\n    }\n  }\n`;\nexport default withApollo(function InvoiceDetail() {\n  const {\n    query: { id },\n  } = useRouter();\n  console.log(id, 'id');\n\n  const { data, loading, error } = useQuery(GET_INVOICE, { variables: { id } });\n  if (loading) return <div>Loading ...</div>;\n  console.log(data, 'data');\n\n  return <pre>{JSON.stringify(data, null, 2)}</pre>;\n});\n"]},"metadata":{},"sourceType":"module"}