{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/pages/apps/product-hunt.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Head from 'next/head';\nimport { AiFillCaretUp } from 'react-icons/ai';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport Container from '../../components/UiElements/Container/Container';\nimport ListGridCard from '../../components/UiElements/ListGridCard/ListGridCard';\nimport AppsMenu from '../../components/SideMenu/AppsMenu';\nimport { withApollo } from '../../apollo/producthunt.client';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst getProducthuntItems = gql`\n  query {\n    posts(first: 10) {\n      edges {\n        node {\n          id\n          name\n          # description\n          tagline\n          thumbnail {\n            url\n          }\n          commentsCount\n          # topics(first:1){\n          #   edges{\n          #     node{\n          #       id\n          #       name\n          #     }\n          #   }\n          # }\n          website\n          votesCount\n        }\n      }\n    }\n  }\n`;\nconst TITLE = 'Today';\nconst SUB_TITLE = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod';\n\nconst ProductHunt = () => {\n  var _data$posts;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(getProducthuntItems); //TODO add comments ICON and implement loading and error\n\n  console.log(data, 'dataproduct');\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, TITLE, \" | INST.\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst product hunt app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['15px', '20px', '30px', '40px'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Col, {\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(AppsMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), __jsx(Col, {\n    lg: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['10px', '10px', 0],\n    paddingBottom: \"30px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return {\n            borderBottom: `1px solid ${$theme.colors.primary100}`\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Block, {\n    as: \"h3\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font450, {\n            color: $theme.colors.primary,\n            marginBottom: '10px'\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, TITLE), __jsx(Block, {\n    as: \"p\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200, {\n            color: $theme.colors.primary600\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, SUB_TITLE)), data === null || data === void 0 ? void 0 : (_data$posts = data.posts) === null || _data$posts === void 0 ? void 0 : _data$posts.edges.map(({\n    node: app\n  }) => {\n    var _app$thumbnail;\n\n    return __jsx(Block, {\n      key: `app-key${app.id}`,\n      overrides: {\n        Block: {\n          style: ({\n            $theme\n          }) => {\n            return {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              paddingTop: '23px',\n              paddingBottom: '20px',\n              borderBottom: `1px solid ${$theme.colors.primary100}`\n            };\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(ListGridCard, {\n      thumb: app === null || app === void 0 ? void 0 : (_app$thumbnail = app.thumbnail) === null || _app$thumbnail === void 0 ? void 0 : _app$thumbnail.url,\n      thumbWidth: '54px',\n      title: app.name,\n      description: app.tagline,\n      websiteUrl: app.website,\n      btn: __jsx(Button, {\n        onClick: () => alert('click'),\n        size: \"compact\",\n        shape: \"pill\",\n        kind: \"secondary\",\n        overrides: {\n          BaseButton: {\n            style: ({\n              $theme\n            }) => {\n              return _objectSpread({}, $theme.typography.font150, {\n                marginTop: $theme.sizing.scale500\n              });\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"ICON \", app.commentsCount),\n      style: {\n        alignItems: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), __jsx(Button, {\n      kind: \"secondary\",\n      overrides: {\n        BaseButton: {\n          style: ({\n            $theme\n          }) => {\n            return _objectSpread({\n              minWidth: '80px',\n              justifyContent: 'space-around'\n            }, $theme.typography.font250);\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(AiFillCaretUp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), \" \", app === null || app === void 0 ? void 0 : app.votesCount));\n  }))))));\n};\n\nexport default withApollo(ProductHunt);","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/pages/apps/product-hunt.tsx"],"names":["Head","AiFillCaretUp","Row","Col","Block","Button","Container","ListGridCard","AppsMenu","withApollo","useQuery","gql","getProducthuntItems","TITLE","SUB_TITLE","ProductHunt","data","loading","error","console","log","style","$theme","borderBottom","colors","primary100","typography","font450","color","primary","marginBottom","font200","primary600","posts","edges","map","node","app","id","display","alignItems","justifyContent","paddingTop","paddingBottom","thumbnail","url","name","tagline","website","alert","BaseButton","font150","marginTop","sizing","scale500","commentsCount","minWidth","font250","votesCount"],"mappings":"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","sourcesContent":["import { NextPage } from 'next';\nimport Head from 'next/head';\nimport { AiFillCaretUp } from 'react-icons/ai';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport Container from '../../components/UiElements/Container/Container';\nimport ListGridCard from '../../components/UiElements/ListGridCard/ListGridCard';\nimport AppsMenu from '../../components/SideMenu/AppsMenu';\nimport { withApollo } from '../../apollo/producthunt.client';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst getProducthuntItems = gql`\n  query {\n    posts(first: 10) {\n      edges {\n        node {\n          id\n          name\n          # description\n          tagline\n          thumbnail {\n            url\n          }\n          commentsCount\n          # topics(first:1){\n          #   edges{\n          #     node{\n          #       id\n          #       name\n          #     }\n          #   }\n          # }\n          website\n          votesCount\n        }\n      }\n    }\n  }\n`;\nconst TITLE = 'Today';\nconst SUB_TITLE =\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod';\nconst ProductHunt: NextPage<{}> = () => {\n  const { data, loading, error } = useQuery(getProducthuntItems);\n  //TODO add comments ICON and implement loading and error\n  console.log(data, 'dataproduct');\n\n  return (\n    <>\n      <Head>\n        <title>{TITLE} | INST.</title>\n        <meta name=\"Description\" content=\"Inst product hunt app\" />\n      </Head>\n\n      <Container>\n        <Block paddingTop={['15px', '20px', '30px', '40px']}>\n          <Row>\n            <Col lg={3}>\n              <AppsMenu />\n            </Col>\n            <Col lg={9}>\n              <Block\n                paddingTop={['10px', '10px', 0]}\n                paddingBottom=\"30px\"\n                overrides={{\n                  Block: {\n                    style: ({ $theme }) => {\n                      return {\n                        borderBottom: `1px solid ${$theme.colors.primary100}`,\n                      };\n                    },\n                  },\n                }}\n              >\n                <Block\n                  as=\"h3\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font450,\n                          color: $theme.colors.primary,\n                          marginBottom: '10px',\n                        };\n                      },\n                    },\n                  }}\n                >\n                  {TITLE}\n                </Block>\n                <Block\n                  as=\"p\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font200,\n                          color: $theme.colors.primary600,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  {SUB_TITLE}\n                </Block>\n              </Block>\n\n              {data?.posts?.edges.map(({ node: app }: any) => (\n                <Block\n                  key={`app-key${app.id}`}\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'space-between',\n                          paddingTop: '23px',\n                          paddingBottom: '20px',\n                          borderBottom: `1px solid ${$theme.colors.primary100}`,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  <ListGridCard\n                    thumb={app?.thumbnail?.url}\n                    thumbWidth={'54px'}\n                    title={app.name}\n                    description={app.tagline}\n                    websiteUrl={app.website}\n                    btn={\n                      <Button\n                        onClick={() => alert('click')}\n                        size=\"compact\"\n                        shape=\"pill\"\n                        kind=\"secondary\"\n                        overrides={{\n                          BaseButton: {\n                            style: ({ $theme }) => {\n                              return {\n                                ...$theme.typography.font150,\n                                marginTop: $theme.sizing.scale500,\n                              };\n                            },\n                          },\n                        }}\n                      >\n                        ICON {app.commentsCount}\n                      </Button>\n                    }\n                    style={{\n                      alignItems: 'flex-start',\n                    }}\n                  />\n                  <Button\n                    kind=\"secondary\"\n                    overrides={{\n                      BaseButton: {\n                        style: ({ $theme }) => {\n                          return {\n                            minWidth: '80px',\n                            justifyContent: 'space-around',\n                            ...$theme.typography.font250,\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    <AiFillCaretUp /> {app?.votesCount}\n                  </Button>\n                </Block>\n              ))}\n            </Col>\n          </Row>\n        </Block>\n      </Container>\n    </>\n  );\n};\n\nexport default withApollo(ProductHunt);\n"]},"metadata":{},"sourceType":"module"}