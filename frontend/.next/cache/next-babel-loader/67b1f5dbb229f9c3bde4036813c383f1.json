{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/pages/settings/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport Container from '../../components/UiElements/Container/Container';\nimport SettingsMenu from '../../components/SideMenu/SettingsMenu';\nimport { AvatarWrapper, ButtonGroup } from '../../components/PageStyles/Settings.styled';\nvar AvatarWithNoSSR = dynamic(function () {\n  return import('react-avatar-edit');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-avatar-edit')];\n    },\n    modules: ['react-avatar-edit']\n  }\n});\n\nvar Settings = function Settings() {\n  var _useState = useState({\n    avatar: '',\n    name: '',\n    username: '',\n    email: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var handleOnChange = function handleOnChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setState(_objectSpread({}, state, _defineProperty({}, name, value)));\n  };\n\n  var handleOnCrop = function handleOnCrop(img) {\n    setState(_objectSpread({}, state, {\n      avatar: img\n    }));\n  };\n\n  var handleBeforeFileLoad = function handleBeforeFileLoad(e) {\n    if (e.target.files[0].size > 71680) {\n      alert('File is too big!');\n      e.target.value = '';\n    }\n  };\n\n  var handleOnSubmit = function handleOnSubmit() {\n    console.log('Form submit', state);\n  };\n\n  var handleResetForm = function handleResetForm() {\n    setState({\n      avatar: '',\n      name: '',\n      username: '',\n      email: ''\n    });\n    console.log('Form reset');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Settings | INST.\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst setting page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['15px', '20px', '30px', '40px'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Col, {\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(SettingsMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(Col, {\n    lg: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['10px', '10px', '10px', 0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(FlexGrid, {\n    flexGridColumnCount: 1,\n    flexGridRowGap: ['0', '0', '0', 'scale500'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(AvatarWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(AvatarWithNoSSR, {\n    label: \"Choose avatar\",\n    labelStyle: {\n      fontSize: '16px',\n      fontWeight: 500\n    },\n    width: 150,\n    height: 150,\n    onCrop: handleOnCrop,\n    onBeforeFileLoad: handleBeforeFileLoad,\n    src: require('../../assets/images/avatar.jpg'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Your Name\",\n    caption: \"Please use 32 characters at maximum\",\n    overrides: {\n      Label: {\n        style: function style(_ref) {\n          var $theme = _ref.$theme;\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Input, {\n    name: \"name\",\n    value: state.name,\n    onChange: handleOnChange,\n    placeholder: \"Please enter your full name or a display name you comfortable with\",\n    overrides: {\n      InputContainer: {\n        style: function style() {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Your User Name\",\n    caption: \"Please use 16 characters at maximum\",\n    error: \"The user name is already use\",\n    overrides: {\n      Label: {\n        style: function style(_ref2) {\n          var $theme = _ref2.$theme;\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(Input, {\n    name: \"username\",\n    placeholder: \"Please enter your user name or a display name you comfortable with\",\n    onChange: handleOnChange,\n    overrides: {\n      InputContainer: {\n        style: function style() {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Your Email\",\n    caption: \"johndoe@example.com\",\n    overrides: {\n      Label: {\n        style: function style(_ref3) {\n          var $theme = _ref3.$theme;\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    value: state.email,\n    onChange: handleOnChange,\n    placeholder: \"Please enter your email address\",\n    overrides: {\n      InputContainer: {\n        style: function style() {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, __jsx(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: handleOnSubmit,\n    size: \"large\",\n    overrides: {\n      BaseButton: {\n        style: function style(_ref4) {\n          var $theme = _ref4.$theme;\n          return _objectSpread({\n            width: '131px'\n          }, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Save\"), __jsx(Button, {\n    onClick: handleResetForm,\n    kind: \"tertiary\",\n    size: \"large\",\n    overrides: {\n      BaseButton: {\n        style: function style(_ref5) {\n          var $theme = _ref5.$theme;\n          return _objectSpread({\n            width: '131px'\n          }, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Cancel\"))))))))));\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/pages/settings/index.tsx"],"names":["React","useState","Head","dynamic","Row","Col","Block","FlexGrid","FlexGridItem","FormControl","Input","Button","Container","SettingsMenu","AvatarWrapper","ButtonGroup","AvatarWithNoSSR","ssr","Settings","avatar","name","username","email","state","setState","handleOnChange","e","target","value","handleOnCrop","img","handleBeforeFileLoad","files","size","alert","handleOnSubmit","console","log","handleResetForm","fontSize","fontWeight","require","Label","style","$theme","typography","font350","InputContainer","backgroundColor","BaseButton","width","font250"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport Container from '../../components/UiElements/Container/Container';\nimport SettingsMenu from '../../components/SideMenu/SettingsMenu';\nimport {\n  AvatarWrapper,\n  ButtonGroup,\n} from '../../components/PageStyles/Settings.styled';\n\nconst AvatarWithNoSSR = dynamic(() => import('react-avatar-edit'), {\n  ssr: false,\n});\n\nconst Settings: NextPage<{}> = () => {\n  const [state, setState] = useState({\n    avatar: '',\n    name: '',\n    username: '',\n    email: '',\n  });\n\n  const handleOnChange = (e: any) => {\n    const { name, value } = e.target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleOnCrop = (img: string) => {\n    setState({\n      ...state,\n      avatar: img,\n    });\n  };\n\n  const handleBeforeFileLoad = (e: any) => {\n    if (e.target.files[0].size > 71680) {\n      alert('File is too big!');\n      e.target.value = '';\n    }\n  };\n\n  const handleOnSubmit = () => {\n    console.log('Form submit', state);\n  };\n\n  const handleResetForm = () => {\n    setState({\n      avatar: '',\n      name: '',\n      username: '',\n      email: '',\n    });\n    console.log('Form reset');\n  };\n\n  return (\n    <>\n      <Head>\n        <title>Settings | INST.</title>\n        <meta name=\"Description\" content=\"Inst setting page\" />\n      </Head>\n\n      <Container>\n        <Block paddingTop={['15px', '20px', '30px', '40px']}>\n          <Row>\n            <Col lg={3}>\n              <SettingsMenu />\n            </Col>\n            <Col lg={9}>\n              <Block paddingTop={['10px', '10px', '10px', 0]}>\n                <FlexGrid\n                  flexGridColumnCount={1}\n                  flexGridRowGap={['0', '0', '0', 'scale500']}\n                >\n                  <FlexGridItem>\n                    <AvatarWrapper>\n                      <AvatarWithNoSSR\n                        label=\"Choose avatar\"\n                        labelStyle={{ fontSize: '16px', fontWeight: 500 }}\n                        width={150}\n                        height={150}\n                        onCrop={handleOnCrop}\n                        onBeforeFileLoad={handleBeforeFileLoad}\n                        src={require('../../assets/images/avatar.jpg')}\n                      />\n                    </AvatarWrapper>\n                  </FlexGridItem>\n                  <FlexGridItem>\n                    <FormControl\n                      label=\"Your Name\"\n                      caption=\"Please use 32 characters at maximum\"\n                      overrides={{\n                        Label: {\n                          style: ({ $theme }) => {\n                            return { ...$theme.typography.font350 };\n                          },\n                        },\n                      }}\n                    >\n                      <Input\n                        name=\"name\"\n                        value={state.name}\n                        onChange={handleOnChange}\n                        placeholder=\"Please enter your full name or a display name you comfortable with\"\n                        overrides={{\n                          InputContainer: {\n                            style: () => {\n                              return { backgroundColor: 'transparent' };\n                            },\n                          },\n                        }}\n                      />\n                    </FormControl>\n                  </FlexGridItem>\n\n                  <FlexGridItem>\n                    <FormControl\n                      label=\"Your User Name\"\n                      caption=\"Please use 16 characters at maximum\"\n                      error=\"The user name is already use\"\n                      overrides={{\n                        Label: {\n                          style: ({ $theme }) => {\n                            return { ...$theme.typography.font350 };\n                          },\n                        },\n                      }}\n                    >\n                      <Input\n                        name=\"username\"\n                        placeholder=\"Please enter your user name or a display name you comfortable with\"\n                        onChange={handleOnChange}\n                        overrides={{\n                          InputContainer: {\n                            style: () => {\n                              return { backgroundColor: 'transparent' };\n                            },\n                          },\n                        }}\n                      />\n                    </FormControl>\n                  </FlexGridItem>\n\n                  <FlexGridItem>\n                    <FormControl\n                      label=\"Your Email\"\n                      caption=\"johndoe@example.com\"\n                      overrides={{\n                        Label: {\n                          style: ({ $theme }) => {\n                            return { ...$theme.typography.font350 };\n                          },\n                        },\n                      }}\n                    >\n                      <Input\n                        type=\"email\"\n                        name=\"email\"\n                        value={state.email}\n                        onChange={handleOnChange}\n                        placeholder=\"Please enter your email address\"\n                        overrides={{\n                          InputContainer: {\n                            style: () => {\n                              return { backgroundColor: 'transparent' };\n                            },\n                          },\n                        }}\n                      />\n                    </FormControl>\n                  </FlexGridItem>\n\n                  <FlexGridItem>\n                    <ButtonGroup>\n                      <Button\n                        onClick={handleOnSubmit}\n                        size=\"large\"\n                        overrides={{\n                          BaseButton: {\n                            style: ({ $theme }) => {\n                              return {\n                                width: '131px',\n                                ...$theme.typography.font250,\n                              };\n                            },\n                          },\n                        }}\n                      >\n                        Save\n                      </Button>\n                      <Button\n                        onClick={handleResetForm}\n                        kind=\"tertiary\"\n                        size=\"large\"\n                        overrides={{\n                          BaseButton: {\n                            style: ({ $theme }) => {\n                              return {\n                                width: '131px',\n                                ...$theme.typography.font250,\n                              };\n                            },\n                          },\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    </ButtonGroup>\n                  </FlexGridItem>\n                </FlexGrid>\n              </Block>\n            </Col>\n          </Row>\n        </Block>\n      </Container>\n    </>\n  );\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}