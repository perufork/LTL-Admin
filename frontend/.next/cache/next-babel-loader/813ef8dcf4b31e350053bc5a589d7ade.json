{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/components/UiElements/Carousel/Carousel.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport Glide from '@glidejs/glide';\nimport Wrapper, { DefaultBtn, BulletButton } from './Carousel.styled';\n\nconst Carousel = ({\n  className,\n  children,\n  options,\n  controls,\n  prevButton,\n  nextButton,\n  bullets,\n  thumbs,\n  numberOfBullets,\n  carouselSelector\n}) => {\n  const addAllClasses = ['glide'];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  const totalBullets = [];\n\n  for (let i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  }\n\n  useEffect(() => {\n    const glide = new Glide(carouselSelector ? `#${carouselSelector}` : '#glide', _objectSpread({}, options));\n    glide.mount();\n  }, [options]);\n  return __jsx(Wrapper, {\n    className: addAllClasses.join(' '),\n    id: carouselSelector || 'glide',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"glide__track\",\n    \"data-glide-el\": \"track\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"glide__slides\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, children)), controls && __jsx(\"div\", {\n    className: \"glide__controls\",\n    \"data-glide-el\": \"controls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"glide__prev--area\",\n    \"data-glide-dir\": \"<\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, prevButton ? prevButton : __jsx(DefaultBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Prev\")), __jsx(\"div\", {\n    className: \"glide__next--area\",\n    \"data-glide-dir\": \">\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, nextButton ? nextButton : __jsx(DefaultBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Next\"))), bullets && __jsx(\"div\", {\n    className: \"glide__bullets\",\n    \"data-glide-el\": \"controls[nav]\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, totalBullets.map(index => __jsx(BulletButton, {\n    key: index,\n    className: \"glide__bullet\",\n    \"data-glide-dir\": `=${index}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), bullets !== true && thumbs && thumbs.length > 0 && __jsx(\"div\", {\n    className: \"glide__bullets\",\n    \"data-glide-el\": \"controls[nav]\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, thumbs.map((item, index) => __jsx(\"div\", {\n    key: index,\n    className: \"glide__thumb\",\n    \"data-glide-dir\": `=${index}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: item.url,\n    alt: \"gallery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })))));\n};\n\nconst Slide = ({\n  children\n}) => {\n  return __jsx(Wrapper, {\n    className: \"glide__slide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, children);\n};\n\nCarousel.defaultProps = {\n  controls: true,\n  bullets: false\n};\nexport { Slide };\nexport default Carousel;","map":{"version":3,"sources":["/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/components/UiElements/Carousel/Carousel.tsx"],"names":["React","useEffect","Glide","Wrapper","DefaultBtn","BulletButton","Carousel","className","children","options","controls","prevButton","nextButton","bullets","thumbs","numberOfBullets","carouselSelector","addAllClasses","push","totalBullets","i","glide","mount","join","map","index","length","item","url","Slide","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,IAAkBC,UAAlB,EAA8BC,YAA9B,QAAkD,mBAAlD;;AAeA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,SADgB;AAEhBC,EAAAA,QAFgB;AAGhBC,EAAAA,OAHgB;AAIhBC,EAAAA,QAJgB;AAKhBC,EAAAA,UALgB;AAMhBC,EAAAA,UANgB;AAOhBC,EAAAA,OAPgB;AAQhBC,EAAAA,MARgB;AAShBC,EAAAA,eATgB;AAUhBC,EAAAA;AAVgB,CAAD,KAWI;AACnB,QAAMC,aAAa,GAAG,CAAC,OAAD,CAAtB;;AACA,MAAIV,SAAJ,EAAe;AACbU,IAAAA,aAAa,CAACC,IAAd,CAAmBX,SAAnB;AACD;;AAED,QAAMY,YAAY,GAAG,EAArB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,eAApB,EAAqCK,CAAC,EAAtC,EAA0C;AACxCD,IAAAA,YAAY,CAACD,IAAb,CAAkBE,CAAlB;AACD;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,KAAK,GAAG,IAAInB,KAAJ,CACZc,gBAAgB,GAAI,IAAGA,gBAAiB,EAAxB,GAA4B,QADhC,oBAGPP,OAHO,EAAd;AAMAY,IAAAA,KAAK,CAACC,KAAN;AACD,GARQ,EAQN,CAACb,OAAD,CARM,CAAT;AAUA,SACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAEQ,aAAa,CAACM,IAAd,CAAmB,GAAnB,CADb;AAEE,IAAA,EAAE,EAAEP,gBAAgB,IAAI,OAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,qBAAc,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BR,QAA/B,CADF,CAJF,EAQGE,QAAQ,IACP;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,qBAAc,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,sBAAe,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,UAAU,GAAGA,UAAH,GAAgB,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD7B,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,sBAAe,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,UAAU,GAAGA,UAAH,GAAgB,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD7B,CAJF,CATJ,EAmBGC,OAAO,IACN;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,qBAAc,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,YAAY,CAACK,GAAb,CAAiBC,KAAK,IACrB,MAAC,YAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,sBAAiB,IAAGA,KAAM,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CApBJ,EA+BGZ,OAAO,KAAK,IAAZ,IAAoBC,MAApB,IAA8BA,MAAM,CAACY,MAAP,GAAgB,CAA9C,IACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,qBAAc,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,MAAM,CAACU,GAAP,CAAW,CAACG,IAAD,EAAYF,KAAZ,KACV;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,sBAAiB,IAAGA,KAAM,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,GAAG,EAAEE,IAAI,CAACC,GAAf;AAAoB,IAAA,GAAG,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD,CADH,CAhCJ,CADF;AA+CD,CA/ED;;AAiFA,MAAMC,KAAkC,GAAG,CAAC;AAAErB,EAAAA;AAAF,CAAD,KAAkB;AAC3D,SAAO,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,QAAnC,CAAP;AACD,CAFD;;AAIAF,QAAQ,CAACwB,YAAT,GAAwB;AACtBpB,EAAAA,QAAQ,EAAE,IADY;AAEtBG,EAAAA,OAAO,EAAE;AAFa,CAAxB;AAKA,SAASgB,KAAT;AACA,eAAevB,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Glide from '@glidejs/glide';\nimport Wrapper, { DefaultBtn, BulletButton } from './Carousel.styled';\n\ntype CarouselProps = {\n  className?: string;\n  children: React.ReactNode;\n  options?: object;\n  controls?: boolean;\n  bullets?: boolean;\n  thumbs?: any;\n  numberOfBullets?: any;\n  prevButton?: React.ReactNode;\n  nextButton?: React.ReactNode;\n  carouselSelector: string;\n};\n\nconst Carousel = ({\n  className,\n  children,\n  options,\n  controls,\n  prevButton,\n  nextButton,\n  bullets,\n  thumbs,\n  numberOfBullets,\n  carouselSelector,\n}: CarouselProps) => {\n  const addAllClasses = ['glide'];\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  const totalBullets = [];\n  for (let i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  }\n\n  useEffect(() => {\n    const glide = new Glide(\n      carouselSelector ? `#${carouselSelector}` : '#glide',\n      {\n        ...options,\n      }\n    );\n    glide.mount();\n  }, [options]);\n\n  return (\n    <Wrapper\n      className={addAllClasses.join(' ')}\n      id={carouselSelector || 'glide'}\n    >\n      <div className=\"glide__track\" data-glide-el=\"track\">\n        <ul className=\"glide__slides\">{children}</ul>\n      </div>\n\n      {controls && (\n        <div className=\"glide__controls\" data-glide-el=\"controls\">\n          <div className=\"glide__prev--area\" data-glide-dir=\"<\">\n            {prevButton ? prevButton : <DefaultBtn>Prev</DefaultBtn>}\n          </div>\n          <div className=\"glide__next--area\" data-glide-dir=\">\">\n            {nextButton ? nextButton : <DefaultBtn>Next</DefaultBtn>}\n          </div>\n        </div>\n      )}\n\n      {bullets && (\n        <div className=\"glide__bullets\" data-glide-el=\"controls[nav]\">\n          {totalBullets.map(index => (\n            <BulletButton\n              key={index}\n              className=\"glide__bullet\"\n              data-glide-dir={`=${index}`}\n            />\n          ))}\n        </div>\n      )}\n\n      {bullets !== true && thumbs && thumbs.length > 0 && (\n        <div className=\"glide__bullets\" data-glide-el=\"controls[nav]\">\n          {thumbs.map((item: any, index: number) => (\n            <div\n              key={index}\n              className=\"glide__thumb\"\n              data-glide-dir={`=${index}`}\n            >\n              <img src={item.url} alt=\"gallery\" />\n            </div>\n          ))}\n        </div>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Slide: React.FunctionComponent<{}> = ({ children }) => {\n  return <Wrapper className=\"glide__slide\">{children}</Wrapper>;\n};\n\nCarousel.defaultProps = {\n  controls: true,\n  bullets: false,\n};\n\nexport { Slide };\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}