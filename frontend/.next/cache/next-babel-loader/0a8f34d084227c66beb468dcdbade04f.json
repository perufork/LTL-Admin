{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/pages/uielements/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { FiShoppingCart } from 'react-icons/fi';\nimport { Block } from 'baseui/block';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { StyledTableHeadAlt } from '../../components/PageStyles/Apps.styled';\nimport UiElementsMenu from '../../components/SideMenu/UiElementsMenu';\nimport Badge from '../../components/UiElements/Badge/Badge';\nimport Container from '../../components/UiElements/Container/Container';\nimport { useThemeSwitcherCtx, THEME } from '../../contexts/theme/theme.provider';\nimport { badgePropsData } from '../../data/uiElementsApiData';\n\nconst Apps = () => {\n  const {\n    theme\n  } = useThemeSwitcherCtx();\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"UiElements | INST.\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst calendar app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['15px', '20px', '30px', '40px'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Col, {\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(UiElementsMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), __jsx(Col, {\n    lg: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['10px', '10px', '10px', 0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Block, {\n    as: \"h2\",\n    paddingBottom: \"20px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font650, {\n            color: $theme.colors.primaryA\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Badge\"), __jsx(Block, {\n    paddingBottom: \"50px\",\n    overrides: {\n      Block: {\n        style: {\n          display: 'flex',\n          alignItems: 'flex-end'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Badge, {\n    icon: __jsx(FiShoppingCart, {\n      size: '1.2rem',\n      color: theme === THEME.light ? '#000000' : '#ffffff',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    count: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), __jsx(Block, {\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(Badge, {\n    icon: __jsx(FiShoppingCart, {\n      size: '1.6rem',\n      color: theme === THEME.light ? '#000000' : '#ffffff',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }),\n    count: 99,\n    bgColor: \"#276EF1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), __jsx(Block, {\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(Badge, {\n    icon: __jsx(FiShoppingCart, {\n      size: '2rem',\n      color: theme === THEME.light ? '#000000' : '#ffffff',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }),\n    count: 999,\n    bgColor: \"#3AA76D\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), __jsx(Block, {\n    as: \"h2\",\n    paddingBottom: \"10px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font650, {\n            color: $theme.colors.primaryA\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"API\"), __jsx(Block, {\n    as: \"p\",\n    paddingBottom: \"30px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200, {\n            color: $theme.colors.borderInverseOpaque\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"To get a customized badge, just set color/bgColor/style.\"), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          minHeight: '150px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(StyledTable, {\n    $gridTemplateColumns: \"150px 250px auto auto auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Property\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Description\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Type\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Default\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Version\"), badgePropsData.map((item, index) => {\n    const striped = index % 2 === 0;\n    return __jsx(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, item.property), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, item.description), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, item.type), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, item.default), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, item.version && item.version));\n  })))))))));\n};\n\nexport default Apps;","map":{"version":3,"sources":["/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/pages/uielements/index.tsx"],"names":["React","Fragment","Head","Row","Col","FiShoppingCart","Block","StyledTable","StyledBodyCell","StyledTableHeadAlt","UiElementsMenu","Badge","Container","useThemeSwitcherCtx","THEME","badgePropsData","Apps","theme","style","$theme","typography","font650","color","colors","primaryA","display","alignItems","light","font200","borderInverseOpaque","minHeight","map","item","index","striped","property","description","type","default","version"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { FiShoppingCart } from 'react-icons/fi';\nimport { Block } from 'baseui/block';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { StyledTableHeadAlt } from '../../components/PageStyles/Apps.styled';\nimport UiElementsMenu from '../../components/SideMenu/UiElementsMenu';\nimport Badge from '../../components/UiElements/Badge/Badge';\nimport Container from '../../components/UiElements/Container/Container';\nimport {\n  useThemeSwitcherCtx,\n  THEME,\n} from '../../contexts/theme/theme.provider';\n\nimport { badgePropsData } from '../../data/uiElementsApiData';\n\nconst Apps: NextPage<{}> = () => {\n  const { theme } = useThemeSwitcherCtx();\n\n  return (\n    <>\n      <Head>\n        <title>UiElements | INST.</title>\n        <meta name=\"Description\" content=\"Inst calendar app\" />\n      </Head>\n\n      <Container>\n        <Block paddingTop={['15px', '20px', '30px', '40px']}>\n          <Row>\n            <Col lg={3}>\n              <UiElementsMenu />\n            </Col>\n\n            <Col lg={9}>\n              <Block paddingTop={['10px', '10px', '10px', 0]}>\n                <Block\n                  as=\"h2\"\n                  paddingBottom=\"20px\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font650,\n                          color: $theme.colors.primaryA,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  Badge\n                </Block>\n\n                <Block\n                  paddingBottom=\"50px\"\n                  overrides={{\n                    Block: {\n                      style: { display: 'flex', alignItems: 'flex-end' },\n                    },\n                  }}\n                >\n                  <Badge\n                    icon={\n                      <FiShoppingCart\n                        size={'1.2rem'}\n                        color={theme === THEME.light ? '#000000' : '#ffffff'}\n                      />\n                    }\n                    count={9}\n                  />\n                  <Block paddingLeft=\"15px\" paddingRight=\"15px\"></Block>\n                  <Badge\n                    icon={\n                      <FiShoppingCart\n                        size={'1.6rem'}\n                        color={theme === THEME.light ? '#000000' : '#ffffff'}\n                      />\n                    }\n                    count={99}\n                    bgColor=\"#276EF1\"\n                  />\n                  <Block paddingLeft=\"15px\" paddingRight=\"15px\"></Block>\n                  <Badge\n                    icon={\n                      <FiShoppingCart\n                        size={'2rem'}\n                        color={theme === THEME.light ? '#000000' : '#ffffff'}\n                      />\n                    }\n                    count={999}\n                    bgColor=\"#3AA76D\"\n                  />\n                </Block>\n\n                <Block\n                  as=\"h2\"\n                  paddingBottom=\"10px\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font650,\n                          color: $theme.colors.primaryA,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  API\n                </Block>\n\n                <Block\n                  as=\"p\"\n                  paddingBottom=\"30px\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font200,\n                          color: $theme.colors.borderInverseOpaque,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  To get a customized badge, just set color/bgColor/style.\n                </Block>\n\n                <Block\n                  overrides={{\n                    Block: {\n                      style: {\n                        minHeight: '150px',\n                      },\n                    },\n                  }}\n                >\n                  <StyledTable $gridTemplateColumns=\"150px 250px auto auto auto\">\n                    <StyledTableHeadAlt>Property</StyledTableHeadAlt>\n                    <StyledTableHeadAlt>Description</StyledTableHeadAlt>\n                    <StyledTableHeadAlt>Type</StyledTableHeadAlt>\n                    <StyledTableHeadAlt>Default</StyledTableHeadAlt>\n                    <StyledTableHeadAlt>Version</StyledTableHeadAlt>\n                    {badgePropsData.map((item, index) => {\n                      const striped = index % 2 === 0;\n                      return (\n                        <Fragment key={index}>\n                          <StyledBodyCell $striped={striped}>\n                            {item.property}\n                          </StyledBodyCell>\n                          <StyledBodyCell $striped={striped}>\n                            {item.description}\n                          </StyledBodyCell>\n                          <StyledBodyCell $striped={striped}>\n                            {item.type}\n                          </StyledBodyCell>\n                          <StyledBodyCell $striped={striped}>\n                            {item.default}\n                          </StyledBodyCell>\n                          <StyledBodyCell $striped={striped}>\n                            {item.version && item.version}\n                          </StyledBodyCell>\n                        </Fragment>\n                      );\n                    })}\n                  </StyledTable>\n                </Block>\n              </Block>\n            </Col>\n          </Row>\n        </Block>\n      </Container>\n    </>\n  );\n};\n\nexport default Apps;\n"]},"metadata":{},"sourceType":"module"}