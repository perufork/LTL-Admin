{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createTheme, lightThemePrimitives } from 'baseui';\nconst theme = createTheme(_objectSpread({}, lightThemePrimitives, {\n  // add all the properties here you'd like to override from the light theme primitives\n  // primaryFontFamily: \"'Lato', sans-serif\",\n  primary50: '#fcfcfc'\n}), {// add all the theme overrides here - under the hood it uses deep merge\n});\nexport default theme;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/theme/index.ts"],"names":["createTheme","lightThemePrimitives","theme","primary50"],"mappings":";;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,oBAAtB,QAAkD,QAAlD;AAEA,MAAMC,KAAK,GAAGF,WAAW,mBAElBC,oBAFkB;AAGrB;AACA;AACAE,EAAAA,SAAS,EAAE;AALU,IAOvB,CACE;AADF,CAPuB,CAAzB;AAYA,eAAeD,KAAf","sourcesContent":["import { createTheme, lightThemePrimitives } from 'baseui';\n\nconst theme = createTheme(\n  {\n    ...lightThemePrimitives,\n    // add all the properties here you'd like to override from the light theme primitives\n    // primaryFontFamily: \"'Lato', sans-serif\",\n    primary50: '#fcfcfc',\n  },\n  {\n    // add all the theme overrides here - under the hood it uses deep merge\n  }\n);\n\nexport default theme;\n"]},"metadata":{},"sourceType":"module"}