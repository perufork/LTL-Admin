{"ast":null,"code":"var _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/containers/Chatbot/Chat.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Input } from 'baseui/input';\nimport Eliza from 'elizabot';\nimport ShowChats from './ShowChats';\nconst eliza = new Eliza();\n\nconst Chatbot = () => {\n  const {\n    0: chats,\n    1: setChats\n  } = useState([]);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    0: listen,\n    1: setListen\n  } = useState(false);\n  useEffect(() => {\n    const setReply = () => {\n      const reply = eliza.transform(value);\n      chats.push({\n        id: Date.now(),\n        message: reply\n      });\n      setChats([...chats]);\n      setListen(false);\n    };\n\n    setTimeout(() => {\n      if (listen) setReply();\n    }, 1000);\n  }, [listen]);\n\n  const handleChat = e => {\n    if (e.key === 'Enter') {\n      chats.push({\n        id: Date.now(),\n        message: value\n      });\n      setChats([...chats]);\n      setValue('');\n      setListen(true);\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(ShowChats, {\n    chats: chats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Input, {\n    value: value,\n    onChange: e => setValue(e.currentTarget.value),\n    onKeyPress: handleChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\n\nexport default Chatbot;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/containers/Chatbot/Chat.tsx"],"names":["React","useState","useEffect","Input","Eliza","ShowChats","eliza","Chatbot","chats","setChats","value","setValue","listen","setListen","setReply","reply","transform","push","id","Date","now","message","setTimeout","handleChat","e","key","currentTarget"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAqD,OAArD;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,KAAK,GAAG,IAAIF,KAAJ,EAAd;;AAEA,MAAMG,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACW,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,QAAQ,GAAG,MAAM;AACrB,YAAMC,KAAK,GAAGT,KAAK,CAACU,SAAN,CAAgBN,KAAhB,CAAd;AACAF,MAAAA,KAAK,CAACS,IAAN,CAAW;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkBC,QAAAA,OAAO,EAAEN;AAA3B,OAAX;AACAN,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACAK,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KALD;;AAMAS,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIV,MAAJ,EAAYE,QAAQ;AACrB,KAFS,EAEP,IAFO,CAAV;AAGD,GAVQ,EAUN,CAACF,MAAD,CAVM,CAAT;;AAYA,QAAMW,UAAU,GAAGC,CAAC,IAAI;AACtB,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBjB,MAAAA,KAAK,CAACS,IAAN,CAAW;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkBC,QAAAA,OAAO,EAAEX;AAA3B,OAAX;AACAD,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACAG,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAPD;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEL,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,QAAQ,EAAEc,CAAC,IAAIb,QAAQ,CAACa,CAAC,CAACE,aAAF,CAAgBhB,KAAjB,CAFzB;AAGE,IAAA,UAAU,EAAEa,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAnCD;;AAqCA,eAAehB,OAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { Input } from 'baseui/input';\nimport { Tag } from 'baseui/tag';\nimport Eliza from 'elizabot';\nimport ShowChats from './ShowChats';\n\nconst eliza = new Eliza();\n\nconst Chatbot = () => {\n  const [chats, setChats] = useState([]);\n  const [value, setValue] = useState('');\n  const [listen, setListen] = useState(false);\n\n  useEffect(() => {\n    const setReply = () => {\n      const reply = eliza.transform(value);\n      chats.push({ id: Date.now(), message: reply });\n      setChats([...chats]);\n      setListen(false);\n    };\n    setTimeout(() => {\n      if (listen) setReply();\n    }, 1000);\n  }, [listen]);\n\n  const handleChat = e => {\n    if (e.key === 'Enter') {\n      chats.push({ id: Date.now(), message: value });\n      setChats([...chats]);\n      setValue('');\n      setListen(true);\n    }\n  };\n  return (\n    <div>\n      <ShowChats chats={chats} />\n      <Input\n        value={value}\n        onChange={e => setValue(e.currentTarget.value)}\n        onKeyPress={handleChat}\n      />\n    </div>\n  );\n};\n\nexport default Chatbot;\n"]},"metadata":{},"sourceType":"module"}