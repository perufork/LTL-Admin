{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/components/Layout/Layout.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport AuthHeader from '../Header/AuthHeader/AuthHeader';\nimport AppWrapper, { ContentWrapper } from './Layout.styled';\nimport { useThemeSwitcherCtx, THEME } from '../../contexts/theme/theme.provider';\n\nvar Layout = function Layout(_ref) {\n  var router = _ref.router,\n      children = _ref.children;\n  var pathname = router.pathname;\n\n  var _useThemeSwitcherCtx = useThemeSwitcherCtx(),\n      theme = _useThemeSwitcherCtx.theme;\n\n  var layoutBg = '#ffffff';\n\n  if (theme === THEME.dark) {\n    layoutBg = '#000000';\n  }\n\n  if (theme === THEME.light && pathname === '/') {\n    layoutBg = '#fcfcfc';\n  }\n\n  if (theme === THEME.dark && pathname === '/') {\n    layoutBg = '#0c0c0c';\n  }\n\n  return __jsx(AppWrapper, {\n    className: theme,\n    style: {\n      backgroundColor: layoutBg\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, pathname === '/login' || pathname === '/signup' ? __jsx(AuthHeader, {\n    pathname: pathname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(ContentWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, children), pathname === '/login' || pathname === '/signup' ? '' : __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(Layout);","map":{"version":3,"sources":["/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/components/Layout/Layout.tsx"],"names":["React","withRouter","Header","Footer","AuthHeader","AppWrapper","ContentWrapper","useThemeSwitcherCtx","THEME","Layout","router","children","pathname","theme","layoutBg","dark","light","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,UAAP,IAAqBC,cAArB,QAA2C,iBAA3C;AACA,SACEC,mBADF,EAEEC,KAFF,QAGO,qCAHP;;AAKA,IAAMC,MAAiD,GAAG,SAApDA,MAAoD,OAGpD;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAMC,QAAQ,GAAGF,MAAM,CAACE,QAAxB;;AADI,6BAEcL,mBAAmB,EAFjC;AAAA,MAEIM,KAFJ,wBAEIA,KAFJ;;AAGJ,MAAIC,QAAQ,GAAG,SAAf;;AAEA,MAAID,KAAK,KAAKL,KAAK,CAACO,IAApB,EAA0B;AACxBD,IAAAA,QAAQ,GAAG,SAAX;AACD;;AAED,MAAID,KAAK,KAAKL,KAAK,CAACQ,KAAhB,IAAyBJ,QAAQ,KAAK,GAA1C,EAA+C;AAC7CE,IAAAA,QAAQ,GAAG,SAAX;AACD;;AAED,MAAID,KAAK,KAAKL,KAAK,CAACO,IAAhB,IAAwBH,QAAQ,KAAK,GAAzC,EAA8C;AAC5CE,IAAAA,QAAQ,GAAG,SAAX;AACD;;AAED,SACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAED,KAAvB;AAA8B,IAAA,KAAK,EAAE;AAAEI,MAAAA,eAAe,EAAEH;AAAnB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,KAAK,QAAb,IAAyBA,QAAQ,KAAK,SAAtC,GACC,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEA,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAOE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,QAAjB,CAPF,EASGC,QAAQ,KAAK,QAAb,IAAyBA,QAAQ,KAAK,SAAtC,GAAkD,EAAlD,GAAuD,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAT1D,CADF;AAaD,CAjCD;;AAmCA,eAAeX,UAAU,CAACQ,MAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'next/router';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport AuthHeader from '../Header/AuthHeader/AuthHeader';\nimport AppWrapper, { ContentWrapper } from './Layout.styled';\nimport {\n  useThemeSwitcherCtx,\n  THEME,\n} from '../../contexts/theme/theme.provider';\n\nconst Layout: React.FunctionComponent<{ router?: any }> = ({\n  router,\n  children,\n}) => {\n  const pathname = router.pathname;\n  const { theme } = useThemeSwitcherCtx();\n  let layoutBg = '#ffffff';\n\n  if (theme === THEME.dark) {\n    layoutBg = '#000000';\n  }\n\n  if (theme === THEME.light && pathname === '/') {\n    layoutBg = '#fcfcfc';\n  }\n\n  if (theme === THEME.dark && pathname === '/') {\n    layoutBg = '#0c0c0c';\n  }\n\n  return (\n    <AppWrapper className={theme} style={{ backgroundColor: layoutBg }}>\n      {pathname === '/login' || pathname === '/signup' ? (\n        <AuthHeader pathname={pathname} />\n      ) : (\n        <Header />\n      )}\n\n      <ContentWrapper>{children}</ContentWrapper>\n\n      {pathname === '/login' || pathname === '/signup' ? '' : <Footer />}\n    </AppWrapper>\n  );\n};\n\nexport default withRouter(Layout);\n"]},"metadata":{},"sourceType":"module"}