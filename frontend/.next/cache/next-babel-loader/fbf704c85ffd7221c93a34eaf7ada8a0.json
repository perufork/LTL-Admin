{"ast":null,"code":"var _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/containers/Crud/Crud.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, Fragment, useEffect } from 'react';\nimport { AiFillCloseSquare } from 'react-icons/ai';\nimport { IoIosEye } from 'react-icons/io';\nimport { Tag } from 'baseui/tag';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { Modal, ModalHeader, ModalBody } from 'baseui/modal';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Textarea } from 'baseui/textarea';\nimport { Select } from 'baseui/select';\nimport IconButton from '../../components/UiElements/IconButton/IconButton';\nimport { StyledTableHeadAlt } from '../../components/PageStyles/Apps.styled';\nimport { getDocuments, addDocument, updateDocument, deleteDocument } from '../../firebase/service';\nconst statusOptions = [{\n  label: 'Draft',\n  id: 'draft'\n}, {\n  label: 'Publish',\n  id: 'publish'\n}];\n\nconst FirebaseCRUD = () => {\n  const {\n    0: articles,\n    1: setArticles\n  } = useState([]);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: editState,\n    1: setEditState\n  } = useState(false);\n  const {\n    0: article,\n    1: setArticle\n  } = useState({\n    id: null,\n    title: '',\n    description: '',\n    slug: '',\n    status: []\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    const data = await getDocuments('articles');\n\n    if (data && data.length) {\n      setArticles(data);\n    }\n  };\n\n  const handleAddArticle = () => {\n    setVisible(true);\n    setEditState(false);\n  };\n\n  const handleModdalClose = () => {\n    setVisible(false);\n    setArticle({\n      id: null,\n      title: '',\n      description: '',\n      slug: '',\n      status: []\n    });\n  };\n\n  const handleDeleteArticle = async id => {\n    if (id) {\n      const deleted = await deleteDocument('articles', id);\n\n      if (deleted) {\n        fetchData();\n      }\n    }\n  };\n\n  const handleUpdateArticle = async item => {\n    setVisible(true);\n    setEditState(true);\n    const index = statusOptions.findIndex(option => option.id === item.status);\n    let status = {\n      label: 'Draft',\n      id: 'draft'\n    };\n\n    if (index > -1) {\n      status = statusOptions[index];\n    }\n\n    setArticle(_objectSpread({}, article, {}, item, {\n      status\n    }));\n  };\n\n  const handleOnChange = name => e => {\n    let value;\n\n    if (name === 'status') {\n      value = e.value;\n    } else {\n      value = e.target.value;\n    }\n\n    setArticle(_objectSpread({}, article, {\n      [name]: value\n    }));\n  };\n\n  const handleOnSubmit = async () => {\n    const status = article.status && article.status.length ? article.status[0].id : 'draft';\n    const slug = article.id ? article.slug : `${article.slug}-${Date.now()}`;\n\n    const data = _objectSpread({}, article, {\n      slug,\n      status\n    });\n\n    let id = null;\n\n    if (article.id) {\n      id = await updateDocument('articles', data);\n    } else {\n      id = await addDocument('articles', data);\n    }\n\n    if (id) {\n      fetchData();\n      setVisible(false);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Block, {\n    paddingTop: ['10px', '10px', 0],\n    overrides: {\n      Block: {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          marginBottom: '40px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(Block, {\n    as: \"h3\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font450, {\n            color: $theme.colors.primaryA,\n            marginBottom: '10px'\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, title), __jsx(Block, {\n    as: \"p\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200, {\n            color: $theme.colors.contentSecondary\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, subtitle)), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          flexShrink: 0\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: handleAddArticle,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Add Article\"))), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          minHeight: '150px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, __jsx(StyledTable, {\n    $gridTemplateColumns: \"130px 200px auto max-content max-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Title\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Description\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Slug\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Status\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Action\"), articles && articles.length ? articles.map((item, index) => {\n    const striped = index % 2 === 0;\n    if (item && !item.status) return null;\n    const status = item.status;\n    let tag;\n\n    switch (status) {\n      case 'publish':\n        tag = __jsx(Tag, {\n          kind: \"positive\",\n          variant: \"solid\",\n          closeable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, status);\n        break;\n\n      case 'draft':\n        tag = __jsx(Tag, {\n          kind: \"neutral\",\n          variant: \"light\",\n          closeable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, status);\n        break;\n    }\n\n    return __jsx(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, item.title), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, item.description), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, item.slug), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, tag), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      onClick: () => handleUpdateArticle(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, __jsx(IoIosEye, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })), __jsx(IconButton, {\n      onClick: () => handleDeleteArticle(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, __jsx(AiFillCloseSquare, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }))));\n  }) : null)), __jsx(Modal, {\n    onClose: handleModdalClose,\n    closeable: true,\n    isOpen: visible,\n    animate: true,\n    size: \"default\",\n    role: \"dialog\",\n    unstable_ModalBackdropScroll: true,\n    overrides: {\n      Root: {\n        style: () => {\n          return {\n            zIndex: 9999\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, __jsx(ModalHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, editState ? 'Update Article' : 'Add Article'), __jsx(ModalBody, {\n    style: {\n      overflow: 'hidden'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, __jsx(FlexGrid, {\n    flexGridColumnCount: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Title\",\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, __jsx(Input, {\n    name: \"title\",\n    value: article.title,\n    onChange: handleOnChange('title'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Description\",\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, __jsx(Textarea, {\n    value: article.description,\n    onChange: handleOnChange('description'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Slug\",\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, __jsx(Input, {\n    value: article.slug,\n    onChange: handleOnChange('slug'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Status\",\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, __jsx(Select, {\n    options: statusOptions,\n    placeholder: \"\",\n    value: article.status,\n    onChange: handleOnChange('status'),\n    overrides: {\n      ControlContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    overrides: {\n      Block: {\n        style: {\n          marginTop: '30px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: handleOnSubmit,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, editState ? 'Update Article' : 'Add Article'), __jsx(Button, {\n    kind: \"minimal\",\n    onClick: handleModdalClose,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, \"Cancel\"))))));\n};\n\nexport default FirebaseCRUD;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/containers/Crud/Crud.tsx"],"names":["React","useState","Fragment","useEffect","AiFillCloseSquare","IoIosEye","Tag","Block","Button","StyledTable","StyledBodyCell","Modal","ModalHeader","ModalBody","FlexGrid","FlexGridItem","FormControl","Input","Textarea","Select","IconButton","StyledTableHeadAlt","getDocuments","addDocument","updateDocument","deleteDocument","statusOptions","label","id","FirebaseCRUD","articles","setArticles","visible","setVisible","editState","setEditState","article","setArticle","title","description","slug","status","fetchData","data","length","handleAddArticle","handleModdalClose","handleDeleteArticle","deleted","handleUpdateArticle","item","index","findIndex","option","handleOnChange","name","e","value","target","handleOnSubmit","Date","now","style","display","alignItems","justifyContent","marginBottom","$theme","typography","font450","color","colors","primaryA","font200","contentSecondary","subtitle","flexShrink","BaseButton","font250","minHeight","map","striped","tag","Root","zIndex","overflow","Label","InputContainer","backgroundColor","ControlContainer","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\nimport { AiFillCloseSquare } from 'react-icons/ai';\nimport { IoIosEye } from 'react-icons/io';\nimport { Tag } from 'baseui/tag';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { Modal, ModalHeader, ModalBody } from 'baseui/modal';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Textarea } from 'baseui/textarea';\nimport { Select } from 'baseui/select';\nimport IconButton from '../../components/UiElements/IconButton/IconButton';\nimport { StyledTableHeadAlt } from '../../components/PageStyles/Apps.styled';\nimport { firebaseCRUDPageData } from '../../data/appsData';\nimport {\n  getDocuments,\n  addDocument,\n  updateDocument,\n  deleteDocument,\n} from '../../firebase/service';\n\nconst statusOptions = [\n  { label: 'Draft', id: 'draft' },\n  { label: 'Publish', id: 'publish' },\n];\n\nconst FirebaseCRUD = () => {\n  const [articles, setArticles] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [editState, setEditState] = useState(false);\n  const [article, setArticle] = useState({\n    id: null,\n    title: '',\n    description: '',\n    slug: '',\n    status: [],\n  });\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    const data = await getDocuments('articles');\n    if (data && data.length) {\n      setArticles(data);\n    }\n  };\n  const handleAddArticle = () => {\n    setVisible(true);\n    setEditState(false);\n  };\n\n  const handleModdalClose = () => {\n    setVisible(false);\n    setArticle({\n      id: null,\n      title: '',\n      description: '',\n      slug: '',\n      status: [],\n    });\n  };\n\n  const handleDeleteArticle = async (id: string) => {\n    if (id) {\n      const deleted = await deleteDocument('articles', id);\n      if (deleted) {\n        fetchData();\n      }\n    }\n  };\n\n  const handleUpdateArticle = async (item: any) => {\n    setVisible(true);\n    setEditState(true);\n    const index = statusOptions.findIndex(option => option.id === item.status);\n    let status = { label: 'Draft', id: 'draft' };\n    if (index > -1) {\n      status = statusOptions[index];\n    }\n    setArticle({\n      ...article,\n      ...item,\n      status,\n    });\n  };\n\n  const handleOnChange = (name: string) => (e: any) => {\n    let value: any;\n    if (name === 'status') {\n      value = e.value;\n    } else {\n      value = e.target.value;\n    }\n\n    setArticle({\n      ...article,\n      [name]: value,\n    });\n  };\n\n  const handleOnSubmit = async () => {\n    const status =\n      article.status && article.status.length ? article.status[0].id : 'draft';\n    const slug = article.id ? article.slug : `${article.slug}-${Date.now()}`;\n    const data = {\n      ...article,\n      slug,\n      status,\n    };\n    let id = null;\n    if (article.id) {\n      id = await updateDocument('articles', data);\n    } else {\n      id = await addDocument('articles', data);\n    }\n    if (id) {\n      fetchData();\n      setVisible(false);\n    }\n  };\n\n  return (\n    <>\n      <Block\n        paddingTop={['10px', '10px', 0]}\n        overrides={{\n          Block: {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginBottom: '40px',\n            },\n          },\n        }}\n      >\n        <Block>\n          <Block\n            as=\"h3\"\n            overrides={{\n              Block: {\n                style: ({ $theme }) => {\n                  return {\n                    ...$theme.typography.font450,\n                    color: $theme.colors.primaryA,\n                    marginBottom: '10px',\n                  };\n                },\n              },\n            }}\n          >\n            {title}\n          </Block>\n          <Block\n            as=\"p\"\n            overrides={{\n              Block: {\n                style: ({ $theme }) => {\n                  return {\n                    ...$theme.typography.font200,\n                    color: $theme.colors.contentSecondary,\n                  };\n                },\n              },\n            }}\n          >\n            {subtitle}\n          </Block>\n        </Block>\n        <Block overrides={{ Block: { style: { flexShrink: 0 } } }}>\n          <Button\n            onClick={handleAddArticle}\n            overrides={{\n              BaseButton: {\n                style: ({ $theme }) => {\n                  return {\n                    ...$theme.typography.font250,\n                  };\n                },\n              },\n            }}\n          >\n            Add Article\n          </Button>\n        </Block>\n      </Block>\n\n      <Block\n        overrides={{\n          Block: {\n            style: {\n              minHeight: '150px',\n            },\n          },\n        }}\n      >\n        <StyledTable $gridTemplateColumns=\"130px 200px auto max-content max-content\">\n          <StyledTableHeadAlt>Title</StyledTableHeadAlt>\n          <StyledTableHeadAlt>Description</StyledTableHeadAlt>\n          <StyledTableHeadAlt>Slug</StyledTableHeadAlt>\n          <StyledTableHeadAlt>Status</StyledTableHeadAlt>\n          <StyledTableHeadAlt>Action</StyledTableHeadAlt>\n          {articles && articles.length\n            ? articles.map((item, index) => {\n                const striped = index % 2 === 0;\n                if (item && !item.status) return null;\n                const status = item.status;\n                let tag;\n                switch (status) {\n                  case 'publish':\n                    tag = (\n                      <Tag kind=\"positive\" variant=\"solid\" closeable={false}>\n                        {status}\n                      </Tag>\n                    );\n                    break;\n                  case 'draft':\n                    tag = (\n                      <Tag kind=\"neutral\" variant=\"light\" closeable={false}>\n                        {status}\n                      </Tag>\n                    );\n                    break;\n                }\n                return (\n                  <Fragment key={index}>\n                    <StyledBodyCell $striped={striped}>\n                      {item.title}\n                    </StyledBodyCell>\n                    <StyledBodyCell $striped={striped}>\n                      {item.description}\n                    </StyledBodyCell>\n                    <StyledBodyCell $striped={striped}>\n                      {item.slug}\n                    </StyledBodyCell>\n                    <StyledBodyCell $striped={striped}>{tag}</StyledBodyCell>\n                    <StyledBodyCell $striped={striped}>\n                      <IconButton onClick={() => handleUpdateArticle(item)}>\n                        <IoIosEye />\n                      </IconButton>\n                      <IconButton onClick={() => handleDeleteArticle(item.id)}>\n                        <AiFillCloseSquare />\n                      </IconButton>\n                    </StyledBodyCell>\n                  </Fragment>\n                );\n              })\n            : null}\n        </StyledTable>\n      </Block>\n\n      <Modal\n        onClose={handleModdalClose}\n        closeable\n        isOpen={visible}\n        animate\n        size=\"default\"\n        role=\"dialog\"\n        unstable_ModalBackdropScroll={true}\n        overrides={{\n          Root: {\n            style: () => {\n              return { zIndex: 9999 };\n            },\n          },\n        }}\n      >\n        <ModalHeader>\n          {editState ? 'Update Article' : 'Add Article'}\n        </ModalHeader>\n\n        <ModalBody style={{ overflow: 'hidden' }}>\n          <FlexGrid flexGridColumnCount={1}>\n            <FlexGridItem>\n              <FormControl\n                label=\"Title\"\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Input\n                  name=\"title\"\n                  value={article.title}\n                  onChange={handleOnChange('title')}\n                  overrides={{\n                    InputContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem>\n              <FormControl\n                label=\"Description\"\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Textarea\n                  value={article.description}\n                  onChange={handleOnChange('description')}\n                  overrides={{\n                    InputContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem>\n              <FormControl\n                label=\"Slug\"\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Input\n                  value={article.slug}\n                  onChange={handleOnChange('slug')}\n                  overrides={{\n                    InputContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem>\n              <FormControl\n                label=\"Status\"\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Select\n                  options={statusOptions}\n                  placeholder=\"\"\n                  value={article.status}\n                  onChange={handleOnChange('status')}\n                  overrides={{\n                    ControlContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem\n              overrides={{ Block: { style: { marginTop: '30px' } } }}\n            >\n              <Button\n                onClick={handleOnSubmit}\n                overrides={{\n                  BaseButton: {\n                    style: ({ $theme }) => {\n                      return {\n                        ...$theme.typography.font250,\n                      };\n                    },\n                  },\n                }}\n              >\n                {editState ? 'Update Article' : 'Add Article'}\n              </Button>\n              <Button\n                kind=\"minimal\"\n                onClick={handleModdalClose}\n                overrides={{\n                  BaseButton: {\n                    style: ({ $theme }) => {\n                      return {\n                        ...$theme.typography.font250,\n                      };\n                    },\n                  },\n                }}\n              >\n                Cancel\n              </Button>\n            </FlexGridItem>\n          </FlexGrid>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n};\n\nexport default FirebaseCRUD;\n"]},"metadata":{},"sourceType":"module"}