{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport '../assets/css/reset.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider } from 'baseui';\nimport { styletron, debug } from '../styletron';\nimport Layout from '../components/Layout/Layout';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport theme from '../theme/';\nimport { CartProvider } from '../contexts/cart/cart.provider';\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  return __jsx(StyletronProvider, {\n    value: styletron,\n    debug: debug,\n    debugAfterHydration: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(BaseProvider, {\n    theme: _objectSpread({}, theme, {\n      direction: 'ltr'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"INST.\"), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#000000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst is a GraphQL based server side dashboard template\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800&display=swap\",\n    rel: \"stylesheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), __jsx(CartProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/pages/_app.tsx"],"names":["React","Head","Provider","StyletronProvider","BaseProvider","styletron","debug","Layout","theme","CartProvider","App","Component","pageProps","direction"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,4CAAP;AACA,OAAO,yBAAP;AACA,OAAO,uCAAP;AACA,SAASC,QAAQ,IAAIC,iBAArB,QAA8C,iBAA9C;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,cAAjC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAO,mDAAP;AAEA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAASC,YAAT,QAA6B,gCAA7B;;AACA,MAAMC,GAGJ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACjC,SACE,MAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEP,SAA1B;AAAqC,IAAA,KAAK,EAAEC,KAA5C;AAAmD,IAAA,mBAAmB,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,oBAAOE,KAAP;AAAcK,MAAAA,SAAS,EAAE;AAAzB,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,OAAO,EAAC,wDAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAOE;AACE,IAAA,IAAI,EAAC,gFADP;AAEE,IAAA,GAAG,EAAC,YAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAcE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CAdF,CADF,CADF,CADF;AA2BD,CA/BD;;AAiCA,eAAeF,GAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport '../assets/css/reset.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider } from 'baseui';\nimport { styletron, debug } from '../styletron';\nimport Layout from '../components/Layout/Layout';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport theme from '../theme/';\nimport { CartProvider } from '../contexts/cart/cart.provider';\nconst App: NextPage<{\n  Component: any;\n  pageProps: any;\n}> = ({ Component, pageProps }) => {\n  return (\n    <StyletronProvider value={styletron} debug={debug} debugAfterHydration>\n      <BaseProvider theme={{ ...theme, direction: 'ltr' }}>\n        <>\n          <Head>\n            <title>INST.</title>\n            <meta name=\"theme-color\" content=\"#000000\" />\n            <meta\n              name=\"Description\"\n              content=\"Inst is a GraphQL based server side dashboard template\"\n            />\n            <link\n              href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800&display=swap\"\n              rel=\"stylesheet\"\n            />\n          </Head>\n          {/* end of app head */}\n          <CartProvider>\n            <Layout>\n              <Component {...pageProps} />\n            </Layout>\n          </CartProvider>\n          {/* end of app layout */}\n        </>\n      </BaseProvider>\n    </StyletronProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}