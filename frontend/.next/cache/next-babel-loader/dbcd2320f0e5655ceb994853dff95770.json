{"ast":null,"code":"var _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/containers/Chatbot/Chat.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, Fragment } from 'react';\nimport { Input } from 'baseui/input';\nimport { Tag } from 'baseui/tag';\nimport Eliza from 'elizabot';\nconst eliza = new Eliza();\n\nconst Chatbot = () => {\n  const {\n    0: chats,\n    1: setChats\n  } = useState([]);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n\n  const handleChat = e => {\n    console.log(e.key, 'what key');\n\n    if (e.key === 'Enter') {\n      console.log('here');\n      const reply = eliza.transform(value);\n      chats.push({\n        id: Date.now(),\n        message: value\n      });\n      chats.push({\n        id: Date.now(),\n        message: reply\n      });\n      setChats(chats);\n    }\n  };\n\n  console.log(chats, 'what chats');\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(Input, {\n    onChange: e => setValue(e.currentTarget.value),\n    onKeyPress: handleChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(ShowChats, {\n    chats: chats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nconst ShowChats = ({\n  chats\n}) => {\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, chats && chats.length && chats.map(chat => __jsx(\"div\", {\n    key: chat.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Tag, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, chat.message))));\n};\n\nexport default Chatbot;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/containers/Chatbot/Chat.tsx"],"names":["React","useState","Fragment","Input","Tag","Eliza","eliza","Chatbot","chats","setChats","value","setValue","handleChat","e","console","log","key","reply","transform","push","id","Date","now","message","currentTarget","ShowChats","length","map","chat"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,KAAK,GAAG,IAAID,KAAJ,EAAd;;AAEA,MAAME,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMW,UAAU,GAAGC,CAAC,IAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,GAAd,EAAmB,UAAnB;;AACA,QAAIH,CAAC,CAACG,GAAF,KAAU,OAAd,EAAuB;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,YAAME,KAAK,GAAGX,KAAK,CAACY,SAAN,CAAgBR,KAAhB,CAAd;AACAF,MAAAA,KAAK,CAACW,IAAN,CAAW;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkBC,QAAAA,OAAO,EAAEb;AAA3B,OAAX;AACAF,MAAAA,KAAK,CAACW,IAAN,CAAW;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkBC,QAAAA,OAAO,EAAEN;AAA3B,OAAX;AACAR,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,GATD;;AAUAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmB,YAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAEK,CAAC,IAAIF,QAAQ,CAACE,CAAC,CAACW,aAAF,CAAgBd,KAAjB,CADzB;AAEE,IAAA,UAAU,EAAEE,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAvBD;;AAyBA,MAAMiB,SAAS,GAAG,CAAC;AAAEjB,EAAAA;AAAF,CAAD,KAAe;AAC/B,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,IACJA,KAAK,CAACkB,MADP,IAEClB,KAAK,CAACmB,GAAN,CAAUC,IAAI,IACZ;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACR,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMQ,IAAI,CAACL,OAAX,CADF,CADF,CAHJ,CADF;AAWD,CAZD;;AAcA,eAAehB,OAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport { Input } from 'baseui/input';\nimport { Tag } from 'baseui/tag';\nimport Eliza from 'elizabot';\n\nconst eliza = new Eliza();\n\nconst Chatbot = () => {\n  const [chats, setChats] = useState([]);\n  const [value, setValue] = useState('');\n  const handleChat = e => {\n    console.log(e.key, 'what key');\n    if (e.key === 'Enter') {\n      console.log('here');\n      const reply = eliza.transform(value);\n      chats.push({ id: Date.now(), message: value });\n      chats.push({ id: Date.now(), message: reply });\n      setChats(chats);\n    }\n  };\n  console.log(chats, 'what chats');\n  return (\n    <div>\n      <Input\n        onChange={e => setValue(e.currentTarget.value)}\n        onKeyPress={handleChat}\n      />\n      <ShowChats chats={chats} />\n    </div>\n  );\n};\n\nconst ShowChats = ({ chats }) => {\n  return (\n    <Fragment>\n      {chats &&\n        chats.length &&\n        chats.map(chat => (\n          <div key={chat.id}>\n            <Tag>{chat.message}</Tag>\n          </div>\n        ))}\n    </Fragment>\n  );\n};\n\nexport default Chatbot;\n"]},"metadata":{},"sourceType":"module"}