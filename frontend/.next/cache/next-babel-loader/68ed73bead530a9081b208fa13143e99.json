{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, LightTheme, DarkTheme } from 'baseui';\nimport { styletron, debug } from '../styletron';\nimport Layout from '../components/Layout/Layout';\nimport { ThemeSwitcherProvider, THEME } from '../contexts/theme/theme.provider';\nimport { CartProvider } from '../contexts/cart/cart.provider'; // external css\n\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport '../assets/css/reset.css';\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const [theme, setTheme] = React.useState(THEME.light);\n  React.useEffect(() => {\n    let SAVED_THEME = localStorage.getItem('theme');\n\n    if (SAVED_THEME === null) {\n      SAVED_THEME = THEME.light;\n    }\n\n    setTheme(SAVED_THEME);\n  }, []);\n  return __jsx(ThemeSwitcherProvider, {\n    value: {\n      theme,\n      setTheme\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(StyletronProvider, {\n    value: styletron,\n    debug: debug,\n    debugAfterHydration: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(BaseProvider, {\n    theme: theme === THEME.light ? _objectSpread({}, LightTheme, {\n      direction: 'ltr'\n    }) : _objectSpread({}, DarkTheme, {\n      direction: 'ltr'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(CartProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/pages/_app.tsx"],"names":["React","Provider","StyletronProvider","BaseProvider","LightTheme","DarkTheme","styletron","debug","Layout","ThemeSwitcherProvider","THEME","CartProvider","App","Component","pageProps","theme","setTheme","useState","light","useEffect","SAVED_THEME","localStorage","getItem","direction"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAQ,IAAIC,iBAArB,QAA8C,iBAA9C;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,SAAnC,QAAoD,QAApD;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,cAAjC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,qBAAT,EAAgCC,KAAhC,QAA6C,kCAA7C;AACA,SAASC,YAAT,QAA6B,gCAA7B,C,CACA;;AACA,OAAO,4CAAP;AACA,OAAO,uCAAP;AACA,OAAO,mDAAP;AACA,OAAO,yBAAP;;AAEA,MAAMC,GAGJ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACiB,QAAN,CAAeP,KAAK,CAACQ,KAArB,CAA1B;AACAlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,QAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;;AACA,QAAIF,WAAW,KAAK,IAApB,EAA0B;AACxBA,MAAAA,WAAW,GAAGV,KAAK,CAACQ,KAApB;AACD;;AACDF,IAAAA,QAAQ,CAACI,WAAD,CAAR;AACD,GAND,EAMG,EANH;AAOA,SACE,MAAC,qBAAD;AAAuB,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEV,SAA1B;AAAqC,IAAA,KAAK,EAAEC,KAA5C;AAAmD,IAAA,mBAAmB,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,KAAK,EACHQ,KAAK,KAAKL,KAAK,CAACQ,KAAhB,qBACSd,UADT;AACqBmB,MAAAA,SAAS,EAAE;AADhC,2BAESlB,SAFT;AAEoBkB,MAAAA,SAAS,EAAE;AAF/B,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeT,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CAPF,CADF,CADF,CADF;AAmBD,CA/BD;;AAiCA,eAAeF,GAAf","sourcesContent":["import React from 'react';\nimport { NextPage } from 'next';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, LightTheme, DarkTheme } from 'baseui';\nimport { styletron, debug } from '../styletron';\nimport Layout from '../components/Layout/Layout';\nimport { ThemeSwitcherProvider, THEME } from '../contexts/theme/theme.provider';\nimport { CartProvider } from '../contexts/cart/cart.provider';\n// external css\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport '../assets/css/reset.css';\n\nconst App: NextPage<{\n  Component: any;\n  pageProps: any;\n}> = ({ Component, pageProps }) => {\n  const [theme, setTheme] = React.useState(THEME.light);\n  React.useEffect(() => {\n    let SAVED_THEME = localStorage.getItem('theme');\n    if (SAVED_THEME === null) {\n      SAVED_THEME = THEME.light;\n    }\n    setTheme(SAVED_THEME);\n  }, []);\n  return (\n    <ThemeSwitcherProvider value={{ theme, setTheme }}>\n      <StyletronProvider value={styletron} debug={debug} debugAfterHydration>\n        <BaseProvider\n          theme={\n            theme === THEME.light\n              ? { ...LightTheme, direction: 'ltr' }\n              : { ...DarkTheme, direction: 'ltr' }\n          }\n        >\n          <CartProvider>\n            <Layout>\n              <Component {...pageProps} />\n            </Layout>\n          </CartProvider>\n        </BaseProvider>\n      </StyletronProvider>\n    </ThemeSwitcherProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}