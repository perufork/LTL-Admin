{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/containers/Todo/TodoTabs.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TodoApp from './TodoApp';\nimport TodoProvider from './TodoContext';\nimport { Button } from 'baseui/button';\nimport { Block } from 'baseui/block';\nexport default function TodoTab() {\n  var _useState = useState('all'),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  return __jsx(TodoProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setStatus('all');\n    },\n    kind: status === 'all' ? 'primary' : 'secondary',\n    overrides: {\n      BaseButton: {\n        style: function style(_ref) {\n          var $theme = _ref.$theme;\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"All\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setStatus('done');\n    },\n    kind: status === 'done' ? 'primary' : 'secondary',\n    overrides: {\n      BaseButton: {\n        style: function style(_ref2) {\n          var $theme = _ref2.$theme;\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Done\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setStatus('pending');\n    },\n    kind: status === 'pending' ? 'primary' : 'secondary',\n    overrides: {\n      BaseButton: {\n        style: function style(_ref3) {\n          var $theme = _ref3.$theme;\n          return _objectSpread({}, $theme.typography.font350);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Pending\"), __jsx(Block, {\n    paddingTop: \"10px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(TodoApp, {\n    status: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/containers/Todo/TodoTabs.tsx"],"names":["React","useState","TodoApp","TodoProvider","Button","Block","TodoTab","status","setStatus","BaseButton","style","$theme","typography","font350"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA,kBACJL,QAAQ,CAAS,KAAT,CADJ;AAAA,MACzBM,MADyB;AAAA,MACjBC,SADiB;;AAGhC,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMA,SAAS,CAAC,KAAD,CAAf;AAAA,KADX;AAEE,IAAA,IAAI,EAAED,MAAM,KAAK,KAAX,GAAmB,SAAnB,GAA+B,WAFvC;AAGE,IAAA,SAAS,EAAE;AACTE,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,qBAAgB;AAAA,cAAbC,MAAa,QAAbA,MAAa;AACrB,mCACKA,MAAM,CAACC,UAAP,CAAkBC,OADvB;AAGD;AALS;AADH,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAgBE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAML,SAAS,CAAC,MAAD,CAAf;AAAA,KADX;AAEE,IAAA,IAAI,EAAED,MAAM,KAAK,MAAX,GAAoB,SAApB,GAAgC,WAFxC;AAGE,IAAA,SAAS,EAAE;AACTE,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,sBAAgB;AAAA,cAAbC,MAAa,SAAbA,MAAa;AACrB,mCACKA,MAAM,CAACC,UAAP,CAAkBC,OADvB;AAGD;AALS;AADH,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,EA+BE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAML,SAAS,CAAC,SAAD,CAAf;AAAA,KADX;AAEE,IAAA,IAAI,EAAED,MAAM,KAAK,SAAX,GAAuB,SAAvB,GAAmC,WAF3C;AAGE,IAAA,SAAS,EAAE;AACTE,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,sBAAgB;AAAA,cAAbC,MAAa,SAAbA,MAAa;AACrB,mCACKA,MAAM,CAACC,UAAP,CAAkBC,OADvB;AAGD;AALS;AADH,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/BF,EA+CE,MAAC,KAAD;AAAO,IAAA,UAAU,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,MAAM,EAAEN,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/CF,CADF;AAqDD","sourcesContent":["import React, { useState } from 'react';\nimport TodoApp from './TodoApp';\nimport TodoProvider from './TodoContext';\nimport { Button } from 'baseui/button';\nimport { Block } from 'baseui/block';\n\nexport default function TodoTab() {\n  const [status, setStatus] = useState<string>('all');\n\n  return (\n    <TodoProvider>\n      <Button\n        onClick={() => setStatus('all')}\n        kind={status === 'all' ? 'primary' : 'secondary'}\n        overrides={{\n          BaseButton: {\n            style: ({ $theme }) => {\n              return {\n                ...$theme.typography.font350,\n              };\n            },\n          },\n        }}\n      >\n        All\n      </Button>\n      <Button\n        onClick={() => setStatus('done')}\n        kind={status === 'done' ? 'primary' : 'secondary'}\n        overrides={{\n          BaseButton: {\n            style: ({ $theme }) => {\n              return {\n                ...$theme.typography.font350,\n              };\n            },\n          },\n        }}\n      >\n        Done\n      </Button>\n      <Button\n        onClick={() => setStatus('pending')}\n        kind={status === 'pending' ? 'primary' : 'secondary'}\n        overrides={{\n          BaseButton: {\n            style: ({ $theme }) => {\n              return {\n                ...$theme.typography.font350,\n              };\n            },\n          },\n        }}\n      >\n        Pending\n      </Button>\n\n      <Block paddingTop=\"10px\">\n        <TodoApp status={status} />\n      </Block>\n    </TodoProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}