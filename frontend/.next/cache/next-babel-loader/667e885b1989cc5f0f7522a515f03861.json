{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport isoConfig from './config';\n/**\n * For SSR initialization needed with this check\n * to prevent it to initialize on both server & client\n * otherwise it may give error\n */\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(isoConfig);\n} else {\n  firebase.app();\n}\n\nconst firestore = firebase.firestore();\nexport default firebase;\nexport { firestore };","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/firebase/initialize.ts"],"names":["firebase","isoConfig","apps","length","initializeApp","app","firestore"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA;;;;;;AAKA,IAAI,CAACD,QAAQ,CAACE,IAAT,CAAcC,MAAnB,EAA2B;AACzBH,EAAAA,QAAQ,CAACI,aAAT,CAAuBH,SAAvB;AACD,CAFD,MAEO;AACLD,EAAAA,QAAQ,CAACK,GAAT;AACD;;AAED,MAAMC,SAAS,GAAGN,QAAQ,CAACM,SAAT,EAAlB;AACA,eAAeN,QAAf;AACA,SAASM,SAAT","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport isoConfig from './config';\n\n/**\n * For SSR initialization needed with this check\n * to prevent it to initialize on both server & client\n * otherwise it may give error\n */\nif (!firebase.apps.length) {\n  firebase.initializeApp(isoConfig);\n} else {\n  firebase.app();\n}\n\nconst firestore = firebase.firestore();\nexport default firebase;\nexport { firestore };\n"]},"metadata":{},"sourceType":"module"}