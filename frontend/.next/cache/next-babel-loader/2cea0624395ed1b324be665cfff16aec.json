{"ast":null,"code":"var _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/components/UiElements/Popover/Popover.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useStyletron } from 'baseui';\nimport { Button } from 'baseui/button';\nimport { StatefulPopover } from 'baseui/popover';\nimport { Paragraph3 } from 'baseui/typography';\n\nconst Popover = ({\n  children,\n  content,\n  onConfirm,\n  data\n}) => {\n  const [css, theme] = useStyletron();\n  const contentCx = css({\n    padding: theme.sizing.scale500,\n    maxWidth: '300px'\n  });\n  return __jsx(\"div\", {\n    onFocus: ref => ref.current.focus({\n      preventSroll: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(StatefulPopover, {\n    showArrow: true,\n    placement: \"top\",\n    initialState: {\n      isOpen: true\n    },\n    dismissOnEsc: true,\n    dismissOnClickOutside: true,\n    accessibilityType: 'tooltip',\n    content: ({\n      close\n    }) => __jsx(\"div\", {\n      className: contentCx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(Paragraph3, {\n      paddingBottom: \"scale400\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, content), __jsx(Button, {\n      onClick: close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Cancel\"), __jsx(Button, {\n      onClick: () => {\n        onConfirm(data);\n        close();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Confirm\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, children));\n};\n\nexport default Popover;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/components/UiElements/Popover/Popover.tsx"],"names":["React","useStyletron","Button","StatefulPopover","Paragraph3","Popover","children","content","onConfirm","data","css","theme","contentCx","padding","sizing","scale500","maxWidth","ref","current","focus","preventSroll","isOpen","close"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,MAAT,QAA6B,eAA7B;AACA,SAASC,eAAT,QAAmD,gBAAnD;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,SAArB;AAAgCC,EAAAA;AAAhC,CAAD,KAA4C;AAC1D,QAAM,CAACC,GAAD,EAAMC,KAAN,IAAeV,YAAY,EAAjC;AACA,QAAMW,SAAS,GAAGF,GAAG,CAAC;AACpBG,IAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC,QADF;AAEpBC,IAAAA,QAAQ,EAAE;AAFU,GAAD,CAArB;AAIA,SACE;AACE,IAAA,OAAO,EAAEC,GAAG,IACVA,GAAG,CAACC,OAAJ,CAAYC,KAAZ,CAAkB;AAChBC,MAAAA,YAAY,EAAE;AADE,KAAlB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,eAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,YAAY,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAHhB;AAIE,IAAA,YAAY,EAAE,IAJhB;AAKE,IAAA,qBAAqB,EAAE,IALzB;AAME,IAAA,iBAAiB,EAAE,SANrB;AAOE,IAAA,OAAO,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACP;AAAK,MAAA,SAAS,EAAEV,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,aAAa,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCL,OAAtC,CADF,EAEE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAEe,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,MAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbd,QAAAA,SAAS,CAACC,IAAD,CAAT;AACAa,QAAAA,KAAK;AACN,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBGhB,QAtBH,CAPF,CADF;AAkCD,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["import React from 'react';\nimport { useStyletron } from 'baseui';\nimport { Button, SIZE } from 'baseui/button';\nimport { StatefulPopover, StatefulContainer } from 'baseui/popover';\nimport { Paragraph3 } from 'baseui/typography';\n\nconst Popover = ({ children, content, onConfirm, data }) => {\n  const [css, theme] = useStyletron();\n  const contentCx = css({\n    padding: theme.sizing.scale500,\n    maxWidth: '300px',\n  });\n  return (\n    <div\n      onFocus={ref =>\n        ref.current.focus({\n          preventSroll: true,\n        })\n      }\n    >\n      <StatefulPopover\n        showArrow\n        placement=\"top\"\n        initialState={{ isOpen: true }}\n        dismissOnEsc={true}\n        dismissOnClickOutside={true}\n        accessibilityType={'tooltip'}\n        content={({ close }) => (\n          <div className={contentCx}>\n            <Paragraph3 paddingBottom=\"scale400\">{content}</Paragraph3>\n            <Button onClick={close}>Cancel</Button>\n            <Button\n              onClick={() => {\n                onConfirm(data);\n                close();\n              }}\n            >\n              Confirm\n            </Button>\n          </div>\n        )}\n      >\n        {children}\n      </StatefulPopover>\n    </div>\n  );\n};\n\nexport default Popover;\n"]},"metadata":{},"sourceType":"module"}