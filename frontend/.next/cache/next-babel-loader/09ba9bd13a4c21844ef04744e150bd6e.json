{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/containers/Todo/TodoItem.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState, Fragment } from 'react';\nimport { AiFillCloseSquare, AiOutlineEdit } from 'react-icons/ai';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { Checkbox } from 'baseui/checkbox';\nimport { Grab } from 'baseui/icon';\nimport { Block } from 'baseui/block';\nimport { TodoContext } from './TodoContext';\nimport { TodoItemWrapper, TodoItem, EditButton, RemoveButton } from './Todo.styled';\n/**\n * Update Todo Component\n */\n\nfunction UpdateTodo(_ref) {\n  var todoItem = _ref.todoItem,\n      updateTodo = _ref.updateTodo,\n      setShowInput = _ref.setShowInput;\n\n  var _React$useState = React.useState(todoItem.content),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var updateTodoItem = function updateTodoItem() {\n    var updatedTodo = _objectSpread({}, todoItem, {\n      content: value\n    });\n\n    updateTodo(updatedTodo);\n    setShowInput(false);\n  };\n\n  return __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Input, {\n    autoFocus: true,\n    value: value,\n    onChange: function onChange(event) {\n      return setValue(event.currentTarget.value);\n    },\n    placeholder: \"Enter Your Todo\",\n    overrides: {\n      Root: {\n        style: {\n          minHeight: '54px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(Button, {\n    overrides: {\n      BaseButton: {\n        style: function style(_ref2) {\n          var $theme = _ref2.$theme;\n          return _objectSpread({}, $theme.typography.font250, {\n            minWidth: '80px',\n            minHeight: '54px',\n            '@media only screen and (min-width: 481px)': {\n              minWidth: '130px'\n            }\n          });\n        }\n      }\n    },\n    onClick: function onClick() {\n      return updateTodoItem();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Update\"));\n}\n\nfunction Todo(_ref3) {\n  var todo = _ref3.todo,\n      index = _ref3.index;\n\n  var _useContext = useContext(TodoContext),\n      updateTodo = _useContext.updateTodo,\n      removeTodo = _useContext.removeTodo;\n\n  var _useState = useState(false),\n      showInput = _useState[0],\n      setShowInput = _useState[1];\n\n  var checked = todo.status === 'done' ? true : false;\n\n  var updateTodoStatus = function updateTodoStatus(status) {\n    var todoStatus = _objectSpread({}, todo, {\n      status: status === true ? 'done' : 'pending'\n    });\n\n    updateTodo(todoStatus);\n  };\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, !showInput ? __jsx(Draggable, {\n    draggableId: todo.id,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, function (provided) {\n    return __jsx(TodoItem, _extends({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), __jsx(TodoItemWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(Block, {\n      overrides: {\n        Block: {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(Grab, {\n      size: 24,\n      color: \"#545454\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), __jsx(Checkbox, {\n      checked: checked,\n      onChange: function onChange() {\n        return updateTodoStatus(!checked);\n      },\n      overrides: {\n        Root: {\n          style: {\n            paddingLeft: '10px',\n            paddingRight: '10px',\n            '@media only screen and (max-width: 480px)': {\n              alignItems: 'center'\n            }\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, todo.content)), __jsx(Block, {\n      overrides: {\n        Block: {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(EditButton, {\n      onClick: function onClick(e) {\n        e.preventDefault();\n        setShowInput(!showInput);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(AiOutlineEdit, {\n      size: '24px',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), __jsx(RemoveButton, {\n      onClick: function onClick(e) {\n        e.preventDefault();\n        removeTodo(todo.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(AiFillCloseSquare, {\n      size: '24px',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))));\n  }) : __jsx(UpdateTodo, {\n    todoItem: todo,\n    updateTodo: updateTodo,\n    setShowInput: setShowInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/containers/Todo/TodoItem.tsx"],"names":["React","useContext","useState","Fragment","AiFillCloseSquare","AiOutlineEdit","Draggable","Input","Button","Checkbox","Grab","Block","TodoContext","TodoItemWrapper","TodoItem","EditButton","RemoveButton","UpdateTodo","todoItem","updateTodo","setShowInput","content","value","setValue","updateTodoItem","updatedTodo","style","display","alignItems","event","currentTarget","Root","minHeight","BaseButton","$theme","typography","font250","minWidth","Todo","todo","index","removeTodo","showInput","checked","status","updateTodoStatus","todoStatus","id","provided","innerRef","draggableProps","dragHandleProps","paddingLeft","paddingRight","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useContext, useState, Fragment } from 'react';\nimport { AiFillCloseSquare, AiOutlineEdit } from 'react-icons/ai';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { Checkbox } from 'baseui/checkbox';\nimport { Grab } from 'baseui/icon';\nimport { Block } from 'baseui/block';\nimport { TodoType } from './TodoType';\nimport { TodoContext } from './TodoContext';\nimport {\n  TodoItemWrapper,\n  TodoItem,\n  EditButton,\n  RemoveButton,\n} from './Todo.styled';\n\n/**\n * Update Todo Component\n */\nfunction UpdateTodo({\n  todoItem,\n  updateTodo,\n  setShowInput,\n}: {\n  todoItem: TodoType;\n  updateTodo: Function;\n  setShowInput: any;\n}) {\n  const [value, setValue] = React.useState(todoItem.content);\n  const updateTodoItem = () => {\n    const updatedTodo = {\n      ...todoItem,\n      content: value,\n    };\n    updateTodo(updatedTodo);\n    setShowInput(false);\n  };\n  return (\n    <Block\n      overrides={{\n        Block: { style: { display: 'flex', alignItems: 'center' } },\n      }}\n    >\n      <Input\n        autoFocus={true}\n        value={value}\n        onChange={event => setValue(event.currentTarget.value)}\n        placeholder=\"Enter Your Todo\"\n        overrides={{ Root: { style: { minHeight: '54px' } } }}\n      />\n      <Button\n        overrides={{\n          BaseButton: {\n            style: ({ $theme }) => {\n              return {\n                ...$theme.typography.font250,\n                minWidth: '80px',\n                minHeight: '54px',\n                '@media only screen and (min-width: 481px)': {\n                  minWidth: '130px',\n                },\n              };\n            },\n          },\n        }}\n        onClick={() => updateTodoItem()}\n      >\n        Update\n      </Button>\n    </Block>\n  );\n}\n\nfunction Todo({ todo, index }: { todo: TodoType; index: number }) {\n  const { updateTodo, removeTodo } = useContext(TodoContext);\n  const [showInput, setShowInput] = useState(false);\n  const checked = todo.status === 'done' ? true : false;\n  const updateTodoStatus = (status: boolean) => {\n    const todoStatus = {\n      ...todo,\n      status: status === true ? 'done' : 'pending',\n    };\n    updateTodo(todoStatus);\n  };\n  return (\n    <Fragment>\n      {!showInput ? (\n        <Draggable draggableId={todo.id} index={index}>\n          {provided => (\n            <TodoItem\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <TodoItemWrapper>\n                <Block\n                  overrides={{\n                    Block: { style: { display: 'flex', alignItems: 'center' } },\n                  }}\n                >\n                  <Grab size={24} color=\"#545454\" />\n                  <Checkbox\n                    checked={checked}\n                    onChange={() => updateTodoStatus(!checked)}\n                    overrides={{\n                      Root: {\n                        style: {\n                          paddingLeft: '10px',\n                          paddingRight: '10px',\n                          '@media only screen and (max-width: 480px)': {\n                            alignItems: 'center',\n                          },\n                        },\n                      },\n                    }}\n                  >\n                    {todo.content}\n                  </Checkbox>\n                </Block>\n                <Block\n                  overrides={{\n                    Block: { style: { display: 'flex', alignItems: 'center' } },\n                  }}\n                >\n                  <EditButton\n                    onClick={e => {\n                      e.preventDefault();\n                      setShowInput(!showInput);\n                    }}\n                  >\n                    <AiOutlineEdit size={'24px'} />\n                  </EditButton>\n                  <RemoveButton\n                    onClick={e => {\n                      e.preventDefault();\n                      removeTodo(todo.id);\n                    }}\n                  >\n                    <AiFillCloseSquare size={'24px'} />\n                  </RemoveButton>\n                </Block>\n              </TodoItemWrapper>\n            </TodoItem>\n          )}\n        </Draggable>\n      ) : (\n        <UpdateTodo\n          todoItem={todo}\n          updateTodo={updateTodo}\n          setShowInput={setShowInput}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}