{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/components/UiElements/ListGridCard/ListGridCard.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Wrapper, { Image, Content, Title, TitleLink, Paragraph, Link, Img } from './ListGridCard.styled';\n\nconst ListGridCard = ({\n  thumb,\n  thumbWidth,\n  thumbHeight,\n  title,\n  description,\n  author,\n  authorUrl,\n  btn,\n  variant = 'list',\n  style,\n  websiteUrl\n}) => {\n  const addClasses = [];\n\n  if (variant === 'list') {\n    addClasses.push('listgrid-card');\n  }\n\n  if (thumb) {\n    addClasses.push('has-thumb');\n  }\n\n  return __jsx(Wrapper, {\n    className: addClasses.join(' '),\n    $variant: variant,\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, thumb && __jsx(Image, {\n    $variant: variant,\n    $thumbHeight: thumbHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Img, {\n    $thumbWidth: thumbWidth,\n    src: thumb,\n    alt: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), __jsx(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Title, {\n    $variant: variant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, websiteUrl ? __jsx(TitleLink, {\n    href: websiteUrl,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, title) : title), __jsx(Paragraph, {\n    $variant: variant,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, description, ' ', author && __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Owned by \", __jsx(Link, {\n    href: authorUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, author))), btn && btn));\n};\n\nexport default ListGridCard;","map":{"version":3,"sources":["/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/components/UiElements/ListGridCard/ListGridCard.tsx"],"names":["React","Wrapper","Image","Content","Title","TitleLink","Paragraph","Link","Img","ListGridCard","thumb","thumbWidth","thumbHeight","title","description","author","authorUrl","btn","variant","style","websiteUrl","addClasses","push","join"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,IACEC,KADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,IANF,EAOEC,GAPF,QAQO,uBARP;;AAwBA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,KADoB;AAEpBC,EAAAA,UAFoB;AAGpBC,EAAAA,WAHoB;AAIpBC,EAAAA,KAJoB;AAKpBC,EAAAA,WALoB;AAMpBC,EAAAA,MANoB;AAOpBC,EAAAA,SAPoB;AAQpBC,EAAAA,GARoB;AASpBC,EAAAA,OAAO,GAAG,MATU;AAUpBC,EAAAA,KAVoB;AAWpBC,EAAAA;AAXoB,CAAD,KAYG;AACtB,QAAMC,UAAU,GAAG,EAAnB;;AACA,MAAIH,OAAO,KAAK,MAAhB,EAAwB;AACtBG,IAAAA,UAAU,CAACC,IAAX,CAAgB,eAAhB;AACD;;AACD,MAAIZ,KAAJ,EAAW;AACTW,IAAAA,UAAU,CAACC,IAAX,CAAgB,WAAhB;AACD;;AAED,SACE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAED,UAAU,CAACE,IAAX,CAAgB,GAAhB,CAApB;AAA0C,IAAA,QAAQ,EAAEL,OAApD;AAA6D,IAAA,KAAK,EAAEC,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,IACJ,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAEQ,OAAjB;AAA0B,IAAA,YAAY,EAAEN,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,WAAW,EAAED,UAAlB;AAA8B,IAAA,GAAG,EAAED,KAAnC;AAA0C,IAAA,GAAG,EAAEG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAOE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,UAAU,GACT,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,UAAjB;AAA6B,IAAA,MAAM,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KADH,CADS,GAKTA,KANJ,CADF,EAUE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAEK,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WADH,EACgB,GADhB,EAEGC,MAAM,IACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACW,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBD,MAAxB,CADX,CAHJ,CAVF,EAkBGE,GAAG,IAAIA,GAlBV,CAPF,CADF;AA8BD,CAnDD;;AAqDA,eAAeR,YAAf","sourcesContent":["import React from 'react';\nimport Wrapper, {\n  Image,\n  Content,\n  Title,\n  TitleLink,\n  Paragraph,\n  Link,\n  Img,\n} from './ListGridCard.styled';\n\ntype ListGridCardType = {\n  thumb?: string;\n  thumbWidth?: string;\n  thumbHeight?: string;\n  title?: string;\n  description?: string;\n  author?: string;\n  authorUrl?: string;\n  btn?: React.ReactNode;\n  variant?: 'grid' | 'list';\n  style?: React.CSSProperties;\n  websiteUrl?: string;\n};\n\nconst ListGridCard = ({\n  thumb,\n  thumbWidth,\n  thumbHeight,\n  title,\n  description,\n  author,\n  authorUrl,\n  btn,\n  variant = 'list',\n  style,\n  websiteUrl,\n}: ListGridCardType) => {\n  const addClasses = [];\n  if (variant === 'list') {\n    addClasses.push('listgrid-card');\n  }\n  if (thumb) {\n    addClasses.push('has-thumb');\n  }\n\n  return (\n    <Wrapper className={addClasses.join(' ')} $variant={variant} style={style}>\n      {thumb && (\n        <Image $variant={variant} $thumbHeight={thumbHeight}>\n          <Img $thumbWidth={thumbWidth} src={thumb} alt={title} />\n        </Image>\n      )}\n\n      <Content>\n        <Title $variant={variant}>\n          {websiteUrl ? (\n            <TitleLink href={websiteUrl} target=\"_blank\">\n              {title}\n            </TitleLink>\n          ) : (\n            title\n          )}\n        </Title>\n        <Paragraph $variant={variant}>\n          {description}{' '}\n          {author && (\n            <span>\n              Owned by <Link href={authorUrl}>{author}</Link>\n            </span>\n          )}\n        </Paragraph>\n        {btn && btn}\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default ListGridCard;\n"]},"metadata":{},"sourceType":"module"}