{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nexport var initialState = {\n  hidden: true,\n  cartItems: [],\n  address: null\n}; // type State = typeof initialState;\n\nexport default function cartReducer(state, action) {\n  console.log(state, 'context state');\n\n  switch (action.type) {\n    case 'TOGGLE_CART_HIDDEN':\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case 'ADD_ITEM':\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case 'REMOVE_ITEM':\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case 'CLEAR_ITEM_FROM_CART':\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(function (cartItem) {\n          return cartItem.id !== action.payload.id;\n        })\n      });\n\n    case 'CLEAR_CART':\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n    // default: {\n    //   throw new Error(`Unhandled action type: ${action.type}`);\n    // }\n  }\n}","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/contexts/cart/cart.reducer.ts"],"names":["addItemToCart","removeItemFromCart","initialState","hidden","cartItems","address","cartReducer","state","action","console","log","type","payload","filter","cartItem","id"],"mappings":";;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,IADkB;AAE1BC,EAAAA,SAAS,EAAE,EAFe;AAG1BC,EAAAA,OAAO,EAAE;AAHiB,CAArB,C,CAKP;;AAQA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAAmCC,MAAnC,EAA0D;AACvEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmB,eAAnB;;AAEA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,oBAAL;AACE,+BACKJ,KADL;AAEEJ,QAAAA,MAAM,EAAE,CAACI,KAAK,CAACJ;AAFjB;;AAIF,SAAK,UAAL;AACE,+BACKI,KADL;AAEEH,QAAAA,SAAS,EAAEJ,aAAa,CAACO,KAAK,CAACH,SAAP,EAAkBI,MAAM,CAACI,OAAzB;AAF1B;;AAIF,SAAK,aAAL;AACE,+BACKL,KADL;AAEEH,QAAAA,SAAS,EAAEH,kBAAkB,CAACM,KAAK,CAACH,SAAP,EAAkBI,MAAM,CAACI,OAAzB;AAF/B;;AAIF,SAAK,sBAAL;AACE,+BACKL,KADL;AAEEH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBS,MAAhB,CACT,UAACC,QAAD;AAAA,iBAAmBA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACI,OAAP,CAAeG,EAAlD;AAAA,SADS;AAFb;;AAMF,SAAK,YAAL;AACE,+BACKR,KADL;AAEEH,QAAAA,SAAS,EAAE;AAFb;;AAIF;AACE,aAAOG,KAAP;AACF;AACA;AACA;AAhCF;AAkCD","sourcesContent":["import { addItemToCart, removeItemFromCart } from './cart.utils';\n\nexport const initialState = {\n  hidden: true,\n  cartItems: [],\n  address: null,\n};\n// type State = typeof initialState;\ntype State = any;\ntype Action =\n  | { type: 'TOGGLE_CART_HIDDEN' }\n  | { type: 'ADD_ITEM'; payload: object }\n  | { type: 'REMOVE_ITEM'; payload: object }\n  | { type: 'CLEAR_ITEM_FROM_CART'; payload: any }\n  | { type: 'CLEAR_CART' };\nexport default function cartReducer(state: State, action: Action): State {\n  console.log(state, 'context state');\n\n  switch (action.type) {\n    case 'TOGGLE_CART_HIDDEN':\n      return {\n        ...state,\n        hidden: !state.hidden,\n      };\n    case 'ADD_ITEM':\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    case 'REMOVE_ITEM':\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\n      };\n    case 'CLEAR_ITEM_FROM_CART':\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (cartItem: any) => cartItem.id !== action.payload.id\n        ),\n      };\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        cartItems: [],\n      };\n    default:\n      return state;\n    // default: {\n    //   throw new Error(`Unhandled action type: ${action.type}`);\n    // }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}