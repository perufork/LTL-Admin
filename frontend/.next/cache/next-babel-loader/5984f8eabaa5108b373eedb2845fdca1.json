{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { createCtxWithReducer } from '../context.utils';\nimport cartReducer, { initialState } from './cart.reducer';\n\nvar _createCtxWithReducer = createCtxWithReducer(cartReducer, initialState),\n    _createCtxWithReducer2 = _slicedToArray(_createCtxWithReducer, 3),\n    useCartState = _createCtxWithReducer2[0],\n    useCartDispatch = _createCtxWithReducer2[1],\n    CartProvider = _createCtxWithReducer2[2];\n\nexport { useCartState, useCartDispatch, CartProvider }; // example usage inside a component\n// function Counter() {\n//   const { state, dispatch } = React.useContext(CountContext);\n//   return (\n//     <div>\n//       Count: {state.count}\n//       <button onClick={() => dispatch({ type: 'increment' })}>+</button>\n//       <button onClick={() => dispatch({ type: 'add', payload: 5 })}>+5</button>\n//       <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\n//       <button onClick={() => dispatch({ type: 'minus', payload: 5 })}>\n//         +5\n//       </button>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/contexts/cart/cart.provider.ts"],"names":["createCtxWithReducer","cartReducer","initialState","useCartState","useCartDispatch","CartProvider"],"mappings":";AAAA,SAASA,oBAAT,QAAqC,kBAArC;AACA,OAAOC,WAAP,IAAsBC,YAAtB,QAA0C,gBAA1C;;4BACsDF,oBAAoB,CACxEC,WADwE,EAExEC,YAFwE,C;;IAAnEC,Y;IAAcC,e;IAAiBC,Y;;AAKtC,SAASF,YAAT,EAAuBC,eAAvB,EAAwCC,YAAxC,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createCtxWithReducer } from '../context.utils';\nimport cartReducer, { initialState } from './cart.reducer';\nconst [useCartState, useCartDispatch, CartProvider] = createCtxWithReducer(\n  cartReducer,\n  initialState\n);\n\nexport { useCartState, useCartDispatch, CartProvider };\n\n// example usage inside a component\n// function Counter() {\n//   const { state, dispatch } = React.useContext(CountContext);\n//   return (\n//     <div>\n//       Count: {state.count}\n//       <button onClick={() => dispatch({ type: 'increment' })}>+</button>\n//       <button onClick={() => dispatch({ type: 'add', payload: 5 })}>+5</button>\n//       <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\n//       <button onClick={() => dispatch({ type: 'minus', payload: 5 })}>\n//         +5\n//       </button>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}