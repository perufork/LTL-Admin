{"ast":null,"code":"var _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/containers/Chatbot/Chat.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { Input } from 'baseui/input';\nimport { Tag } from 'baseui/tag';\nimport Eliza from 'elizabot';\nconst eliza = new Eliza();\n\nconst Chatbot = () => {\n  const {\n    0: chats,\n    1: setChats\n  } = useState([]);\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    0: listen,\n    1: setListen\n  } = useState(false);\n  useEffect(() => {\n    const setReply = () => {\n      const reply = eliza.transform(value);\n      chats.push({\n        id: Date.now(),\n        message: reply\n      });\n      setChats([...chats]);\n      setListen(false);\n    };\n\n    setTimeout(() => {\n      if (listen) setReply();\n    }, 500);\n  }, [listen]);\n\n  const handleChat = e => {\n    console.log(e.key, 'what key');\n\n    if (e.key === 'Enter') {\n      console.log('here');\n      chats.push({\n        id: Date.now(),\n        message: value\n      });\n      setChats([...chats]);\n      setValue('');\n      setListen(true);\n    }\n  };\n\n  console.log(chats, 'what chats');\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(ShowChats, {\n    chats: chats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Input, {\n    value: value,\n    onChange: e => setValue(e.currentTarget.value),\n    onKeyPress: handleChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n};\n\nconst ShowChats = ({\n  chats\n}) => {\n  console.log(chats, 'chat value received');\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, chats && chats.length ? chats.map((chat, index) => __jsx(\"div\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Tag, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, chat.message))) : null);\n};\n\nexport default Chatbot;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/containers/Chatbot/Chat.tsx"],"names":["React","useState","useEffect","Fragment","Input","Tag","Eliza","eliza","Chatbot","chats","setChats","value","setValue","listen","setListen","setReply","reply","transform","push","id","Date","now","message","setTimeout","handleChat","e","console","log","key","currentTarget","ShowChats","length","map","chat","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { Input } from 'baseui/input';\nimport { Tag } from 'baseui/tag';\nimport Eliza from 'elizabot';\n\nconst eliza = new Eliza();\n\nconst Chatbot = () => {\n  const [chats, setChats] = useState([]);\n  const [value, setValue] = useState('');\n  const [listen, setListen] = useState(false);\n  useEffect(() => {\n    const setReply = () => {\n      const reply = eliza.transform(value);\n      chats.push({ id: Date.now(), message: reply });\n      setChats([...chats]);\n      setListen(false);\n    };\n    setTimeout(() => {\n      if (listen) setReply();\n    }, 500);\n  }, [listen]);\n  const handleChat = e => {\n    console.log(e.key, 'what key');\n    if (e.key === 'Enter') {\n      console.log('here');\n      chats.push({ id: Date.now(), message: value });\n      setChats([...chats]);\n      setValue('');\n      setListen(true);\n    }\n  };\n  console.log(chats, 'what chats');\n  return (\n    <div>\n      <ShowChats chats={chats} />\n      <Input\n        value={value}\n        onChange={e => setValue(e.currentTarget.value)}\n        onKeyPress={handleChat}\n      />\n    </div>\n  );\n};\n\nconst ShowChats = ({ chats }) => {\n  console.log(chats, 'chat value received');\n  return (\n    <Fragment>\n      {chats && chats.length\n        ? chats.map((chat, index) => (\n            <div key={index}>\n              <Tag>{chat.message}</Tag>\n            </div>\n          ))\n        : null}\n    </Fragment>\n  );\n};\n\nexport default Chatbot;\n"]},"metadata":{},"sourceType":"module"}