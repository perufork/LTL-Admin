{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport isoConfig from './config';\n/**\n * For SSR initialization needed with this check\n * to prevent it to initialize on both server & client\n * otherwise it may give error\n */\n// if (!firebase.apps.length) {\n//   firebase.initializeApp(isoConfig);\n// } else {\n//   firebase.app();\n// }\n\nfirebase.initializeApp(isoConfig);\nvar firestore = firebase.firestore();\nexport default firebase;\nexport { firestore };","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/firebase/initialize.ts"],"names":["firebase","isoConfig","initializeApp","firestore"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;;AAEAD,QAAQ,CAACE,aAAT,CAAuBD,SAAvB;AAEA,IAAME,SAAS,GAAGH,QAAQ,CAACG,SAAT,EAAlB;AACA,eAAeH,QAAf;AACA,SAASG,SAAT","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport isoConfig from './config';\n\n/**\n * For SSR initialization needed with this check\n * to prevent it to initialize on both server & client\n * otherwise it may give error\n */\n// if (!firebase.apps.length) {\n//   firebase.initializeApp(isoConfig);\n// } else {\n//   firebase.app();\n// }\n\nfirebase.initializeApp(isoConfig);\n\nconst firestore = firebase.firestore();\nexport default firebase;\nexport { firestore };\n"]},"metadata":{},"sourceType":"module"}