{"ast":null,"code":"var _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/pages/apps/firebase-crud.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport { Modal, ModalHeader, ModalBody } from 'baseui/modal';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Textarea } from 'baseui/textarea';\nimport { Select } from 'baseui/select';\nimport Container from '../../components/UiElements/Container/Container';\nimport AppsMenu from '../../components/SideMenu/AppsMenu';\nimport { firebaseCRUDPageData } from '../../data/appsData';\nimport FirebaseCrud from '../../containers/Crud/Crud';\nimport { getDocuments, addDocument, updateDocument, deleteDocument } from '../../firebase/service';\nconst statusOptions = [{\n  label: 'Draft',\n  id: 'draft'\n}, {\n  label: 'Publish',\n  id: 'publish'\n}];\n\nconst FirebaseCRUD = () => {\n  const {\n    title,\n    subtitle\n  } = firebaseCRUDPageData;\n  const {\n    0: articles,\n    1: setArticles\n  } = useState([]);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: editState,\n    1: setEditState\n  } = useState(false);\n  const {\n    0: article,\n    1: setArticle\n  } = useState({\n    id: null,\n    title: '',\n    description: '',\n    slug: '',\n    status: []\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    // let data: articlesType;\n    const data = await getDocuments('articles');\n    console.log(data, 'data data');\n\n    if (data && data.length) {\n      console.log(data); // data = queryData;\n\n      setArticles(data);\n    }\n  };\n\n  const handleAddArticle = () => {\n    setVisible(true);\n    setEditState(false);\n  };\n\n  const handleModdalClose = () => {\n    setVisible(false);\n    setArticle({\n      id: null,\n      title: '',\n      description: '',\n      slug: '',\n      status: []\n    });\n  };\n\n  const handleDeleteArticle = async id => {\n    console.log(id, 'what id');\n\n    if (id) {\n      const deleted = await deleteDocument('articles', id);\n\n      if (deleted) {\n        fetchData();\n      }\n    }\n  };\n\n  const handleUpdateArticle = async item => {\n    setVisible(true);\n    setEditState(true);\n    const index = statusOptions.findIndex(option => option.id === item.status);\n    let status = {\n      label: 'Draft',\n      id: 'draft'\n    };\n\n    if (index > -1) {\n      status = statusOptions[index];\n    }\n\n    setArticle(_objectSpread({}, article, {}, item, {\n      status\n    }));\n    console.log(item, 'item');\n  };\n\n  const handleOnChange = name => e => {\n    let value;\n\n    if (name === 'status') {\n      value = e.value;\n    } else {\n      value = e.target.value;\n    }\n\n    setArticle(_objectSpread({}, article, {\n      [name]: value\n    }));\n  };\n\n  const handleOnSubmit = async () => {\n    console.log('Form submit', article); // const slug = `${article.slug}-${Date.now()}`;\n\n    const status = article.status && article.status.length ? article.status[0].id : 'draft';\n    const slug = article.id ? article.slug : `${article.slug}-${Date.now()}`;\n\n    const data = _objectSpread({}, article, {\n      slug,\n      status\n    });\n\n    let id = null;\n\n    if (article.id) {\n      id = await updateDocument('articles', data);\n    } else {\n      id = await addDocument('articles', data);\n    }\n\n    console.log(id, 'what id');\n\n    if (id) {\n      fetchData();\n      setVisible(false);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, title, \" | INST.\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['15px', '20px', '30px', '40px'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(Col, {\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(AppsMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })), __jsx(Col, {\n    lg: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(FirebaseCrud, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))))), __jsx(Modal, {\n    onClose: handleModdalClose,\n    closeable: true,\n    isOpen: visible,\n    animate: true,\n    size: \"default\",\n    role: \"dialog\",\n    unstable_ModalBackdropScroll: true,\n    overrides: {\n      Root: {\n        style: () => {\n          return {\n            zIndex: 9999\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, __jsx(ModalHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, editState ? 'Update Article' : 'Add Article'), __jsx(ModalBody, {\n    style: {\n      overflow: 'hidden'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, __jsx(FlexGrid, {\n    flexGridColumnCount: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Title\",\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, __jsx(Input, {\n    name: \"title\",\n    value: article.title,\n    onChange: handleOnChange('title'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Description\",\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, __jsx(Textarea, {\n    value: article.description,\n    onChange: handleOnChange('description'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Slug\",\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, __jsx(Input, {\n    value: article.slug,\n    onChange: handleOnChange('slug'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Status\",\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, __jsx(Select, {\n    options: statusOptions,\n    placeholder: \"\",\n    value: article.status,\n    onChange: handleOnChange('status'),\n    overrides: {\n      ControlContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    overrides: {\n      Block: {\n        style: {\n          marginTop: '30px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: handleOnSubmit,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, editState ? 'Update Article' : 'Add Article'), __jsx(Button, {\n    kind: \"minimal\",\n    onClick: handleModdalClose,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, \"Cancel\"))))));\n};\n\nexport default FirebaseCRUD;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/pages/apps/firebase-crud.tsx"],"names":["React","useState","useEffect","Head","Row","Col","Block","Button","Modal","ModalHeader","ModalBody","FlexGrid","FlexGridItem","FormControl","Input","Textarea","Select","Container","AppsMenu","firebaseCRUDPageData","FirebaseCrud","getDocuments","addDocument","updateDocument","deleteDocument","statusOptions","label","id","FirebaseCRUD","title","subtitle","articles","setArticles","visible","setVisible","editState","setEditState","article","setArticle","description","slug","status","fetchData","data","console","log","length","handleAddArticle","handleModdalClose","handleDeleteArticle","deleted","handleUpdateArticle","item","index","findIndex","option","handleOnChange","name","e","value","target","handleOnSubmit","Date","now","Root","style","zIndex","overflow","Label","$theme","typography","font200","InputContainer","backgroundColor","ControlContainer","marginTop","BaseButton","font250"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from 'react';\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport { AiFillCloseSquare } from 'react-icons/ai';\nimport { IoIosEye } from 'react-icons/io';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Tag } from 'baseui/tag';\nimport { Block } from 'baseui/block';\nimport { Button } from 'baseui/button';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { Modal, ModalHeader, ModalBody } from 'baseui/modal';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Textarea } from 'baseui/textarea';\nimport { Select } from 'baseui/select';\nimport Container from '../../components/UiElements/Container/Container';\nimport AppsMenu from '../../components/SideMenu/AppsMenu';\nimport IconButton from '../../components/UiElements/IconButton/IconButton';\nimport { StyledTableHeadAlt } from '../../components/PageStyles/Apps.styled';\nimport { firebaseCRUDPageData } from '../../data/appsData';\nimport { articleType, articlesType } from '../../types';\nimport FirebaseCrud from '../../containers/Crud/Crud';\nimport {\n  getDocuments,\n  addDocument,\n  updateDocument,\n  deleteDocument,\n} from '../../firebase/service';\n\nconst statusOptions = [\n  { label: 'Draft', id: 'draft' },\n  { label: 'Publish', id: 'publish' },\n];\n\nconst FirebaseCRUD: NextPage<{}> = () => {\n  const { title, subtitle } = firebaseCRUDPageData;\n  const [articles, setArticles] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [editState, setEditState] = useState(false);\n  const [article, setArticle] = useState({\n    id: null,\n    title: '',\n    description: '',\n    slug: '',\n    status: [],\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    // let data: articlesType;\n    const data = await getDocuments('articles');\n    console.log(data, 'data data');\n    if (data && data.length) {\n      console.log(data);\n      // data = queryData;\n      setArticles(data);\n    }\n  };\n  const handleAddArticle = () => {\n    setVisible(true);\n    setEditState(false);\n  };\n\n  const handleModdalClose = () => {\n    setVisible(false);\n    setArticle({\n      id: null,\n      title: '',\n      description: '',\n      slug: '',\n      status: [],\n    });\n  };\n\n  const handleDeleteArticle = async (id: string) => {\n    console.log(id, 'what id');\n    if (id) {\n      const deleted = await deleteDocument('articles', id);\n      if (deleted) {\n        fetchData();\n      }\n    }\n  };\n\n  const handleUpdateArticle = async (item: any) => {\n    setVisible(true);\n    setEditState(true);\n    const index = statusOptions.findIndex(option => option.id === item.status);\n    let status = { label: 'Draft', id: 'draft' };\n    if (index > -1) {\n      status = statusOptions[index];\n    }\n    setArticle({\n      ...article,\n      ...item,\n      status,\n    });\n    console.log(item, 'item');\n  };\n\n  const handleOnChange = (name: string) => (e: any) => {\n    let value: any;\n    if (name === 'status') {\n      value = e.value;\n    } else {\n      value = e.target.value;\n    }\n\n    setArticle({\n      ...article,\n      [name]: value,\n    });\n  };\n\n  const handleOnSubmit = async () => {\n    console.log('Form submit', article);\n    // const slug = `${article.slug}-${Date.now()}`;\n    const status =\n      article.status && article.status.length ? article.status[0].id : 'draft';\n    const slug = article.id ? article.slug : `${article.slug}-${Date.now()}`;\n    const data = {\n      ...article,\n      slug,\n      status,\n    };\n    let id = null;\n    if (article.id) {\n      id = await updateDocument('articles', data);\n    } else {\n      id = await addDocument('articles', data);\n    }\n    console.log(id, 'what id');\n    if (id) {\n      fetchData();\n      setVisible(false);\n    }\n  };\n\n  return (\n    <>\n      <Head>\n        <title>{title} | INST.</title>\n        <meta name=\"Description\" content={subtitle} />\n      </Head>\n\n      <Container>\n        <Block paddingTop={['15px', '20px', '30px', '40px']}>\n          <Row>\n            <Col lg={3}>\n              <AppsMenu />\n            </Col>\n            <Col lg={9}>\n              <FirebaseCrud />\n              {/* <Block\n                paddingTop={['10px', '10px', 0]}\n                overrides={{\n                  Block: {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between',\n                      marginBottom: '40px',\n                    },\n                  },\n                }}\n              >\n                <Block>\n                  <Block\n                    as=\"h3\"\n                    overrides={{\n                      Block: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.font450,\n                            color: $theme.colors.primaryA,\n                            marginBottom: '10px',\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    {title}\n                  </Block>\n                  <Block\n                    as=\"p\"\n                    overrides={{\n                      Block: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.font200,\n                            color: $theme.colors.contentSecondary,\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    {subtitle}\n                  </Block>\n                </Block>\n                <Block overrides={{ Block: { style: { flexShrink: 0 } } }}>\n                  <Button\n                    onClick={handleAddArticle}\n                    overrides={{\n                      BaseButton: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.font250,\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    Add Article\n                  </Button>\n                </Block>\n              </Block>\n\n              <Block\n                overrides={{\n                  Block: {\n                    style: {\n                      minHeight: '150px',\n                    },\n                  },\n                }}\n              >\n                <StyledTable $gridTemplateColumns=\"130px 200px auto max-content max-content\">\n                  <StyledTableHeadAlt>Title</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Description</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Slug</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Status</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Action</StyledTableHeadAlt>\n                  {articles && articles.length\n                    ? articles.map((item, index) => {\n                        const striped = index % 2 === 0;\n                        if (item && !item.status) return null;\n                        const status = item.status;\n                        let tag;\n                        switch (status) {\n                          case 'publish':\n                            tag = (\n                              <Tag\n                                kind=\"positive\"\n                                variant=\"solid\"\n                                closeable={false}\n                              >\n                                {status}\n                              </Tag>\n                            );\n                            break;\n                          case 'draft':\n                            tag = (\n                              <Tag\n                                kind=\"neutral\"\n                                variant=\"light\"\n                                closeable={false}\n                              >\n                                {status}\n                              </Tag>\n                            );\n                            break;\n                        }\n                        return (\n                          <Fragment key={index}>\n                            <StyledBodyCell $striped={striped}>\n                              {item.title}\n                            </StyledBodyCell>\n                            <StyledBodyCell $striped={striped}>\n                              {item.description}\n                            </StyledBodyCell>\n                            <StyledBodyCell $striped={striped}>\n                              {item.slug}\n                            </StyledBodyCell>\n                            <StyledBodyCell $striped={striped}>\n                              {tag}\n                            </StyledBodyCell>\n                            <StyledBodyCell $striped={striped}>\n                              <IconButton\n                                onClick={() => handleUpdateArticle(item)}\n                              >\n                                <IoIosEye />\n                              </IconButton>\n                              <IconButton\n                                onClick={() => handleDeleteArticle(item.id)}\n                              >\n                                <AiFillCloseSquare />\n                              </IconButton>\n                            </StyledBodyCell>\n                          </Fragment>\n                        );\n                      })\n                    : null}\n                </StyledTable>\n              </Block> */}\n            </Col>\n          </Row>\n        </Block>\n      </Container>\n\n      <Modal\n        onClose={handleModdalClose}\n        closeable\n        isOpen={visible}\n        animate\n        size=\"default\"\n        role=\"dialog\"\n        unstable_ModalBackdropScroll={true}\n        overrides={{\n          Root: {\n            style: () => {\n              return { zIndex: 9999 };\n            },\n          },\n        }}\n      >\n        <ModalHeader>\n          {editState ? 'Update Article' : 'Add Article'}\n        </ModalHeader>\n\n        <ModalBody style={{ overflow: 'hidden' }}>\n          <FlexGrid flexGridColumnCount={1}>\n            <FlexGridItem>\n              <FormControl\n                label=\"Title\"\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Input\n                  name=\"title\"\n                  value={article.title}\n                  onChange={handleOnChange('title')}\n                  overrides={{\n                    InputContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem>\n              <FormControl\n                label=\"Description\"\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Textarea\n                  value={article.description}\n                  onChange={handleOnChange('description')}\n                  overrides={{\n                    InputContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem>\n              <FormControl\n                label=\"Slug\"\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Input\n                  value={article.slug}\n                  onChange={handleOnChange('slug')}\n                  overrides={{\n                    InputContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem>\n              <FormControl\n                label=\"Status\"\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Select\n                  options={statusOptions}\n                  placeholder=\"\"\n                  value={article.status}\n                  onChange={handleOnChange('status')}\n                  overrides={{\n                    ControlContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem\n              overrides={{ Block: { style: { marginTop: '30px' } } }}\n            >\n              <Button\n                onClick={handleOnSubmit}\n                overrides={{\n                  BaseButton: {\n                    style: ({ $theme }) => {\n                      return {\n                        ...$theme.typography.font250,\n                      };\n                    },\n                  },\n                }}\n              >\n                {editState ? 'Update Article' : 'Add Article'}\n              </Button>\n              <Button\n                kind=\"minimal\"\n                onClick={handleModdalClose}\n                overrides={{\n                  BaseButton: {\n                    style: ({ $theme }) => {\n                      return {\n                        ...$theme.typography.font250,\n                      };\n                    },\n                  },\n                }}\n              >\n                Cancel\n              </Button>\n            </FlexGridItem>\n          </FlexGrid>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n};\n\nexport default FirebaseCRUD;\n"]},"metadata":{},"sourceType":"module"}