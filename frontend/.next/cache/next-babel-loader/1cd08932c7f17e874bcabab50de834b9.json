{"ast":null,"code":"var _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/containers/Crud/AddEdit.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Button } from 'baseui/button';\nimport { Modal, ModalHeader, ModalBody } from 'baseui/modal';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Textarea } from 'baseui/textarea';\nimport { Select } from 'baseui/select';\n\nconst AddEditModal = ({\n  error,\n  article,\n  visible,\n  editState,\n  statusOptions,\n  handleOnChange,\n  handleOnSubmit,\n  handleModdalClose\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    onClose: handleModdalClose,\n    closeable: true,\n    isOpen: visible,\n    animate: true,\n    size: \"default\",\n    role: \"dialog\",\n    unstable_ModalBackdropScroll: true,\n    overrides: {\n      Root: {\n        style: () => {\n          return {\n            zIndex: 9999\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(ModalHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, editState ? 'Update Article' : 'Add Article'), __jsx(ModalBody, {\n    style: {\n      overflow: 'hidden'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(FlexGrid, {\n    flexGridColumnCount: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Title\",\n    error: error && !article.title ? 'Please fill out title' : null,\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Input, {\n    name: \"title\",\n    value: article.title,\n    error: error && !article.title,\n    onChange: handleOnChange('title'),\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Description\",\n    error: error && !article.description ? 'Please fill out description' : null,\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Textarea, {\n    value: article.description,\n    onChange: handleOnChange('description'),\n    error: error && !article.description,\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Slug\",\n    error: error && !article.slug ? 'Please fill out slug' : null,\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Input, {\n    value: article.slug,\n    onChange: handleOnChange('slug'),\n    error: error && !article.slug,\n    overrides: {\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    label: \"Status\",\n    error: error && !article.status.length ? 'Please choose a status option' : null,\n    overrides: {\n      Label: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(Select, {\n    options: statusOptions,\n    placeholder: \"\",\n    value: article.status,\n    error: error && !article.status.length,\n    onChange: handleOnChange('status'),\n    overrides: {\n      ControlContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }))), __jsx(FlexGridItem, {\n    overrides: {\n      Block: {\n        style: {\n          marginTop: '30px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: handleOnSubmit,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, editState ? 'Update Article' : 'Add Article'), __jsx(Button, {\n    kind: \"minimal\",\n    onClick: handleModdalClose,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Cancel\"))))));\n};\n\nexport default AddEditModal;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/containers/Crud/AddEdit.tsx"],"names":["React","Button","Modal","ModalHeader","ModalBody","FlexGrid","FlexGridItem","FormControl","Input","Textarea","Select","AddEditModal","error","article","visible","editState","statusOptions","handleOnChange","handleOnSubmit","handleModdalClose","Root","style","zIndex","overflow","title","Label","$theme","typography","font200","InputContainer","backgroundColor","description","slug","status","length","ControlContainer","Block","marginTop","BaseButton","font250"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'baseui/button';\nimport { Modal, ModalHeader, ModalBody } from 'baseui/modal';\nimport { FlexGrid, FlexGridItem } from 'baseui/flex-grid';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Textarea } from 'baseui/textarea';\nimport { Select } from 'baseui/select';\n\nconst AddEditModal = ({\n  error,\n  article,\n  visible,\n  editState,\n  statusOptions,\n  handleOnChange,\n  handleOnSubmit,\n  handleModdalClose,\n}) => {\n  return (\n    <>\n      <Modal\n        onClose={handleModdalClose}\n        closeable\n        isOpen={visible}\n        animate\n        size=\"default\"\n        role=\"dialog\"\n        unstable_ModalBackdropScroll={true}\n        overrides={{\n          Root: {\n            style: () => {\n              return { zIndex: 9999 };\n            },\n          },\n        }}\n      >\n        <ModalHeader>\n          {editState ? 'Update Article' : 'Add Article'}\n        </ModalHeader>\n\n        <ModalBody style={{ overflow: 'hidden' }}>\n          <FlexGrid flexGridColumnCount={1}>\n            <FlexGridItem>\n              <FormControl\n                label=\"Title\"\n                error={error && !article.title ? 'Please fill out title' : null}\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Input\n                  name=\"title\"\n                  value={article.title}\n                  error={error && !article.title}\n                  onChange={handleOnChange('title')}\n                  overrides={{\n                    InputContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem>\n              <FormControl\n                label=\"Description\"\n                error={\n                  error && !article.description\n                    ? 'Please fill out description'\n                    : null\n                }\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Textarea\n                  value={article.description}\n                  onChange={handleOnChange('description')}\n                  error={error && !article.description}\n                  overrides={{\n                    InputContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem>\n              <FormControl\n                label=\"Slug\"\n                error={error && !article.slug ? 'Please fill out slug' : null}\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Input\n                  value={article.slug}\n                  onChange={handleOnChange('slug')}\n                  error={error && !article.slug}\n                  overrides={{\n                    InputContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem>\n              <FormControl\n                label=\"Status\"\n                error={\n                  error && !article.status.length\n                    ? 'Please choose a status option'\n                    : null\n                }\n                overrides={{\n                  Label: {\n                    style: ({ $theme }) => {\n                      return { ...$theme.typography.font200 };\n                    },\n                  },\n                }}\n              >\n                <Select\n                  options={statusOptions}\n                  placeholder=\"\"\n                  value={article.status}\n                  error={error && !article.status.length}\n                  onChange={handleOnChange('status')}\n                  overrides={{\n                    ControlContainer: {\n                      style: () => {\n                        return { backgroundColor: 'transparent' };\n                      },\n                    },\n                  }}\n                />\n              </FormControl>\n            </FlexGridItem>\n\n            <FlexGridItem\n              overrides={{ Block: { style: { marginTop: '30px' } } }}\n            >\n              <Button\n                onClick={handleOnSubmit}\n                overrides={{\n                  BaseButton: {\n                    style: ({ $theme }) => {\n                      return {\n                        ...$theme.typography.font250,\n                      };\n                    },\n                  },\n                }}\n              >\n                {editState ? 'Update Article' : 'Add Article'}\n              </Button>\n              <Button\n                kind=\"minimal\"\n                onClick={handleModdalClose}\n                overrides={{\n                  BaseButton: {\n                    style: ({ $theme }) => {\n                      return {\n                        ...$theme.typography.font250,\n                      };\n                    },\n                  },\n                }}\n              >\n                Cancel\n              </Button>\n            </FlexGridItem>\n          </FlexGrid>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddEditModal;\n"]},"metadata":{},"sourceType":"module"}