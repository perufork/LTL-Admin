{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { styled } from 'baseui';\nexport const MenuItem = styled('li', ({\n  $theme\n}) => ({\n  listStyle: 'none',\n  marginBottom: $theme.sizing.scale600\n}));\nexport const MenuLink = styled('a', ({\n  $theme\n}) => _objectSpread({}, $theme.typography.font250, {\n  cursor: 'pointer',\n  color: $theme.colors.primary600,\n  transition: 'all 0.3s ease',\n  ':hover': {\n    color: $theme.colors.primary\n  }\n}));\nexport const AvatarWrapper = styled('div', ({\n  $theme\n}) => ({\n  marginBottom: $theme.sizing.scale700\n}));\nexport const ButtonGroup = styled('div', ({\n  $theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: $theme.sizing.scale600\n}));\nexport const Title = styled('h3', ({\n  $theme\n}) => _objectSpread({}, $theme.typography.font450, {\n  marginBottom: $theme.sizing.scale500\n}));\nexport const Subtitle = styled('p', ({\n  $theme\n}) => _objectSpread({}, $theme.typography.font200, {\n  color: $theme.colors.mono700\n}));\nexport const SpaceBetween = styled('div', ({\n  $theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: `${$theme.sizing.scale600} 0`,\n  borderBottom: `1px solid ${$theme.colors.primary100}`\n}));\nexport const TextButton = styled('button', {\n  border: 0,\n  cursor: 'pointer',\n  backgroundColor: 'transparent',\n  ':focus': {\n    outline: 0\n  }\n});","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/components/PageStyles/Settings.styled.tsx"],"names":["styled","MenuItem","$theme","listStyle","marginBottom","sizing","scale600","MenuLink","typography","font250","cursor","color","colors","primary600","transition","primary","AvatarWrapper","scale700","ButtonGroup","display","alignItems","marginTop","Title","font450","scale500","Subtitle","font200","mono700","SpaceBetween","justifyContent","padding","borderBottom","primary100","TextButton","border","backgroundColor","outline"],"mappings":";;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAGD,MAAM,CAAC,IAAD,EAAO,CAAC;AAAEE,EAAAA;AAAF,CAAD,MAAiB;AACpDC,EAAAA,SAAS,EAAE,MADyC;AAEpDC,EAAAA,YAAY,EAAEF,MAAM,CAACG,MAAP,CAAcC;AAFwB,CAAjB,CAAP,CAAvB;AAKP,OAAO,MAAMC,QAAQ,GAAGP,MAAM,CAAC,GAAD,EAAM,CAAC;AAAEE,EAAAA;AAAF,CAAD,uBAC/BA,MAAM,CAACM,UAAP,CAAkBC,OADa;AAElCC,EAAAA,MAAM,EAAE,SAF0B;AAGlCC,EAAAA,KAAK,EAAET,MAAM,CAACU,MAAP,CAAcC,UAHa;AAIlCC,EAAAA,UAAU,EAAE,eAJsB;AAKlC,YAAU;AACRH,IAAAA,KAAK,EAAET,MAAM,CAACU,MAAP,CAAcG;AADb;AALwB,EAAN,CAAvB;AAUP,OAAO,MAAMC,aAAa,GAAGhB,MAAM,CAAC,KAAD,EAAQ,CAAC;AAAEE,EAAAA;AAAF,CAAD,MAAiB;AAC1DE,EAAAA,YAAY,EAAEF,MAAM,CAACG,MAAP,CAAcY;AAD8B,CAAjB,CAAR,CAA5B;AAIP,OAAO,MAAMC,WAAW,GAAGlB,MAAM,CAAC,KAAD,EAAQ,CAAC;AAAEE,EAAAA;AAAF,CAAD,MAAiB;AACxDiB,EAAAA,OAAO,EAAE,MAD+C;AAExDC,EAAAA,UAAU,EAAE,QAF4C;AAGxDC,EAAAA,SAAS,EAAEnB,MAAM,CAACG,MAAP,CAAcC;AAH+B,CAAjB,CAAR,CAA1B;AAMP,OAAO,MAAMgB,KAAK,GAAGtB,MAAM,CAAC,IAAD,EAAO,CAAC;AAAEE,EAAAA;AAAF,CAAD,uBAC7BA,MAAM,CAACM,UAAP,CAAkBe,OADW;AAEhCnB,EAAAA,YAAY,EAAEF,MAAM,CAACG,MAAP,CAAcmB;AAFI,EAAP,CAApB;AAKP,OAAO,MAAMC,QAAQ,GAAGzB,MAAM,CAAC,GAAD,EAAM,CAAC;AAAEE,EAAAA;AAAF,CAAD,uBAC/BA,MAAM,CAACM,UAAP,CAAkBkB,OADa;AAElCf,EAAAA,KAAK,EAAET,MAAM,CAACU,MAAP,CAAce;AAFa,EAAN,CAAvB;AAKP,OAAO,MAAMC,YAAY,GAAG5B,MAAM,CAAC,KAAD,EAAQ,CAAC;AAAEE,EAAAA;AAAF,CAAD,MAAiB;AACzDiB,EAAAA,OAAO,EAAE,MADgD;AAEzDC,EAAAA,UAAU,EAAE,QAF6C;AAGzDS,EAAAA,cAAc,EAAE,eAHyC;AAIzDC,EAAAA,OAAO,EAAG,GAAE5B,MAAM,CAACG,MAAP,CAAcC,QAAS,IAJsB;AAKzDyB,EAAAA,YAAY,EAAG,aAAY7B,MAAM,CAACU,MAAP,CAAcoB,UAAW;AALK,CAAjB,CAAR,CAA3B;AAQP,OAAO,MAAMC,UAAU,GAAGjC,MAAM,CAAC,QAAD,EAAW;AACzCkC,EAAAA,MAAM,EAAE,CADiC;AAEzCxB,EAAAA,MAAM,EAAE,SAFiC;AAGzCyB,EAAAA,eAAe,EAAE,aAHwB;AAIzC,YAAU;AACRC,IAAAA,OAAO,EAAE;AADD;AAJ+B,CAAX,CAAzB","sourcesContent":["import { styled } from 'baseui';\n\nexport const MenuItem = styled('li', ({ $theme }) => ({\n  listStyle: 'none',\n  marginBottom: $theme.sizing.scale600,\n}));\n\nexport const MenuLink = styled('a', ({ $theme }) => ({\n  ...$theme.typography.font250,\n  cursor: 'pointer',\n  color: $theme.colors.primary600,\n  transition: 'all 0.3s ease',\n  ':hover': {\n    color: $theme.colors.primary,\n  },\n}));\n\nexport const AvatarWrapper = styled('div', ({ $theme }) => ({\n  marginBottom: $theme.sizing.scale700,\n}));\n\nexport const ButtonGroup = styled('div', ({ $theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: $theme.sizing.scale600,\n}));\n\nexport const Title = styled('h3', ({ $theme }) => ({\n  ...$theme.typography.font450,\n  marginBottom: $theme.sizing.scale500,\n}));\n\nexport const Subtitle = styled('p', ({ $theme }) => ({\n  ...$theme.typography.font200,\n  color: $theme.colors.mono700,\n}));\n\nexport const SpaceBetween = styled('div', ({ $theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: `${$theme.sizing.scale600} 0`,\n  borderBottom: `1px solid ${$theme.colors.primary100}`,\n}));\n\nexport const TextButton = styled('button', {\n  border: 0,\n  cursor: 'pointer',\n  backgroundColor: 'transparent',\n  ':focus': {\n    outline: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}