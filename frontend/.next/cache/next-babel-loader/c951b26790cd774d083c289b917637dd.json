{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/pages/apps/invoice/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport { format } from 'date-fns';\nimport { useRouter } from 'next/router';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { AiFillCloseSquare } from 'react-icons/ai';\nimport { IoIosEye } from 'react-icons/io';\nimport { Block } from 'baseui/block';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { Tag } from 'baseui/tag';\nimport { Button } from 'baseui/button';\nimport Container from '../../../components/UiElements/Container/Container';\nimport IconButton from '../../../components/UiElements/IconButton/IconButton';\nimport AppsMenu from '../../../components/SideMenu/AppsMenu';\nimport { StyledTableHeadAlt } from '../../../components/PageStyles/Apps.styled';\nimport { withApollo } from '../../../apollo/client';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst GET_INVOICES = gql`\n  query {\n    invoices {\n      id\n      name\n      customer {\n        id\n        name\n        address\n      }\n      vendor {\n        id\n        name\n        address\n      }\n      items {\n        id\n        name\n        unitPrice\n      }\n      total\n      status\n      createdAt\n    }\n  }\n`;\nconst DELETE_INVOICE = gql`\n  mutation DeleteInvoice($id: String!) {\n    deleteInvoice(id: $id) {\n      id\n      name\n      customer {\n        id\n        name\n        address\n      }\n      vendor {\n        id\n        name\n        address\n      }\n      items {\n        id\n        name\n        unitPrice\n      }\n      total\n      status\n      createdAt\n    }\n  }\n`;\nconst TITLE = 'Invoice';\nconst SUB_TITLE = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod';\n\nconst Invoice = () => {\n  var _data$invoices;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_INVOICES);\n  const [deleteInvoice] = useMutation(DELETE_INVOICE, {\n    update(cache, {\n      data: {\n        deleteInvoice\n      }\n    }) {\n      const {\n        invoices\n      } = cache.readQuery({\n        query: GET_INVOICES\n      });\n      cache.writeQuery({\n        query: GET_INVOICES,\n        data: {\n          invoices: invoices.filter(invoice => invoice.id !== deleteInvoice.id)\n        }\n      });\n    }\n\n  });\n  const router = useRouter();\n  if (loading) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Loading .....\");\n  console.log(data, 'invoi');\n\n  function removeInvoice(id) {\n    deleteInvoice({\n      variables: {\n        id\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, TITLE, \" | INST.\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: SUB_TITLE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['15px', '20px', '30px', '40px'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Col, {\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(AppsMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), __jsx(Col, {\n    lg: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['10px', '10px', 0],\n    overrides: {\n      Block: {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          marginBottom: '40px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(Block, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(Block, {\n    as: \"h3\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font450, {\n            marginBottom: '10px'\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, TITLE), __jsx(Block, {\n    as: \"p\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200, {\n            color: $theme.colors.primary600\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, SUB_TITLE)), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          flexShrink: 0\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: () => router.push(`${router.pathname}/add`),\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font250);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Add Invoice\"))), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          minHeight: '150px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(StyledTable, {\n    $gridTemplateColumns: \"max-content max-content auto auto max-content max-content max-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Number\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Date\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Bill From\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Bill To\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Total Cost\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Status\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Action\"), data === null || data === void 0 ? void 0 : (_data$invoices = data.invoices) === null || _data$invoices === void 0 ? void 0 : _data$invoices.map((item, index) => {\n    var _item$status, _item$status2, _item$vendor, _item$customer;\n\n    const striped = index % 2 === 0;\n    const status = (item === null || item === void 0 ? void 0 : (_item$status = item.status) === null || _item$status === void 0 ? void 0 : _item$status.charAt(0).toUpperCase()) + (item === null || item === void 0 ? void 0 : (_item$status2 = item.status) === null || _item$status2 === void 0 ? void 0 : _item$status2.slice(1).toLowerCase());\n    let tag;\n\n    switch (item.status) {\n      case 'SHIPPED':\n        tag = __jsx(Tag, {\n          kind: \"accent\",\n          variant: \"solid\",\n          closeable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, status);\n        break;\n\n      case 'PENDING':\n        tag = __jsx(Tag, {\n          kind: \"negative\",\n          variant: \"solid\",\n          closeable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, status);\n        break;\n\n      case 'DELIVERED':\n        tag = __jsx(Tag, {\n          kind: \"positive\",\n          variant: \"solid\",\n          closeable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, status);\n        break;\n    }\n\n    return __jsx(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"# \", item.id), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, format(new Date(item.createdAt), 'yyyy-MM-dd')), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, (_item$vendor = item.vendor) === null || _item$vendor === void 0 ? void 0 : _item$vendor.address), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, (_item$customer = item.customer) === null || _item$customer === void 0 ? void 0 : _item$customer.address), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, item.total), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, tag), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      onClick: () => router.push('/apps/invoice/[id]', `/apps/invoice/${item.id}`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, __jsx(IoIosEye, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })), __jsx(IconButton, {\n      onClick: () => removeInvoice(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, __jsx(AiFillCloseSquare, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }))));\n  }))))))));\n};\n\nexport default withApollo(Invoice);","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/pages/apps/invoice/index.tsx"],"names":["React","Fragment","Head","format","useRouter","Row","Col","AiFillCloseSquare","IoIosEye","Block","StyledTable","StyledBodyCell","Tag","Button","Container","IconButton","AppsMenu","StyledTableHeadAlt","withApollo","useQuery","useMutation","gql","GET_INVOICES","DELETE_INVOICE","TITLE","SUB_TITLE","Invoice","data","loading","error","deleteInvoice","update","cache","invoices","readQuery","query","writeQuery","filter","invoice","id","router","console","log","removeInvoice","variables","style","display","alignItems","justifyContent","marginBottom","$theme","typography","font450","font200","color","colors","primary600","flexShrink","push","pathname","BaseButton","font250","minHeight","map","item","index","striped","status","charAt","toUpperCase","slice","toLowerCase","tag","Date","createdAt","vendor","address","customer","total"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport { format } from 'date-fns';\nimport { useRouter } from 'next/router';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { AiFillCloseSquare } from 'react-icons/ai';\nimport { IoIosEye } from 'react-icons/io';\nimport { Block } from 'baseui/block';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { Tag } from 'baseui/tag';\nimport { Button } from 'baseui/button';\nimport Container from '../../../components/UiElements/Container/Container';\nimport IconButton from '../../../components/UiElements/IconButton/IconButton';\nimport AppsMenu from '../../../components/SideMenu/AppsMenu';\nimport { StyledTableHeadAlt } from '../../../components/PageStyles/Apps.styled';\nimport { withApollo } from '../../../apollo/client';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst GET_INVOICES = gql`\n  query {\n    invoices {\n      id\n      name\n      customer {\n        id\n        name\n        address\n      }\n      vendor {\n        id\n        name\n        address\n      }\n      items {\n        id\n        name\n        unitPrice\n      }\n      total\n      status\n      createdAt\n    }\n  }\n`;\n\nconst DELETE_INVOICE = gql`\n  mutation DeleteInvoice($id: String!) {\n    deleteInvoice(id: $id) {\n      id\n      name\n      customer {\n        id\n        name\n        address\n      }\n      vendor {\n        id\n        name\n        address\n      }\n      items {\n        id\n        name\n        unitPrice\n      }\n      total\n      status\n      createdAt\n    }\n  }\n`;\n\nconst TITLE = 'Invoice';\nconst SUB_TITLE =\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod';\nconst Invoice: NextPage<{}> = () => {\n  const { data, loading, error } = useQuery(GET_INVOICES);\n  const [deleteInvoice] = useMutation(DELETE_INVOICE, {\n    update(cache, { data: { deleteInvoice } }) {\n      const { invoices } = cache.readQuery<any>({ query: GET_INVOICES });\n      cache.writeQuery({\n        query: GET_INVOICES,\n        data: {\n          invoices: invoices.filter(\n            (invoice: any) => invoice.id !== deleteInvoice.id\n          ),\n        },\n      });\n    },\n  });\n  const router = useRouter();\n  if (loading) return <div>Loading .....</div>;\n  console.log(data, 'invoi');\n\n  function removeInvoice(id: any) {\n    deleteInvoice({ variables: { id } });\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{TITLE} | INST.</title>\n        <meta name=\"Description\" content={SUB_TITLE} />\n      </Head>\n\n      <Container>\n        <Block paddingTop={['15px', '20px', '30px', '40px']}>\n          <Row>\n            <Col lg={3}>\n              <AppsMenu />\n            </Col>\n            <Col lg={9}>\n              <Block\n                paddingTop={['10px', '10px', 0]}\n                overrides={{\n                  Block: {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between',\n                      marginBottom: '40px',\n                    },\n                  },\n                }}\n              >\n                <Block>\n                  <Block\n                    as=\"h3\"\n                    overrides={{\n                      Block: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.font450,\n                            marginBottom: '10px',\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    {TITLE}\n                  </Block>\n                  <Block\n                    as=\"p\"\n                    overrides={{\n                      Block: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.font200,\n                            color: $theme.colors.primary600,\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    {SUB_TITLE}\n                  </Block>\n                </Block>\n                <Block overrides={{ Block: { style: { flexShrink: 0 } } }}>\n                  <Button\n                    onClick={() => router.push(`${router.pathname}/add`)}\n                    overrides={{\n                      BaseButton: {\n                        style: ({ $theme }) => {\n                          return {\n                            ...$theme.typography.font250,\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    Add Invoice\n                  </Button>\n                </Block>\n              </Block>\n\n              <Block\n                overrides={{\n                  Block: {\n                    style: {\n                      minHeight: '150px',\n                    },\n                  },\n                }}\n              >\n                <StyledTable $gridTemplateColumns=\"max-content max-content auto auto max-content max-content max-content\">\n                  <StyledTableHeadAlt>Number</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Date</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Bill From</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Bill To</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Total Cost</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Status</StyledTableHeadAlt>\n                  <StyledTableHeadAlt>Action</StyledTableHeadAlt>\n                  {data?.invoices?.map((item: any, index: number) => {\n                    const striped = index % 2 === 0;\n                    const status =\n                      item?.status?.charAt(0).toUpperCase() +\n                      item?.status?.slice(1).toLowerCase();\n                    let tag;\n                    switch (item.status) {\n                      case 'SHIPPED':\n                        tag = (\n                          <Tag kind=\"accent\" variant=\"solid\" closeable={false}>\n                            {status}\n                          </Tag>\n                        );\n                        break;\n                      case 'PENDING':\n                        tag = (\n                          <Tag\n                            kind=\"negative\"\n                            variant=\"solid\"\n                            closeable={false}\n                          >\n                            {status}\n                          </Tag>\n                        );\n                        break;\n                      case 'DELIVERED':\n                        tag = (\n                          <Tag\n                            kind=\"positive\"\n                            variant=\"solid\"\n                            closeable={false}\n                          >\n                            {status}\n                          </Tag>\n                        );\n                        break;\n                    }\n                    return (\n                      <Fragment key={index}>\n                        <StyledBodyCell $striped={striped}>\n                          # {item.id}\n                        </StyledBodyCell>\n                        <StyledBodyCell $striped={striped}>\n                          {format(new Date(item.createdAt), 'yyyy-MM-dd')}\n                        </StyledBodyCell>\n                        <StyledBodyCell $striped={striped}>\n                          {item.vendor?.address}\n                        </StyledBodyCell>\n                        <StyledBodyCell $striped={striped}>\n                          {item.customer?.address}\n                        </StyledBodyCell>\n                        <StyledBodyCell $striped={striped}>\n                          {item.total}\n                        </StyledBodyCell>\n                        <StyledBodyCell $striped={striped}>\n                          {tag}\n                        </StyledBodyCell>\n                        <StyledBodyCell $striped={striped}>\n                          <IconButton\n                            onClick={() =>\n                              router.push(\n                                '/apps/invoice/[id]',\n                                `/apps/invoice/${item.id}`\n                              )\n                            }\n                          >\n                            <IoIosEye />\n                          </IconButton>\n                          <IconButton onClick={() => removeInvoice(item.id)}>\n                            <AiFillCloseSquare />\n                          </IconButton>\n                        </StyledBodyCell>\n                      </Fragment>\n                    );\n                  })}\n                </StyledTable>\n              </Block>\n            </Col>\n          </Row>\n        </Block>\n      </Container>\n    </>\n  );\n};\n\nexport default withApollo(Invoice);\n"]},"metadata":{},"sourceType":"module"}