{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/merin/dashboard-apps/inst/frontend/containers/Calendar/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport moment from 'moment';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport { events } from './data';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport CreateOrUpdateEvent from './CreateOrUpdateEvent';\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nfunction CalendarApp() {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [actionType, setActionType] = React.useState('create');\n  const [event, setEvent] = React.useState(null);\n  const [state, setState] = React.useState({\n    events: events\n  });\n\n  function moveEvent({\n    event,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot\n  }) {\n    const {\n      events\n    } = state;\n    const idx = events.indexOf(event);\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const updatedEvent = _objectSpread({}, event, {\n      start,\n      end,\n      allDay\n    });\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n    setState(_objectSpread({}, state, {\n      events: nextEvents\n    })); // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  }\n\n  function resizeEvent({\n    event,\n    start,\n    end\n  }) {\n    const {\n      events\n    } = state;\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id == event.id ? _objectSpread({}, existingEvent, {\n        start,\n        end\n      }) : existingEvent;\n    });\n    setState(_objectSpread({}, state, {\n      events: nextEvents\n    })); //alert(`${event.title} was resized to ${start}-${end}`)\n  }\n\n  function newEvent(event) {\n    let idList = state.events.map(a => a.id);\n    let newId = Math.max(...idList) + 1;\n    let hour = {\n      id: newId,\n      title: event.title,\n      allDay: event.slots.length == 1,\n      desc: event.desc,\n      start: event.slots.length == 1 ? event.start : event.slots[0],\n      end: event.slots.length == 1 ? event.end : event.slots[1]\n    };\n    setState(_objectSpread({}, state, {\n      events: state.events.concat([hour])\n    }));\n    return;\n  }\n\n  function updateEvent(event) {\n    let updatedEvent = {\n      id: event.id,\n      title: event.title,\n      allDay: event.slots.length == 1,\n      desc: event.desc,\n      start: event.slots.length == 1 ? event.start : event.slots[0],\n      end: event.slots.length == 1 ? event.end : event.slots[1]\n    };\n    setState(_objectSpread({}, state, {\n      events: state.events.map(item => item.id === updatedEvent.id ? updatedEvent : item)\n    }));\n    return;\n  }\n\n  function onSubmit(value) {\n    setIsOpen(false);\n    setEvent(null);\n\n    if (actionType === 'create') {\n      newEvent(value);\n    }\n\n    if (actionType === 'update') {\n      updateEvent(value);\n    }\n  }\n\n  function onSelectEvent(selectedEvent) {\n    setIsOpen(true);\n    setEvent(selectedEvent);\n    setActionType('update');\n  }\n\n  function onSelectSlot(selectedSlot) {\n    setEvent(selectedSlot);\n    setActionType('create');\n    setIsOpen(true);\n  }\n\n  function close() {\n    setIsOpen(false);\n    setEvent(null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(DragAndDropCalendar, {\n    popup: true,\n    selectable: true,\n    localizer: localizer,\n    events: state.events,\n    onEventDrop: moveEvent,\n    resizable: true,\n    onEventResize: resizeEvent,\n    onSelectSlot: onSelectSlot,\n    onSelectEvent: onSelectEvent,\n    onDragStart: console.log,\n    defaultView: Views.MONTH,\n    defaultDate: new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), event && __jsx(CreateOrUpdateEvent, {\n    onClose: close,\n    isOpen: isOpen,\n    event: event,\n    type: actionType,\n    onSubmit: value => onSubmit(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }));\n}\n\nexport default CalendarApp;","map":{"version":3,"sources":["/Users/merin/dashboard-apps/inst/frontend/containers/Calendar/index.tsx"],"names":["React","moment","Calendar","Views","momentLocalizer","events","withDragAndDrop","CreateOrUpdateEvent","localizer","DragAndDropCalendar","CalendarApp","isOpen","setIsOpen","useState","actionType","setActionType","event","setEvent","state","setState","moveEvent","start","end","isAllDay","droppedOnAllDaySlot","idx","indexOf","allDay","updatedEvent","nextEvents","splice","resizeEvent","map","existingEvent","id","newEvent","idList","a","newId","Math","max","hour","title","slots","length","desc","concat","updateEvent","item","onSubmit","value","onSelectEvent","selectedEvent","onSelectSlot","selectedSlot","close","console","log","MONTH","Date"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,eAA1B,QAAiD,oBAAjD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AAIA,OAAO,sDAAP;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,MAAMC,SAAc,GAAGJ,eAAe,CAACH,MAAD,CAAtC;AAEA,MAAMQ,mBAAmB,GAAGH,eAAe,CAACJ,QAAD,CAA3C;;AAEA,SAASQ,WAAT,GAAuB;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAA5B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,KAAK,CAACa,QAAN,CAAe,QAAf,CAApC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACa,QAAN,CAAe,IAAf,CAA1B;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBnB,KAAK,CAACa,QAAN,CAAe;AACvCR,IAAAA,MAAM,EAAEA;AAD+B,GAAf,CAA1B;;AAGA,WAASe,SAAT,CAAmB;AACjBJ,IAAAA,KADiB;AAEjBK,IAAAA,KAFiB;AAGjBC,IAAAA,GAHiB;AAIjBC,IAAAA,QAAQ,EAAEC;AAJO,GAAnB,EAKQ;AACN,UAAM;AAAEnB,MAAAA;AAAF,QAAaa,KAAnB;AAEA,UAAMO,GAAG,GAAGpB,MAAM,CAACqB,OAAP,CAAeV,KAAf,CAAZ;AACA,QAAIW,MAAM,GAAGX,KAAK,CAACW,MAAnB;;AAEA,QAAI,CAACX,KAAK,CAACW,MAAP,IAAiBH,mBAArB,EAA0C;AACxCG,MAAAA,MAAM,GAAG,IAAT;AACD,KAFD,MAEO,IAAIX,KAAK,CAACW,MAAN,IAAgB,CAACH,mBAArB,EAA0C;AAC/CG,MAAAA,MAAM,GAAG,KAAT;AACD;;AAED,UAAMC,YAAY,qBAAQZ,KAAR;AAAeK,MAAAA,KAAf;AAAsBC,MAAAA,GAAtB;AAA2BK,MAAAA;AAA3B,MAAlB;;AAEA,UAAME,UAAU,GAAG,CAAC,GAAGxB,MAAJ,CAAnB;AACAwB,IAAAA,UAAU,CAACC,MAAX,CAAkBL,GAAlB,EAAuB,CAAvB,EAA0BG,YAA1B;AAEAT,IAAAA,QAAQ,mBACHD,KADG;AAENb,MAAAA,MAAM,EAAEwB;AAFF,OAAR,CAjBM,CAsBN;AACD;;AAED,WAASE,WAAT,CAAqB;AAAEf,IAAAA,KAAF;AAASK,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAArB,EAAiD;AAC/C,UAAM;AAAEjB,MAAAA;AAAF,QAAaa,KAAnB;AAEA,UAAMW,UAAU,GAAGxB,MAAM,CAAC2B,GAAP,CAAWC,aAAa,IAAI;AAC7C,aAAOA,aAAa,CAACC,EAAd,IAAoBlB,KAAK,CAACkB,EAA1B,qBACED,aADF;AACiBZ,QAAAA,KADjB;AACwBC,QAAAA;AADxB,WAEHW,aAFJ;AAGD,KAJkB,CAAnB;AAMAd,IAAAA,QAAQ,mBACHD,KADG;AAENb,MAAAA,MAAM,EAAEwB;AAFF,OAAR,CAT+C,CAc/C;AACD;;AAED,WAASM,QAAT,CAAkBnB,KAAlB,EAA8B;AAC5B,QAAIoB,MAAM,GAAGlB,KAAK,CAACb,MAAN,CAAa2B,GAAb,CAAiBK,CAAC,IAAIA,CAAC,CAACH,EAAxB,CAAb;AACA,QAAII,KAAK,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGJ,MAAZ,IAAsB,CAAlC;AACA,QAAIK,IAAI,GAAG;AACTP,MAAAA,EAAE,EAAEI,KADK;AAETI,MAAAA,KAAK,EAAE1B,KAAK,CAAC0B,KAFJ;AAGTf,MAAAA,MAAM,EAAEX,KAAK,CAAC2B,KAAN,CAAYC,MAAZ,IAAsB,CAHrB;AAITC,MAAAA,IAAI,EAAE7B,KAAK,CAAC6B,IAJH;AAKTxB,MAAAA,KAAK,EAAEL,KAAK,CAAC2B,KAAN,CAAYC,MAAZ,IAAsB,CAAtB,GAA0B5B,KAAK,CAACK,KAAhC,GAAwCL,KAAK,CAAC2B,KAAN,CAAY,CAAZ,CALtC;AAMTrB,MAAAA,GAAG,EAAEN,KAAK,CAAC2B,KAAN,CAAYC,MAAZ,IAAsB,CAAtB,GAA0B5B,KAAK,CAACM,GAAhC,GAAsCN,KAAK,CAAC2B,KAAN,CAAY,CAAZ;AANlC,KAAX;AAQAxB,IAAAA,QAAQ,mBACHD,KADG;AAENb,MAAAA,MAAM,EAAEa,KAAK,CAACb,MAAN,CAAayC,MAAb,CAAoB,CAACL,IAAD,CAApB;AAFF,OAAR;AAIA;AACD;;AACD,WAASM,WAAT,CAAqB/B,KAArB,EAAiC;AAC/B,QAAIY,YAAY,GAAG;AACjBM,MAAAA,EAAE,EAAElB,KAAK,CAACkB,EADO;AAEjBQ,MAAAA,KAAK,EAAE1B,KAAK,CAAC0B,KAFI;AAGjBf,MAAAA,MAAM,EAAEX,KAAK,CAAC2B,KAAN,CAAYC,MAAZ,IAAsB,CAHb;AAIjBC,MAAAA,IAAI,EAAE7B,KAAK,CAAC6B,IAJK;AAKjBxB,MAAAA,KAAK,EAAEL,KAAK,CAAC2B,KAAN,CAAYC,MAAZ,IAAsB,CAAtB,GAA0B5B,KAAK,CAACK,KAAhC,GAAwCL,KAAK,CAAC2B,KAAN,CAAY,CAAZ,CAL9B;AAMjBrB,MAAAA,GAAG,EAAEN,KAAK,CAAC2B,KAAN,CAAYC,MAAZ,IAAsB,CAAtB,GAA0B5B,KAAK,CAACM,GAAhC,GAAsCN,KAAK,CAAC2B,KAAN,CAAY,CAAZ;AAN1B,KAAnB;AASAxB,IAAAA,QAAQ,mBACHD,KADG;AAENb,MAAAA,MAAM,EAAEa,KAAK,CAACb,MAAN,CAAa2B,GAAb,CAAiBgB,IAAI,IAC3BA,IAAI,CAACd,EAAL,KAAYN,YAAY,CAACM,EAAzB,GAA8BN,YAA9B,GAA6CoB,IADvC;AAFF,OAAR;AAMA;AACD;;AAED,WAASC,QAAT,CAAkBC,KAAlB,EAA8B;AAC5BtC,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAK,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAIH,UAAU,KAAK,QAAnB,EAA6B;AAC3BqB,MAAAA,QAAQ,CAACe,KAAD,CAAR;AACD;;AACD,QAAIpC,UAAU,KAAK,QAAnB,EAA6B;AAC3BiC,MAAAA,WAAW,CAACG,KAAD,CAAX;AACD;AACF;;AACD,WAASC,aAAT,CAAuBC,aAAvB,EAA2C;AACzCxC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,IAAAA,QAAQ,CAACmC,aAAD,CAAR;AACArC,IAAAA,aAAa,CAAC,QAAD,CAAb;AACD;;AACD,WAASsC,YAAT,CAAsBC,YAAtB,EAAyC;AACvCrC,IAAAA,QAAQ,CAACqC,YAAD,CAAR;AACAvC,IAAAA,aAAa,CAAC,QAAD,CAAb;AACAH,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,WAAS2C,KAAT,GAAiB;AACf3C,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAK,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACD,SACE,4BACE,MAAC,mBAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,SAAS,EAAET,SAHb;AAIE,IAAA,MAAM,EAAEU,KAAK,CAACb,MAJhB;AAKE,IAAA,WAAW,EAAEe,SALf;AAME,IAAA,SAAS,MANX;AAOE,IAAA,aAAa,EAAEW,WAPjB;AAQE,IAAA,YAAY,EAAEsB,YARhB;AASE,IAAA,aAAa,EAAEF,aATjB;AAUE,IAAA,WAAW,EAAEK,OAAO,CAACC,GAVvB;AAWE,IAAA,WAAW,EAAEtD,KAAK,CAACuD,KAXrB;AAYE,IAAA,WAAW,EAAE,IAAIC,IAAJ,EAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAeG3C,KAAK,IACJ,MAAC,mBAAD;AACE,IAAA,OAAO,EAAEuC,KADX;AAEE,IAAA,MAAM,EAAE5C,MAFV;AAGE,IAAA,KAAK,EAAEK,KAHT;AAIE,IAAA,IAAI,EAAEF,UAJR;AAKE,IAAA,QAAQ,EAAGoC,KAAD,IAAgBD,QAAQ,CAACC,KAAD,CALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADF;AA2BD;;AAED,eAAexC,WAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar';\nimport { events } from './data';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\n\nimport { addDays } from 'date-fns';\n\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport CreateOrUpdateEvent from './CreateOrUpdateEvent';\nconst localizer: any = momentLocalizer(moment);\n\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\n\nfunction CalendarApp() {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [actionType, setActionType] = React.useState('create');\n  const [event, setEvent] = React.useState(null);\n\n  const [state, setState] = React.useState({\n    events: events,\n  });\n  function moveEvent({\n    event,\n    start,\n    end,\n    isAllDay: droppedOnAllDaySlot,\n  }: any) {\n    const { events } = state;\n\n    const idx = events.indexOf(event);\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const updatedEvent = { ...event, start, end, allDay };\n\n    const nextEvents = [...events];\n    nextEvents.splice(idx, 1, updatedEvent);\n\n    setState({\n      ...state,\n      events: nextEvents,\n    });\n\n    // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n  }\n\n  function resizeEvent({ event, start, end }: any) {\n    const { events } = state;\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id == event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n\n    setState({\n      ...state,\n      events: nextEvents,\n    });\n\n    //alert(`${event.title} was resized to ${start}-${end}`)\n  }\n\n  function newEvent(event: any) {\n    let idList = state.events.map(a => a.id);\n    let newId = Math.max(...idList) + 1;\n    let hour = {\n      id: newId,\n      title: event.title,\n      allDay: event.slots.length == 1,\n      desc: event.desc,\n      start: event.slots.length == 1 ? event.start : event.slots[0],\n      end: event.slots.length == 1 ? event.end : event.slots[1],\n    };\n    setState({\n      ...state,\n      events: state.events.concat([hour]),\n    });\n    return;\n  }\n  function updateEvent(event: any) {\n    let updatedEvent = {\n      id: event.id,\n      title: event.title,\n      allDay: event.slots.length == 1,\n      desc: event.desc,\n      start: event.slots.length == 1 ? event.start : event.slots[0],\n      end: event.slots.length == 1 ? event.end : event.slots[1],\n    };\n\n    setState({\n      ...state,\n      events: state.events.map(item =>\n        item.id === updatedEvent.id ? updatedEvent : item\n      ),\n    });\n    return;\n  }\n\n  function onSubmit(value: any) {\n    setIsOpen(false);\n    setEvent(null);\n    if (actionType === 'create') {\n      newEvent(value);\n    }\n    if (actionType === 'update') {\n      updateEvent(value);\n    }\n  }\n  function onSelectEvent(selectedEvent: any) {\n    setIsOpen(true);\n    setEvent(selectedEvent);\n    setActionType('update');\n  }\n  function onSelectSlot(selectedSlot: any) {\n    setEvent(selectedSlot);\n    setActionType('create');\n    setIsOpen(true);\n  }\n  function close() {\n    setIsOpen(false);\n    setEvent(null);\n  }\n  return (\n    <>\n      <DragAndDropCalendar\n        popup\n        selectable\n        localizer={localizer}\n        events={state.events}\n        onEventDrop={moveEvent}\n        resizable\n        onEventResize={resizeEvent}\n        onSelectSlot={onSelectSlot}\n        onSelectEvent={onSelectEvent}\n        onDragStart={console.log}\n        defaultView={Views.MONTH}\n        defaultDate={new Date()}\n      />\n      {event && (\n        <CreateOrUpdateEvent\n          onClose={close}\n          isOpen={isOpen}\n          event={event}\n          type={actionType}\n          onSubmit={(value: any) => onSubmit(value)}\n        />\n      )}\n    </>\n  );\n}\n\nexport default CalendarApp;\n"]},"metadata":{},"sourceType":"module"}