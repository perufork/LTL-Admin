{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/pages/shop/[slug].tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { FiCheck } from 'react-icons/fi';\nimport { toast } from 'react-toastify';\nimport Head from 'next/head';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nimport { Button } from 'baseui/button';\nimport { Select } from 'baseui/select';\nimport { Input } from 'baseui/input';\nimport PageTitle from '../../components/UiElements/PageTitle/PageTitle';\nimport Container from '../../components/UiElements/Container/Container';\nimport Carousel, { Slide } from '../../components/UiElements/Carousel/Carousel';\nimport useDirection from '../../utils/useDirection';\nimport { withApollo } from '../../apollo/client';\nimport Wrapper, { MediaWrapper, Image, ContentWrapper, List, ListItem, ProductTitle, ProductPrice, ProductDescription } from '../../components/PageStyles/Product.styled';\nimport { useCartDispatch } from '../../contexts/cart/cart.provider';\nconst GET_PRODUCT = gql`\n  query getProductBySlug($slug: String!) {\n    product(slug: $slug) {\n      id\n      name\n      slug\n      price\n      thumbnail\n      gallery {\n        url\n      }\n      colors {\n        id\n        label\n      }\n      features\n      description\n    }\n  }\n`;\ntoast.configure();\n\nconst ProductSingle = () => {\n  const {\n    query: {\n      slug\n    }\n  } = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_PRODUCT, {\n    variables: {\n      slug\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  const dispatch = useCartDispatch();\n  const {\n    0: color,\n    1: setColor\n  } = useState([]);\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState('1');\n  const [direction] = useDirection();\n  console.log(color, quantity, 'color');\n  if (!data) return null;\n  const {\n    id,\n    name,\n    description,\n    price,\n    thumbnail,\n    colors,\n    gallery,\n    features\n  } = data.product;\n\n  function handleAddToCart() {\n    const item = {\n      id,\n      name,\n      thumbnail,\n      color: color.length !== 0 ? color[0].id : undefined,\n      quantity,\n      price\n    };\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: item\n    });\n    toast('Added to the bag', {\n      progressClassName: 'fancy-progress-bar',\n      position: 'top-right',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n  }\n\n  console.log(data, 'data');\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, name, \" | INST.\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), __jsx(PageTitle, {\n    title: name,\n    subtitle: \"Awesome GitHub T-shirts and other cool swag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(MediaWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, gallery && gallery.length !== 0 ? __jsx(Carousel, {\n    options: {\n      direction\n    },\n    controls: false,\n    carouselSelector: \"productGallery\",\n    thumbs: gallery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, gallery.map((item, index) => __jsx(Slide, {\n    key: `gallery-key${index}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: item.url,\n    alt: \"Gallery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })))) : __jsx(Image, {\n    src: thumbnail,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), __jsx(ContentWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(ProductTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, name), __jsx(ProductPrice, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"$ \", price), __jsx(Input, {\n    value: quantity,\n    onChange: e => setQuantity(e.target.value),\n    type: \"number\",\n    overrides: {\n      Root: {\n        style: () => {\n          return {\n            width: '100%',\n            marginBottom: '30px',\n            '@media only screen and (min-width: 376px)': {\n              maxWidth: '240px'\n            }\n          };\n        }\n      },\n      InputContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), colors && __jsx(Select, {\n    options: colors,\n    placeholder: \"Select color\",\n    value: color,\n    onChange: params => setColor(params.value),\n    overrides: {\n      Root: {\n        style: () => {\n          return {\n            width: '100%',\n            '@media only screen and (min-width: 376px)': {\n              maxWidth: '240px'\n            }\n          };\n        }\n      },\n      ControlContainer: {\n        style: () => {\n          return {\n            backgroundColor: 'transparent'\n          };\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), features && __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, features.map((item, index) => __jsx(ListItem, {\n    key: `${slug}_key ${index}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, __jsx(FiCheck, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), \"\\xA0 \", item))), description && __jsx(ProductDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, description), __jsx(Button, {\n    onClick: handleAddToCart,\n    overrides: {\n      BaseButton: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font450, {\n            width: '100%',\n            '@media only screen and (min-width: 376px)': _objectSpread({\n              maxWidth: '240px'\n            }, $theme.typography.font250)\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Add to cart\")))));\n};\n\nexport default withApollo(ProductSingle);","map":{"version":3,"sources":["/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/pages/shop/[slug].tsx"],"names":["React","useState","FiCheck","toast","Head","gql","useQuery","useRouter","Button","Select","Input","PageTitle","Container","Carousel","Slide","useDirection","withApollo","Wrapper","MediaWrapper","Image","ContentWrapper","List","ListItem","ProductTitle","ProductPrice","ProductDescription","useCartDispatch","GET_PRODUCT","configure","ProductSingle","query","slug","data","loading","error","variables","notifyOnNetworkStatusChange","dispatch","color","setColor","quantity","setQuantity","direction","console","log","id","name","description","price","thumbnail","colors","gallery","features","product","handleAddToCart","item","length","undefined","type","payload","progressClassName","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","map","index","url","e","target","value","Root","style","width","marginBottom","maxWidth","InputContainer","backgroundColor","params","ControlContainer","BaseButton","$theme","typography","font450","font250"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FiCheck } from 'react-icons/fi';\nimport { toast } from 'react-toastify';\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nimport { Button } from 'baseui/button';\nimport { Select } from 'baseui/select';\nimport { Input } from 'baseui/input';\nimport PageTitle from '../../components/UiElements/PageTitle/PageTitle';\nimport Container from '../../components/UiElements/Container/Container';\nimport Carousel, { Slide } from '../../components/UiElements/Carousel/Carousel';\nimport useDirection from '../../utils/useDirection';\nimport { withApollo } from '../../apollo/client';\n\nimport Wrapper, {\n  MediaWrapper,\n  Image,\n  ContentWrapper,\n  List,\n  ListItem,\n  ProductTitle,\n  ProductPrice,\n  ProductDescription,\n} from '../../components/PageStyles/Product.styled';\nimport { useCartDispatch } from '../../contexts/cart/cart.provider';\n\nconst GET_PRODUCT = gql`\n  query getProductBySlug($slug: String!) {\n    product(slug: $slug) {\n      id\n      name\n      slug\n      price\n      thumbnail\n      gallery {\n        url\n      }\n      colors {\n        id\n        label\n      }\n      features\n      description\n    }\n  }\n`;\n\ntoast.configure();\n\nconst ProductSingle: NextPage<{}> = () => {\n  const {\n    query: { slug },\n  } = useRouter();\n\n  const { data, loading, error } = useQuery(GET_PRODUCT, {\n    variables: {\n      slug,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const dispatch = useCartDispatch();\n  const [color, setColor] = useState<any>([]);\n  const [quantity, setQuantity] = useState('1');\n  const [direction] = useDirection();\n  console.log(color, quantity, 'color');\n\n  if (!data) return null;\n  const {\n    id,\n    name,\n    description,\n    price,\n    thumbnail,\n    colors,\n    gallery,\n    features,\n  } = data.product;\n\n  function handleAddToCart() {\n    const item = {\n      id,\n      name,\n      thumbnail,\n      color: color.length !== 0 ? color[0].id : undefined,\n      quantity,\n      price,\n    };\n    dispatch({ type: 'ADD_ITEM', payload: item });\n    toast('Added to the bag', {\n      progressClassName: 'fancy-progress-bar',\n      position: 'top-right',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n  }\n\n  console.log(data, 'data');\n\n  return (\n    <>\n      <Head>\n        <title>{name} | INST.</title>\n        <meta name=\"Description\" content={description} />\n      </Head>\n\n      <PageTitle\n        title={name}\n        subtitle=\"Awesome GitHub T-shirts and other cool swag\"\n      />\n\n      <Container>\n        <Wrapper>\n          <MediaWrapper>\n            {gallery && gallery.length !== 0 ? (\n              <Carousel\n                options={{ direction }}\n                controls={false}\n                carouselSelector=\"productGallery\"\n                thumbs={gallery}\n              >\n                {gallery.map((item: any, index: number) => (\n                  <Slide key={`gallery-key${index}`}>\n                    <img src={item.url} alt=\"Gallery\" />\n                  </Slide>\n                ))}\n              </Carousel>\n            ) : (\n              <Image src={thumbnail} alt={name} />\n            )}\n          </MediaWrapper>\n          <ContentWrapper>\n            <ProductTitle>{name}</ProductTitle>\n            <ProductPrice>$ {price}</ProductPrice>\n            <Input\n              value={quantity}\n              onChange={(e: any) => setQuantity(e.target.value)}\n              type=\"number\"\n              overrides={{\n                Root: {\n                  style: () => {\n                    return {\n                      width: '100%',\n                      marginBottom: '30px',\n                      '@media only screen and (min-width: 376px)': {\n                        maxWidth: '240px',\n                      },\n                    };\n                  },\n                },\n                InputContainer: {\n                  style: () => {\n                    return { backgroundColor: 'transparent' };\n                  },\n                },\n              }}\n            />\n            {colors && (\n              <Select\n                options={colors}\n                placeholder=\"Select color\"\n                value={color}\n                onChange={params => setColor(params.value)}\n                overrides={{\n                  Root: {\n                    style: () => {\n                      return {\n                        width: '100%',\n                        '@media only screen and (min-width: 376px)': {\n                          maxWidth: '240px',\n                        },\n                      };\n                    },\n                  },\n                  ControlContainer: {\n                    style: () => {\n                      return { backgroundColor: 'transparent' };\n                    },\n                  },\n                }}\n              />\n            )}\n            {features && (\n              <List>\n                {features.map((item: string, index: number) => (\n                  <ListItem key={`${slug}_key ${index}`}>\n                    <FiCheck />\n                    &nbsp; {item}\n                  </ListItem>\n                ))}\n              </List>\n            )}\n            {description && (\n              <ProductDescription>{description}</ProductDescription>\n            )}\n            <Button\n              onClick={handleAddToCart}\n              overrides={{\n                BaseButton: {\n                  style: ({ $theme }) => {\n                    return {\n                      ...$theme.typography.font450,\n                      width: '100%',\n                      '@media only screen and (min-width: 376px)': {\n                        maxWidth: '240px',\n                        ...$theme.typography.font250,\n                      },\n                    };\n                  },\n                },\n              }}\n            >\n              Add to cart\n            </Button>\n          </ContentWrapper>\n        </Wrapper>\n      </Container>\n    </>\n  );\n};\n\nexport default withApollo(ProductSingle);\n"]},"metadata":{},"sourceType":"module"}