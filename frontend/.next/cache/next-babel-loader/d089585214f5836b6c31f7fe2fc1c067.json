{"ast":null,"code":"var _jsxFileName = \"/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/pages/uielements/product-card.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { StyledTableHeadAlt } from '../../components/PageStyles/Apps.styled';\nimport UiElementsMenu from '../../components/SideMenu/UiElementsMenu';\nimport Container from '../../components/UiElements/Container/Container';\nimport Product from '../../components/UiElements/ProductCard/ProductCard';\nimport { productCardPropsData } from '../../data/uiElementsApiData';\n\nconst ProductCard = () => {\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"UiElements | INST.\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"Inst calendar app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['15px', '20px', '30px', '40px'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Col, {\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(UiElementsMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), __jsx(Col, {\n    lg: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Block, {\n    paddingTop: ['10px', '10px', '10px', 0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Block, {\n    as: \"h2\",\n    paddingBottom: \"20px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font650, {\n            color: $theme.colors.primaryA\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"ProductCard\"), __jsx(Block, {\n    paddingBottom: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Product, {\n    as: \"#\",\n    href: \"#\",\n    thumb: \"https://s3.amazonaws.com/redqteam.com/inst/shop/1.jpg\",\n    title: \"Invertocat Mug\",\n    price: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))), __jsx(Block, {\n    as: \"h2\",\n    paddingBottom: \"10px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font650, {\n            color: $theme.colors.primaryA\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"API\"), __jsx(Block, {\n    as: \"p\",\n    paddingBottom: \"30px\",\n    overrides: {\n      Block: {\n        style: ({\n          $theme\n        }) => {\n          return _objectSpread({}, $theme.typography.font200, {\n            color: $theme.colors.borderInverseOpaque\n          });\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"To get a customized ProductCard, set alignItem prop.\"), __jsx(Block, {\n    overrides: {\n      Block: {\n        style: {\n          minHeight: '150px'\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(StyledTable, {\n    $gridTemplateColumns: \"150px 250px auto auto auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Property\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Description\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Type\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Default\"), __jsx(StyledTableHeadAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Version\"), productCardPropsData.map((item, index) => {\n    const striped = index % 2 === 0;\n    return __jsx(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, item.property), __jsx(StyledBodyCell, {\n      $striped: striped,\n      dangerouslySetInnerHTML: {\n        __html: item.description\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, item.type)), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, item.default), __jsx(StyledBodyCell, {\n      $striped: striped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, item.version && item.version));\n  })))))))));\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["/Users/proprietaire/Desktop/Inst - React Minimalist GraphQL Dashboard/LTL Maps Admin/frontend/pages/uielements/product-card.tsx"],"names":["React","Fragment","Head","Row","Col","Block","StyledTable","StyledBodyCell","StyledTableHeadAlt","UiElementsMenu","Container","Product","productCardPropsData","ProductCard","style","$theme","typography","font650","color","colors","primaryA","font200","borderInverseOpaque","minHeight","map","item","index","striped","property","__html","description","type","default","version"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { NextPage } from 'next';\nimport Head from 'next/head';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { Block } from 'baseui/block';\nimport { StyledTable, StyledBodyCell } from 'baseui/table-grid';\nimport { StyledTableHeadAlt } from '../../components/PageStyles/Apps.styled';\nimport UiElementsMenu from '../../components/SideMenu/UiElementsMenu';\nimport Container from '../../components/UiElements/Container/Container';\nimport Product from '../../components/UiElements/ProductCard/ProductCard';\n\nimport { productCardPropsData } from '../../data/uiElementsApiData';\n\nconst ProductCard: NextPage<{}> = () => {\n  return (\n    <>\n      <Head>\n        <title>UiElements | INST.</title>\n        <meta name=\"Description\" content=\"Inst calendar app\" />\n      </Head>\n\n      <Container>\n        <Block paddingTop={['15px', '20px', '30px', '40px']}>\n          <Row>\n            <Col lg={3}>\n              <UiElementsMenu />\n            </Col>\n\n            <Col lg={9}>\n              <Block paddingTop={['10px', '10px', '10px', 0]}>\n                <Block\n                  as=\"h2\"\n                  paddingBottom=\"20px\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font650,\n                          color: $theme.colors.primaryA,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  ProductCard\n                </Block>\n\n                <Block paddingBottom=\"30px\">\n                  <Row>\n                    <Col xs={6} md={4}>\n                      <Product\n                        as=\"#\"\n                        href=\"#\"\n                        thumb=\"https://s3.amazonaws.com/redqteam.com/inst/shop/1.jpg\"\n                        title=\"Invertocat Mug\"\n                        price=\"20\"\n                      />\n                    </Col>\n                  </Row>\n                </Block>\n\n                <Block\n                  as=\"h2\"\n                  paddingBottom=\"10px\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font650,\n                          color: $theme.colors.primaryA,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  API\n                </Block>\n\n                <Block\n                  as=\"p\"\n                  paddingBottom=\"30px\"\n                  overrides={{\n                    Block: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.font200,\n                          color: $theme.colors.borderInverseOpaque,\n                        };\n                      },\n                    },\n                  }}\n                >\n                  To get a customized ProductCard, set alignItem prop.\n                </Block>\n\n                <Block\n                  overrides={{\n                    Block: {\n                      style: {\n                        minHeight: '150px',\n                      },\n                    },\n                  }}\n                >\n                  <StyledTable $gridTemplateColumns=\"150px 250px auto auto auto\">\n                    <StyledTableHeadAlt>Property</StyledTableHeadAlt>\n                    <StyledTableHeadAlt>Description</StyledTableHeadAlt>\n                    <StyledTableHeadAlt>Type</StyledTableHeadAlt>\n                    <StyledTableHeadAlt>Default</StyledTableHeadAlt>\n                    <StyledTableHeadAlt>Version</StyledTableHeadAlt>\n                    {productCardPropsData.map((item, index) => {\n                      const striped = index % 2 === 0;\n                      return (\n                        <Fragment key={index}>\n                          <StyledBodyCell $striped={striped}>\n                            {item.property}\n                          </StyledBodyCell>\n                          <StyledBodyCell\n                            $striped={striped}\n                            dangerouslySetInnerHTML={{\n                              __html: item.description,\n                            }}\n                          ></StyledBodyCell>\n                          <StyledBodyCell $striped={striped}>\n                            <code>{item.type}</code>\n                          </StyledBodyCell>\n                          <StyledBodyCell $striped={striped}>\n                            {item.default}\n                          </StyledBodyCell>\n                          <StyledBodyCell $striped={striped}>\n                            {item.version && item.version}\n                          </StyledBodyCell>\n                        </Fragment>\n                      );\n                    })}\n                  </StyledTable>\n                </Block>\n              </Block>\n            </Col>\n          </Row>\n        </Block>\n      </Container>\n    </>\n  );\n};\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}